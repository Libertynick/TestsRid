import allure

from base_page.base_page_locators import BaseOpenLocators
from open_pages.cart_page.cart_locators import CartLocators
from open_pages.draft_page.draft_locators import DraftLocators
from open_pages.header.header_locators import UlMenuOrdersLocators
from base_page.base_page import BasePage


@allure.feature('Работа с Черновиком')
class Draft(BasePage):
    """Работа с Черновиком"""

    def open_list_draft(self):
        """Открытие страницы со списком Черновиков"""
        with allure.step('Выбор карточки дистрибьютора Водокомфорт'):
            button_orders_menu = self.find_element(UlMenuOrdersLocators.LOCATOR_ORDERS_BUTTON_MENU)
            self.driver.execute_script("arguments[0].click()", button_orders_menu)
            self.waiting_element_is_visibility_on_the_page(UlMenuOrdersLocators.LOCATOR_DROP_UL_ORDERS)
            button_draft = self.find_element(UlMenuOrdersLocators.LOCATOR_BUTTON_DRAFTS)
            self.driver.execute_script("arguments[0].click()", button_draft)
            self.waiting_element_is_visibility_on_the_page(DraftLocators.LOCATOR_SECOND_DRAFT_IN_LIST)

    def open_old_draft(self):
        """Открытие ранее созданного Черновика"""
        with allure.step('Открытие ранее созданного Черновика'):
            open_old_draft = self.find_element(DraftLocators.LOCATOR_SECOND_DRAFT_IN_LIST)
            self.driver.execute_script("arguments[0].click()", open_old_draft)
            self.waiting_element_is_visibility_on_the_page(DraftLocators.LOCATOR_CODE_IN_DRAFT)

    def open_list_draft_and_open_old_draft_end_user(self):
        """Открытие страницы со списком Черновиков"""
        with allure.step('Открытие страницы со списком Черновиков'):
            button_orders_menu = self.find_element(UlMenuOrdersLocators.LOCATOR_ORDERS_BUTTON_MENU)
            self.driver.execute_script("arguments[0].click()", button_orders_menu)
            self.waiting_element_is_visibility_on_the_page(UlMenuOrdersLocators.LOCATOR_DROP_UL_ORDERS)
            button_draft = self.find_element(UlMenuOrdersLocators.LOCATOR_BUTTON_DRAFTS)
            self.driver.execute_script("arguments[0].click()", button_draft)
            """Открытие ранее созданного Черновика под конечным клиентом"""
            with allure.step('Открытие ранее созданного Черновика под конечным клиентом'):
                self.waiting_element_is_visibility_on_the_page(DraftLocators.LOCATOR_H1_MY_DRAFT)
                field_choose_purchase_thru_distr = self.find_element(
                    DraftLocators.LOCATOR_FIELD_PURCHASE_THRU_DISTRIBUTOR_END_USER)
                field_choose_purchase_thru_distr.click()
                self.waiting_element_is_visibility_on_the_page(
                    DraftLocators.LOCATOR_CHOOSE_PURCHASE_THRU_DISTRIBUTOR_END_USER)
                choose_purchase_thru_distr = self.find_element(
                    DraftLocators.LOCATOR_CHOOSE_PURCHASE_THRU_DISTRIBUTOR_END_USER)
                choose_purchase_thru_distr.click()
                self.waiting_for_loader_processing_in_dom(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
                open_old_draft = self.find_element(DraftLocators.LOCATOR_SECOND_DRAFT_IN_LIST)
                self.driver.execute_script("arguments[0].click()", open_old_draft)
                self.waiting_element_is_visibility_on_the_page(DraftLocators.LOCATOR_CODE_IN_DRAFT)

    def save_list_draft(self) -> list:
        """Сохранение списка кодов в Черновике"""
        with allure.step('Сохранение списка кодов в Черновике'):
            name_codes_link_in_draft = self.driver.find_elements(*DraftLocators.LOCATOR_CODE_IN_DRAFT)
            name_codes_link_in_draft = [codes.text for codes in name_codes_link_in_draft]
            print(name_codes_link_in_draft)
            return name_codes_link_in_draft

    def go_to_cart(self):
        """Нажать на кнопку Перейти в Корзину"""
        with allure.step('Нажать на кнопку Перейти в Корзину'):
            button_go_to_cart = self.find_element(DraftLocators.LOCATOR_BUTTON_GO_TO_CART)
            self.driver.execute_script("arguments[0].click()", button_go_to_cart)
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.expecting_clickability(CartLocators.LOCATOR_SAVE_AS_DRAFT)
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
