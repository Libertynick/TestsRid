"""Страница Проектные условия"""
import time

import allure

from base_page.base_page import BasePage
from base_page.base_page_locators import BaseOpenLocators
from open_pages.design_condition_page.design_condition_locators import DesignConditionLocators
from open_pages.my_design_conditions_page.my_design_conditions_locators import MyDesignConditionsLocators


@allure.feature('Мои проектные условия')
class MyDesignConditionsPage(BasePage):
    """Мои проектные условия"""

    def go_to_first_pq(self):
        """Переход на первое pq на странице"""
        with allure.step('Переход на первое pq на странице'):
            list_links = self.driver.find_elements(*MyDesignConditionsLocators.LOCATOR_LINKS_PQ)
            if len(list_links) == 0:
                self.driver.refresh()
                self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
                list_links = self.driver.find_elements(*MyDesignConditionsLocators.LOCATOR_LINKS_PQ)
            print(list_links[0].text)
            self.driver.execute_script("arguments[0].click()", list_links[0])
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.is_element_present(*MyDesignConditionsLocators.LOCATOR_H1_PQ)

    def search_for_pq_and_switch_to_it(self, num_pq: str):
        """Поиск PQ по номеру и переход на него, num_pq - номер PQ"""
        with allure.step('Поиск PQ по номеру и переход на него, num_pq - номер PQ'):
            input_search = self.find_element(MyDesignConditionsLocators.LOCATOR_INPUT_SEARCH_PQ)
            button_search = self.find_element(MyDesignConditionsLocators.LOCATOR_BUTTON_SEARCH)

            input_search.send_keys(num_pq)
            button_search.click()
            time.sleep(1)
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)

            result_search = self.driver.find_elements(*MyDesignConditionsLocators.LOCATOR_LINKS_PQ)
            assert len(result_search) == 1, f'Количество найденных pq - ({result_search}) больше 1'

            self.driver.execute_script("arguments[0].click()", result_search[0])
            time.sleep(2)
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.waiting_element_is_visibility_on_the_page(DesignConditionLocators.LOCATOR_HEADER)

    def open_inn_list(self):
        """Открытие выпадающего списка с ИНН"""
        with allure.step('Открытие выпадающего списка с ИНН'):
            btn_open_list_inn = self.find_element(DesignConditionLocators.LOCATOR_BUTTON_TO_OPEN_INN_LIST)
            btn_open_list_inn.click()
            self.waiting_element_is_visibility_on_the_page(DesignConditionLocators.LOCATOR_LIST_INN, sec=10)

    def select_inn_in_search(self, num_inn: str):
        """Выбор ИНН"""
        with allure.step('Выбор ИНН из выпадающего списка'):
            self.open_inn_list()
            self.expecting_clickability(DesignConditionLocators.locator_item_inn_by_num_inn_in_list(num_inn), sec=5)
            item_in_list_inn = self.find_element(DesignConditionLocators.locator_item_inn_by_num_inn_in_list(num_inn))
            item_in_list_inn.click()
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            selected_inn = self.find_element(DesignConditionLocators.LOCATOR_SELECTED_INN).text
            assert selected_inn == num_inn, \
                f'Выбранный ИНН - ({selected_inn}) не соответствует ожидаемому - ({num_inn})'
