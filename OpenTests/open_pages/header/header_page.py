import time

import allure
from selenium.common import TimeoutException

from base_page.base_page import BasePage
from base_page.base_page_locators import BaseOpenLocators
from open_pages.calculation_btp_select_page.calculation_btp_select_locators import CalculationBtpSelectLocators
from open_pages.cart_page.cart_locators import CartLocators
from open_pages.catalog.radiator_thermostats_and_valves_page.radiator_thermostats_and_valves_locators import \
    RadiatorThermostatsAndValvesLocators
from open_pages.incoming_order_pages.incoming_orders_search_page.incoming_orders_search_page_locators import \
    IncomingOrdersSearchPageLocators

from open_pages.main_page.main_page_locators import AuthorizationModalLocators

from open_pages.my_design_conditions_page.my_design_conditions_locators import MyDesignConditionsLocators
from open_pages.header.header_locators import HeaderLocators, UlMenuOrdersLocators, UlMenuProfileLocators, \
    CalculationDropMenuLocators, ModalCatalogLocators, SearchBlockLocators
from open_pages.notifications_page.notifications_page_locators import NotificationsPageLocators
from open_pages.objects_page.free_jbjects.locators_free_objects import FreeObjectsLocators
from open_pages.order_list_page.order_list_page_locators import OrderListLocator
from open_pages.product_page.product_page_locators import ProductPageLocators
from open_pages.searching_results_page.searching_results_locators import SearchingResultsLocators
from open_pages.shipment_statuses_page.locators_shipment_statuses import ShipmentInTransitLocators
from open_pages.company_block.structure_company.company_block_locators import QueueForConfirmationToCompanyLocators

from open_pages.distr_and_service_partners_page.distr_and_service_partners_locators import \
    DistrAndServicePartnersLocators
from open_pages.header.header_locators import UlMenuCatalogLocators


@allure.feature('Шапка сайта')
class Header(BasePage):
    """Шапка сайта"""

    def click_basket(self):
        """Клик по кнопке Корзина"""
        with allure.step('Клик по кнопке Корзина в шапке сайта'):
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.expecting_clickability(HeaderLocators.LOCATOR_BUTTON_BASKET)
            button_cart = self.find_element(HeaderLocators.LOCATOR_BUTTON_BASKET)
            button_cart.click()
            time.sleep(0.5)
            with allure.step('Ожидание отработки лоадера после клика по кнопке Корзина в шапке сайта'):
                try:
                    self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
                    self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
                    self.waiting_element_invisibility(CartLocators.LOCATOR_H2_UPDATE_YOUR_CART, sec=50)
                except TimeoutException:
                    self.driver.refresh()
                    self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
                    self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
                    self.waiting_element_invisibility(CartLocators.LOCATOR_H2_UPDATE_YOUR_CART, sec=50)
            with allure.step('Проверка отображения заголовка'):
                self.waiting_element_is_visibility_on_the_page(CartLocators.LOCATOR_H1_BASKET)

    def go_to_option_tools(self):
        """Переход в модалку Подбор онлайн"""
        with allure.step('Клик в меню Подбор онлайн'):
            button_modal_option = self.find_element(HeaderLocators.LOCATOR_SELECTION_TOOLS)
            button_modal_option.click()
            self.is_element_present(*HeaderLocators.LOCATOR_HEADER_OPTION_TOOLS)

    def click_button_to_come_in(self):
        """Клик по кнопке Войти"""
        with allure.step('Клик по кнопке Выйти в меню'):
            self.expecting_clickability(HeaderLocators.LOCATOR_TO_COME_IN_BUTTON)
            btn_come_in = self.find_element(HeaderLocators.LOCATOR_TO_COME_IN_BUTTON)
            btn_come_in.click()
            self.waiting_element_is_visibility_on_the_page(AuthorizationModalLocators.LOCATOR_HEADING)

    def click_btn_catalog(self):
        """Клик по кнопке Каталог"""
        with allure.step('Клик по кнопке Каталог'):
            self.waiting_element_is_visibility_on_the_page(HeaderLocators.LOCATOR_BTN_CATALOG, sec=10)
            btn_catalog = self.find_element(HeaderLocators.LOCATOR_BTN_CATALOG)
            btn_catalog.click()
            self.waiting_element_is_visibility_on_the_page(ModalCatalogLocators.LOCATOR_HEADER_THERMAL_AUTOMATION,
                                                           sec=5)

    def go_to_notifications(self):
        """Переход в Уведомления"""
        with allure.step('Клик по Уведомлениям'):
            self.waiting_element_is_visibility_on_the_page(HeaderLocators.LOCATOR_BTN_NOTIFICATIONS, sec=5)
            btn_notifications = self.find_element(HeaderLocators.LOCATOR_BTN_NOTIFICATIONS)
            btn_notifications.click()
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.waiting_element_is_visibility_on_the_page(NotificationsPageLocators.LOCATOR_HEADER, sec=15)


@allure.feature('Объекты')
class Object(BasePage):
    """Объекты"""

    def click_button_objects(self):
        """Клик по кнопке Объекты"""
        with allure.step('Клик по кнопке Объекты'):
            self.expecting_clickability(HeaderLocators.LOCATOR_BUTTON_OBJECTS)
            button_object = self.find_element(HeaderLocators.LOCATOR_BUTTON_OBJECTS)
            button_object.click()
            self.is_element_present(*HeaderLocators.LOCATOR_UL_OBJECTS)

    def go_to_free_objects(self):
        """Переход в свободные объекты"""
        with allure.step('Переход в свободные объекты'):
            button_free_objects = self.find_element(HeaderLocators.LOCATOR_LI_FREE_OBJECTS)
            button_free_objects.click()
            self.waiting_for_loader_processing_in_dom(FreeObjectsLocators.LOADER_OLD_FREE_OBJECTS)
            self.is_element_present(*FreeObjectsLocators.LOCATOR_H1_HEADER)


@allure.feature('Отгрузки')
class Shipments(BasePage):
    """Отгрузки"""

    def click_button_shipments(self):
        """Клик по кнопке отгрузки"""
        with allure.step('Клик по кнопке Отгрузки'):
            button_shipments = self.find_element(HeaderLocators.LOCATOR_BUTTON_SHIPMENTS)
            button_shipments.click()
            self.is_element_present(*HeaderLocators.LOCATOR_UL_SHIPMENTS)

    def go_to_in_transit(self):
        """Переход на страницу В пути"""
        with allure.step('Клик на меню В пути'):
            button_in_transit = self.find_element(HeaderLocators.LOCATOR_BUTTON_IN_TRANSIT)
            button_in_transit.click()
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.is_element_present(*ShipmentInTransitLocators.LOCATOR_H3_HEADER)


@allure.feature('Выпадающий список Заказы')
class UlMenuOrdersPage(BasePage):
    """Выпадающий список Заказы"""

    def click_orders_tab(self):
        """Клик по вкладке с выпадающим списком заказы"""
        with allure.step('Клик по вкладке с выпадающим списком заказов'):
            orders_ul = self.find_element(UlMenuOrdersLocators.LOCATOR_ORDERS_BUTTON_MENU)
            orders_ul.click()
            self.waiting_element_is_visibility_located_dom(UlMenuOrdersLocators.LOCATOR_DROP_UL_ORDERS)

    def go_to_design_conditions(self):
        """Переход в Проектные условия с выпадающего меню Заказы"""
        with allure.step('Клик по "Проектные условия" в выпадающем списке Заказы'):
            design_conditions_button = self.find_element(UlMenuOrdersLocators.LOCATOR_DESIGN_CONDITIONS)
            design_conditions_button.click()
            time.sleep(1)
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.is_element_present(*MyDesignConditionsLocators.LOCATOR_H1_HEADER)

    def go_to_orders(self):
        """Переход в Заказы"""
        with allure.step('Клик по кнопке Заказы'):
            button_incoming_orders = self.find_element(UlMenuOrdersLocators.LOCATOR_BUTTON_INCOMING_ORDERS)
            self.expecting_clickability(UlMenuOrdersLocators.LOCATOR_BUTTON_INCOMING_ORDERS, sec=3)
            button_incoming_orders.click()
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT, sec=30)
            self.waiting_element_is_visibility_located_dom(OrderListLocator.LOCATOR_HEADING, sec=5)


@allure.feature('Выпадающее меню Расчеты')
class CalculationDropMenu(BasePage):
    """Выпадающее меню Расчеты"""

    def click_btn_drop_calculation(self):
        """Клик по кнопке выпадающего списка Расчеты"""
        with allure.step('Клик по кнопке выпадающего списка Расчеты'):
            self.expecting_clickability(CalculationDropMenuLocators.LOCATOR_BTN_CALCULATION_DROP)
            btn_drop_calculation = self.find_element(CalculationDropMenuLocators.LOCATOR_BTN_CALCULATION_DROP)
            btn_drop_calculation.click()
            self.waiting_element_is_visibility_on_the_page(CalculationDropMenuLocators.LOCATOR_UL_CALCULATION, sec=5)

    def click_btn_calculation_btp_select(self):
        """Клик по кнопке Расчеты БТП Select"""
        with allure.step('Клик по кнопке Расчеты БТП SELECT'):
            self.waiting_element_is_visibility_on_the_page(
                CalculationDropMenuLocators.LOCATOR_BTN_CALCULATION_BTP_SELECT, sec=5)
            btn_calculation_btp_select = self.find_element(
                CalculationDropMenuLocators.LOCATOR_BTN_CALCULATION_BTP_SELECT)
            btn_calculation_btp_select.click()
            time.sleep(0.5)
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.waiting_element_is_visibility_on_the_page(CalculationBtpSelectLocators.LOCATOR_HEADER)


@allure.feature('Самое верхнее горизонтальное меню')
class TopHorizontalMenu(BasePage):
    """Самое верхнее горизонтальное меню"""

    def were_buy(self):
        """Перейти на страницу Дистрибьюторы и сервисные партнеры"""
        with allure.step('Клик в меню Дистрибьюторы и сервисные партнеры'):
            button_were_buy = self.find_element(HeaderLocators.LOCATOR_BUTTON_WHERE_BUY)
            self.driver.execute_script("arguments[0].click()", button_were_buy)
            self.waiting_element_is_visibility_on_the_page(HeaderLocators.LOCATOR_BUTTON_DISTR_NETWORK)
            button_distr_network = self.find_element(HeaderLocators.LOCATOR_BUTTON_DISTR_NETWORK)
            self.driver.execute_script("arguments[0].click()", button_distr_network)
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.waiting_element_is_visibility_on_the_page(DistrAndServicePartnersLocators.LOCATOR_HEADER)
            time.sleep(4)


@allure.feature('Выбор меню каталога')
class Catalog(BasePage):
    """Выбор меню каталога"""

    def open_menu_catalog(self):
        """Открытие меню Каталога"""
        with allure.step('Открытие меню Каталог'):
            button_catalog = self.find_element(HeaderLocators.LOCATOR_BUTTON_CATALOG)
            self.driver.execute_script("arguments[0].click()", button_catalog)
            self.waiting_element_is_visibility_on_the_page(UlMenuCatalogLocators.LOCATOR_CATALOG_MENU)

    def view_price_list(self):
        """Открыть Смотреть прайс-листы"""
        with allure.step('Клик по кнопке Смотреть прайс-лист'):
            button_view_price_list = self.find_element(UlMenuCatalogLocators.LOCATOR_BUTTON_VIEW_PRICE_LISTS)
            self.driver.execute_script("arguments[0].click()", button_view_price_list)

    def upload_catalog(self):
        """Открыть выгрузка каталогов"""
        with allure.step('Клик по кнопке Выгрузить каталог'):
            button_upload_catalog = self.find_element(UlMenuCatalogLocators.LOCATOR_BUTTON_UPLOADING_CATALOG)
            self.driver.execute_script("arguments[0].click()", button_upload_catalog)


@allure.feature('Выпадающее меню Профиль')
class UlMenuProfile(BasePage):
    """Выпадающее меню Профиль"""

    def click_btn_profile_drop_down(self):
        """Клик по кнопке выпадающего меню Профиль"""
        with allure.step('Клик по кнопке выпадающего меню Профиль'):
            self.expecting_clickability(UlMenuProfileLocators.LOCATOR_BTN_PROFILE_DROP_DOWN)
            btn_profile_drop_down = self.find_element(UlMenuProfileLocators.LOCATOR_BTN_PROFILE_DROP_DOWN)
            btn_profile_drop_down.click()
            self.waiting_element_is_visibility_on_the_page(UlMenuProfileLocators.LOCATOR_UL_PROFILE)

    def click_btn_structure_company(self):
        """Клик по кнопке Структура компании"""
        with allure.step('Клик по кнопке Структура компании'):
            self.expecting_clickability(UlMenuProfileLocators.LOCATOR_BTN_STRUCTURE_COMPANY)
            btn_structure_company = self.find_element(UlMenuProfileLocators.LOCATOR_BTN_STRUCTURE_COMPANY)
            btn_structure_company.click()
            self.waiting_element_is_visibility_on_the_page(QueueForConfirmationToCompanyLocators.LOCATOR_HEADER)


@allure.feature('Модалка Каталог')
class ModalCatalogPage(BasePage):
    """Модалка Каталог"""

    def go_to_section_radiator_thermostats_and_valves(self):
        """Переход в раздел Радиаторные терморегуляторы и клапаны"""
        with allure.step('Клик по меню раздела Радиаторные терморегуляторы и клапаны'):
            self.expecting_clickability(ModalCatalogLocators.LOCATOR_BTN_RADIATOR_THERMOSTATS_AND_VALVES)
            btn_thermal_automation = self.find_element(ModalCatalogLocators.LOCATOR_BTN_RADIATOR_THERMOSTATS_AND_VALVES)
            btn_thermal_automation.click()
            self.waiting_element_is_visibility_on_the_page(RadiatorThermostatsAndValvesLocators.LOCATOR_HEADER)


@allure.feature('Блок с поиском')
class BlockSearch(BasePage):
    """Блок с поиском"""

    def enter_article_in_search_field(self, article: str):
        """Поиск продукта по артикулу"""
        with allure.step('Поиск продукта по артикулу, ввод артикула в поле поиска'):
            self.waiting_element_is_visibility_on_the_page(SearchBlockLocators.LOCATOR_INPUT_SEARCH, sec=5)
            input_search = self.find_element(SearchBlockLocators.LOCATOR_INPUT_SEARCH)
            input_search.send_keys(article)
            self.waiting_element_is_visibility_on_the_page(
                SearchBlockLocators.locator_product_link_in_dropdown_list(article), sec=10)

    def go_to_found_product_from_drop_down_list(self, article: str):
        """Переход в найденный продукт из выпадающего списка"""
        with allure.step('Переход в найденный продукт из выпадающего списка'):
            self.waiting_element_is_visibility_on_the_page(
                SearchBlockLocators.locator_product_link_in_dropdown_list(article), sec=5)
            self.find_element(SearchBlockLocators.locator_product_link_in_dropdown_list(article)).click()
            self.waiting_element_is_visibility_on_the_page(ProductPageLocators.LOCATOR_H1_HEADER, sec=10)
            name_article_on_page = self.find_element(ProductPageLocators.LOCATOR_ARTICLE).text
            assert name_article_on_page == article, \
                f'Наименование артикула на странице - ({name_article_on_page}) не соответствует ожидаемому - ({article})'

    def click_btn_search(self, article: str):
        """Клик по кнопке Искать"""
        with allure.step('Клик по кнопке Искать'):
            self.expecting_clickability(SearchBlockLocators.LOCATOR_BTN_SEARCH)
            btn_search = self.find_element(SearchBlockLocators.LOCATOR_BTN_SEARCH)
            btn_search.click()
            self.waiting_element_is_visibility_on_the_page(SearchingResultsLocators.LOCATOR_HEADER, sec=15)
            found_article = self.find_element(SearchingResultsLocators.LOCATOR_HEADER).text.split(':\n')[1]
            assert article == found_article, \
                f'Найденный артикул - ({found_article}) не соответствует ожидаемому - ({article})'
