import time

import allure
from selenium.webdriver.common.by import By
from base_page.base_page import BasePage
from base_page.base_page_locators import BaseOpenLocators
from open_pages.calculation_page.calculation_page_locators import CalculationPageLocators
from open_pages.calculations_of_ol_and_pto_page.calculations_of_ol_and_pto_locators import \
    CalculationsOfOlAndPtoLocators


@allure.feature('Страница Расчеты и ОЛ ПТО')
class CalculationsOfOlAndPtoPage(BasePage):
    """Страница Расчеты и ОЛ ПТО"""

    def click_advanced_search(self):
        """Клик по кнопке Расширенный поиск"""
        with allure.step('Клик по кнопке Расширенный поиск'):
            self.waiting_element_is_visibility_on_the_page(CalculationsOfOlAndPtoLocators.LOCATOR_ADVANCED_SEARCH)
            button_advanced_search = self.find_element(CalculationsOfOlAndPtoLocators.LOCATOR_ADVANCED_SEARCH)
            button_advanced_search.click()
            self.is_element_present(*CalculationsOfOlAndPtoLocators.LOCATOR_DIV_INN)
            time.sleep(1)

    def choice_of_inn(self, inn: str):
        """Выбор ИНН"""
        with allure.step('Выбор ИНН'):
            self.expecting_clickability(CalculationsOfOlAndPtoLocators.LOCATOR_FIELD_INN)
            ul_inn = self.find_element(CalculationsOfOlAndPtoLocators.LOCATOR_FIELD_INN)
            self.click_js(ul_inn)
            time.sleep(1)
            self.expecting_clickability(CalculationsOfOlAndPtoLocators.locator_item_inn(inn))
            item_field_inn = self.find_element(CalculationsOfOlAndPtoLocators.locator_item_inn(inn))
            self.click_js(item_field_inn)

    def type_num_calc_in_search(self, num_calculation: str):
        """Ввод номера расчета в поле поиска"""
        with allure.step('Ввод номера расчета в поле поиска'):
            input_search_num = self.find_element(CalculationsOfOlAndPtoLocators.LOCATOR_INPUT_NUM_CALC_SEARCH)
            input_search_num.send_keys(num_calculation)

    def click_button_search(self, num_calculation: str):
        """Клик по кнопке Поиск"""
        with allure.step('Клик по кнопке Поиск'):
            button_search = self.find_element(CalculationsOfOlAndPtoLocators.LOCATOR_BUTTON_SEARCH)
            self.driver.execute_script("arguments[0].click()", button_search)
            time.sleep(1)
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT, sec=40)
            self.is_element_present(By.XPATH, f"//a[contains(text(), '{num_calculation}')]")
            list_result_search = self.driver.find_elements(*CalculationsOfOlAndPtoLocators.LOCATOR_RESULT_SEARCH)
            count_result_search = len(list_result_search)
            assert count_result_search == 1, \
                f'В результате поиска найдено больше 1-ого расчета или опросного листа'
            num_calculation_on_page = self.driver.find_elements(
                *CalculationsOfOlAndPtoLocators.LOCATOR_BUTTON_WITH_NUMBER_OF_QUESTIONNAIRE_OR_CALCULATION
            )
            if len(num_calculation_on_page) == 0:
                num_calculation_on_page = self.driver.find_elements(
                    *CalculationsOfOlAndPtoLocators.LOCATOR_BUTTON_READY_CALCULATION
                )
            num_calculation_on_page_text = num_calculation_on_page[0].text.strip()
            assert num_calculation_on_page_text == num_calculation, \
                f'Номер расчета или номер опросного листа - ({num_calculation_on_page_text}) не равен искомому номеру - ' \
                f'({num_calculation})'

    def downloading_the_questionnaire(self, num_calculation: str):
        """Скачивание опросного листа
        num_calculation - номер расчета или опросного листа
        """
        with allure.step('Скачивание опросного листа'):
            name_file_download = f'ОЛ №{num_calculation}.pdf'

            button_drop_down_doc_download = self.find_element(
                CalculationsOfOlAndPtoLocators.locator_drop_down_list_for_downloading_documents(num_calculation))
            self.click_js(button_drop_down_doc_download)
            self.waiting_element_is_visibility_on_the_page(
                CalculationsOfOlAndPtoLocators.LOCATOR_BUTTON_DOWNLOAD_QUESTIONNAIRE)
            button_download_questionnaire = self.find_element(
                CalculationsOfOlAndPtoLocators.LOCATOR_BUTTON_DOWNLOAD_QUESTIONNAIRE)
            self.click_js(button_download_questionnaire)
            time.sleep(0.5)
            self.waiting_for_loader_processing_in_dom(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT, sec=60)

            self.checking_the_download_document_in_the_download_folder(name_file_download)

    def click_button_drop_down_calculation_files_from_first_calculation_in_list(self):
        """Клик по кнопке выпадающего списка с файлами для скачивания у расчетов из первого расчета в списке"""
        with allure.step(
                'Клик по кнопке выпадающего списка с файлами для скачивания у расчетов из первого расчета в списке'):
            self.expecting_clickability(CalculationsOfOlAndPtoLocators.LOCATOR_BUTTON_DROP_DOWN_CALCULATIONS_FILES)
            btn_files = self.find_element(CalculationsOfOlAndPtoLocators.LOCATOR_BUTTON_DROP_DOWN_CALCULATIONS_FILES)
            self.click_js(btn_files)
            self.waiting_element_is_visibility_on_the_page(
                CalculationsOfOlAndPtoLocators.LOCATOR_DROP_MENU_FILES_CALCULATION)

    def download_calculation_ru_from_first_calculation_in_list(self, num_calculation: str):
        """Скачивание расчета RU из первого расчета в списке"""
        with allure.step('Скачивание расчета RU из первого расчета в списке'):
            name_file_download = f'Расчет {num_calculation} - ru.pdf'

            self.click_button_drop_down_calculation_files_from_first_calculation_in_list()
            self.expecting_clickability(CalculationsOfOlAndPtoLocators.LOCATOR_DROP_DOWN_ITEM_DOWNLOAD_RU)
            btn_download_ru = self.find_element(CalculationsOfOlAndPtoLocators.LOCATOR_DROP_DOWN_ITEM_DOWNLOAD_RU)
            self.click_js(btn_download_ru)
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.checking_the_download_document_in_the_download_folder(name_file_download)

    def download_calculation_eng_from_first_calculation_in_list(self, num_calculation: str):
        """Скачивание расчета ENG из первого расчета в списке"""
        with allure.step('Скачивание расчета RU из первого расчета в списке'):
            name_file_download = f'Расчет {num_calculation} - en.pdf'

            self.click_button_drop_down_calculation_files_from_first_calculation_in_list()
            self.expecting_clickability(CalculationsOfOlAndPtoLocators.LOCATOR_DROP_DOWN_ITEM_DOWNLOAD_ENG)
            btn_download_ru = self.find_element(CalculationsOfOlAndPtoLocators.LOCATOR_DROP_DOWN_ITEM_DOWNLOAD_ENG)
            btn_download_ru.click()
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.checking_the_download_document_in_the_download_folder(name_file_download)

    def copy_questionnaire_number_from_first_calculation_in_list(self) -> str:
        """Копирование номера опросного листа из первого расчета в списке"""
        with allure.step('Копирование номера опросного листа из первого расчета в списке'):
            num_ol = self.find_element(CalculationsOfOlAndPtoLocators.LOCATOR_LINE_WITH_QUESTIONNAIRE_NUMBER_IN_CALCULATION
                                       ).text.split('№')[1]
            return num_ol

    def downloading_ol_from_first_calculation_in_list(self, number_ol: str):
        """Скачивание ол (опросного листа) из первого расчета в списке
        num_ol - номер опросного листа
        """
        with allure.step('Скачивание ол (опросного листа) из первого расчета в списке'):
            name_file_download = f'ОЛ №{number_ol}.pdf'

            self.click_button_drop_down_calculation_files_from_first_calculation_in_list()
            self.expecting_clickability(CalculationsOfOlAndPtoLocators.LOCATOR_DROP_DOWN_ITEM_DOWNLOAD_QUESTIONNAIRE)
            btn_download_ru = self.find_element(
                CalculationsOfOlAndPtoLocators.LOCATOR_DROP_DOWN_ITEM_DOWNLOAD_QUESTIONNAIRE)
            btn_download_ru.click()
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.checking_the_download_document_in_the_download_folder(name_file_download)

    def download_all_files_at_once_from_first_calculation_in_list(self, num_ol: str):
        """Скачивание всех файлов сразу из первого расчета в списке
        num_ol - номер опросного листа
        """
        with allure.step('Скачивание всех файлов сразу из первого расчета в списке'):
            name_file_download = f'{num_ol}.zip'

            self.click_button_drop_down_calculation_files_from_first_calculation_in_list()
            self.expecting_clickability(CalculationsOfOlAndPtoLocators.LOCATOR_DROP_DOWN_ITEM_DOWNLOAD_ALL)
            btn_download_ru = self.find_element(
                CalculationsOfOlAndPtoLocators.LOCATOR_DROP_DOWN_ITEM_DOWNLOAD_ALL)
            btn_download_ru.click()
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.checking_the_download_document_in_the_download_folder(name_file_download)

    def copying_first_calculation_number_in_list(self) -> str:
        """Копирование первого номера расчета в списке"""
        with allure.step('Копирование первого номера расчета в списке'):
            self.waiting_element_is_visibility_located_dom(CalculationsOfOlAndPtoLocators.LOCATOR_BUTTON_READY_CALCULATION)
            num_calculation = self.find_element(CalculationsOfOlAndPtoLocators.LOCATOR_BUTTON_READY_CALCULATION).text
            return num_calculation

    def opening_a_first_calculation_in_list(self):
        """Открытие первого расчета в списке"""
        with allure.step('Открытие первого расчета в списке'):
            self.waiting_element_is_visibility_located_dom(CalculationsOfOlAndPtoLocators.LOCATOR_BUTTON_READY_CALCULATION)
            link_first_calc = self.find_element(CalculationsOfOlAndPtoLocators.LOCATOR_BUTTON_READY_CALCULATION)
            self.click_js(link_first_calc)
            self.switching_window(-1)
            time.sleep(1)
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)
            self.waiting_element_is_visibility_on_the_page(CalculationPageLocators.LOCATOR_HEADER_H1)

    def save_price_first_calculation(self) -> float:
        """Сохранение цены первого расчета"""
        with allure.step('Сохранение цены первого расчета'):
            self.waiting_element_is_visibility_located_dom(CalculationsOfOlAndPtoLocators.LOCATOR_PRICE_CALCULATION)
            first_price_calc = self.find_element(CalculationsOfOlAndPtoLocators.LOCATOR_PRICE_CALCULATION).text
            first_price_calc = first_price_calc.replace(' ', '')
            return float(first_price_calc)
