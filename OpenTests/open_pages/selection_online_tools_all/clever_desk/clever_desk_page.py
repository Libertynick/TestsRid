import time

import allure

from base_page.base_page import BasePage
from open_pages.selection_online_tools_all.clever_desk.clever_desk_locators import CleverDeskLocators
from datetime import datetime


@allure.feature('Страница подбора оборудования с помощью CleverDesk')
class CleverDeskPage(BasePage):
    """Страница подбора оборудования с помощью CleverDesk"""

    def click_btn_online_configurator(self):
        """Нажатие кнопки Онлайн-Конфигуратор (первая на странице)"""
        with allure.step('Нажатие кнопки Онлайн-Конфигуратор (первая на странице)'):
            self.waiting_element_is_visibility_on_the_page(CleverDeskLocators.LOCATOR_HEADER_PAGE_CONFIG_CLEVER_DESK,
                                                           sec=20)
            btn_online_configurator = self.find_element(CleverDeskLocators.LOCATOR_FIRST_BTN_ONLINE_CONFIGURATOR)
            self.driver.execute_script("arguments[0].click()", btn_online_configurator)
            time.sleep(2)

    def add_specification(self, document: str):
        """Нажать кнопку Прикрепить файлы"""
        with allure.step('Нажать кнопку Прикрепить файлы'):
            download_button = self.find_element(CleverDeskLocators.LOCATOR_ATTACH_FILES)
            download_button.send_keys(document)
            self.waiting_element_is_visibility_on_the_page(CleverDeskLocators.LOCATOR_INPUT_START_PAGE)

    def choose_selection(self):
        """Выбор раздела проектирования"""
        with allure.step('Выбор раздела проектирования'):
            field_choose_selection = self.find_element(CleverDeskLocators.LOCATOR_FIELD_CHOOSE_SECTION)
            field_choose_selection.click()
            # time.sleep(1)
            self.waiting_element_is_visibility_on_the_page(CleverDeskLocators.LOCATOR_CHOOSE_SECTION)
            choose_selection = self.find_element(CleverDeskLocators.LOCATOR_CHOOSE_SECTION)
            choose_selection.click()

    def input_start_page(self, field_start: str):
        """Ввод значения в поле Начало обсчета (страница)"""
        with allure.step(f'Ввод значения {field_start} в поле Начало обсчета (страница)'):
            start_page = self.find_element(CleverDeskLocators.LOCATOR_INPUT_START_PAGE)
            start_page.send_keys(field_start)
            time.sleep(0.5)

    def input_end_page(self, field_end: str):
        """Ввод значения в поле Конец обсчета (страница)"""
        with allure.step(f'Ввод значения {field_end} в поле Конец обсчета (страница)'):
            end_page = self.find_element(CleverDeskLocators.LOCATOR_INPUT_END_PAGE)
            end_page.send_keys(field_end)
            time.sleep(0.5)

    def click_btn_replacement(self):
        """Клик по кнопке Переподобрать"""
        with allure.step('Клик по кнопке Переподобрать'):
            btn_replacement = self.find_element(CleverDeskLocators.LOCATOR_BTN_REPLACEMENT)
            self.driver.execute_script("arguments[0].click()", btn_replacement)
            self.waiting_for_loader_processing_on_page(CleverDeskLocators.LOCATOR_LOADER_WAIT_REPLACEMENT)
            self.waiting_element_is_visibility_on_the_page(CleverDeskLocators.LOCATOR_DOWNLOAD_RESULT)

    def click_btn_result_spec(self):
        """Клик по кнопке Загрузить спецификацию"""
        with allure.step('Клик по кнопке Загрузить спецификацию'):
            btn_result_spec = self.find_element(CleverDeskLocators.LOCATOR_DOWNLOAD_RESULT)
            self.driver.execute_script("arguments[0].click()", btn_result_spec)

            now = datetime.now().strftime("%d%m")
            name_file = f'C{now}25-00001.xlsx'

            self.delete_file_by_name_in_download_folder(name_file)
            self.checking_the_download_document_in_the_download_folder(name_file)
            self.delete_file_by_name_in_download_folder(name_file)
