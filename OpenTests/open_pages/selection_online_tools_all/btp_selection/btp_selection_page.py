import time

import allure

from base_page.base_page import BasePage
from open_pages.selection_online_tools_all.btp_selection.btp_selection_locators import BTPDeviceLocators, \
    BTPInputNodeModule, BTPHeatingSystemModule, DHWSystemModule, ResultBTP


@allure.feature('Страница подбора БТП')
class BTPPage(BasePage):

    def choice_region(self):
        """Выбор региона"""
        with allure.step('Выбор региона'):
            button_choice_region = self.find_element(BTPDeviceLocators.LOCATOR_REGION_SELECTION)
            self.driver.execute_script("arguments[0].click()", button_choice_region)
            region = self.find_element(BTPDeviceLocators.LOCATOR_REGION_TYPE)
            self.driver.execute_script("arguments[0].click()", region)

    def input_node_module(self, value_pressure_one, value_pressure_two):
        """Модуль узла ввода"""
        with allure.step('Ввод модуля узла ввода'):
            self.expecting_clickability(BTPInputNodeModule.LOCATOR_NODE_MODULE)
            button_node_module = self.find_element(BTPInputNodeModule.LOCATOR_NODE_MODULE)
            self.driver.execute_script("arguments[0].click()", button_node_module)

            time.sleep(3)
            with allure.step('Ввод давление Р1'):
                self.waiting_element_is_visibility_located_dom(BTPInputNodeModule.LOCATOR_PRESSURE_ONE)
                input_pressure_one = self.find_element(BTPInputNodeModule.LOCATOR_PRESSURE_ONE)
                self.driver.execute_script("arguments[0].click()", input_pressure_one)
                input_pressure_one.send_keys(value_pressure_one)

            with allure.step('давление Р2'):
                input_pressure_two = self.find_element(BTPInputNodeModule.LOCATOR_PRESSURE_TWO)
                self.driver.execute_script("arguments[0].click()", input_pressure_two)
                input_pressure_two.send_keys(value_pressure_two)

            with allure.step('Клик по кнопке Сохранить'):
                button_save = self.find_element(BTPInputNodeModule.LOCATOR_BUTTON_SAVE)
                self.driver.execute_script("arguments[0].click()", button_save)
                """Нажать на кнопку Сохранить и выйти - проверка что кнопка нажата, если нет - нажать еще несколько раз"""
        # count_iter = 10
        # while count_iter != 0:
        #     button_save = self.find_element(DHWSystemModule.LOCATOR_BUTTON_SAVE_AND_RETURN_DHW)
        #     self.driver.execute_script("arguments[0].click()", button_save)
        #     header_list = self.driver.find_elements(*BTPDeviceLocators.LOCATOR_PAGE_SELECT)
        #     if len(header_list) == 0:
        #         count_iter -= 1
        #     else:
        #         count_iter = 0

    def page_return(self):
        """Проверка, что вернулись на страницу с выбором систем"""
        with allure.step('Проверка, что вернулись на страницу с выбором систем'):
            self.waiting_element_is_visibility_located_dom(BTPDeviceLocators.LOCATOR_PAGE_SELECT, sec=180)

    def input_heating_system_module(self, value_thermal_power, value_pressure_losses):
        """Модуль системы отопления"""
        with allure.step('Ввод данных в Модуль системы отопления'):
            button_heating_module = self.find_element(BTPHeatingSystemModule.LOCATOR_SYSTEM_MODULE)
            self.driver.execute_script("arguments[0].click()", button_heating_module)
            with allure.step('Ввод данных в поле СО'):
                self.waiting_element_is_visibility_on_the_page(BTPHeatingSystemModule.LOCATOR_SYSTEM_MODULE_OPEN)
                input_thermal_power = self.find_element(BTPHeatingSystemModule.LOCATOR_THERMAL_POWER)
                input_thermal_power.send_keys(value_thermal_power)
            with allure.step('Ввод данных в поле Потери давления (без учета ТО)'):
                input_pressure_losses = self.find_element(
                    BTPHeatingSystemModule.LOCATOR_PRESSURE_LOSSES)
                input_pressure_losses.send_keys(value_pressure_losses)

            button_save = self.find_element(BTPHeatingSystemModule.LOCATOR_BUTTON_SAVE_AND_RETURN)
            self.driver.execute_script("arguments[0].click()", button_save)

    def input_dhw_system_module(self, value_thermal_power_dhw, value_cold_water_pressure, value_pressure_losses_dhw):
        """Модуль системы ГВС"""
        with allure.step('Модуль системы ГВС'):
            button_dhw_system_module = self.find_element(DHWSystemModule.LOCATOR_DHW_SYSTEM_MODULE)
            self.driver.execute_script("arguments[0].click()", button_dhw_system_module)

            self.waiting_element_is_visibility_on_the_page(DHWSystemModule.LOCATOR_DHW_SYSTEM_MODULE_OPEN)
            with allure.step('Ввод данных в Поле тепловая мощность'):
                input_thermal_power_dhw = self.find_element(
                    DHWSystemModule.LOCATOR_THERMAL_POWER_DHW)
                input_thermal_power_dhw.send_keys(value_thermal_power_dhw)
            with allure.step('Ввод данных в Поле Давление холодной воды на входе в TО'):
                input_cold_water_pressure = self.find_element(
                    DHWSystemModule.LOCATOR_COLD_WATER_PRESSURE)
                input_cold_water_pressure.send_keys(value_cold_water_pressure)
            with allure.step('Ввод данных в поле Потери давления (на циркуляцию ГВС)'):
                input_pressure_losses_dhw = self.find_element(
                    DHWSystemModule.LOCATOR_PRESSURE_LOSSES_DHW)
                input_pressure_losses_dhw.send_keys(value_pressure_losses_dhw)
            """Нажать на кнопку Сохранить и выйти - проврека что кнопка нажата, если нет - нажать еще несколько раз"""
            with allure.step('Клик по кнопке Сохранить и выйти'):
                count_iter = 10
                while count_iter != 0:
                    button_save = self.find_element(DHWSystemModule.LOCATOR_BUTTON_SAVE_AND_RETURN_DHW)
                    self.driver.execute_script("arguments[0].click()", button_save)
                    header_list = self.find_elements(BTPDeviceLocators.LOCATOR_PAGE_SELECT)
                    if len(header_list) == 0:
                        count_iter -= 1
                    else:
                        count_iter = 0

    def result_btp(self):
        """Выполнить расчет и результаты"""
        with allure.step('Выполнить расчет и результаты'):
            with allure.step('Клик по кнопке Выполнить расчет блоков'):
                button_perform_block_all = self.find_element(ResultBTP.LOCATOR_BUTTON_PERFORM_BLOCK_CAL)
                self.driver.execute_script("arguments[0].click()", button_perform_block_all)
            with allure.step('Клик по кнопке Продолжить расчёт'):
                self.expecting_clickability(ResultBTP.LOCATOR_CONTINUE_CALCULATION)
                button_continue = self.find_element(ResultBTP.LOCATOR_CONTINUE_CALCULATION)
                self.driver.execute_script("arguments[0].click()", button_continue)
                self.waiting_element_invisibility(ResultBTP.LOCATOR_WAIT, sec=600)
            with allure.step('Клик по кнопке Получить результаты подбора одним файлом'):
                self.expecting_clickability(ResultBTP.LOCATOR_GET_RESULTS_ONE_FILE)
                button_get_result = self.find_element(ResultBTP.LOCATOR_GET_RESULTS_ONE_FILE)
                self.driver.execute_script("arguments[0].click()", button_get_result)
            with allure.step('Клик по кнопке Отправить по email'):
                self.expecting_clickability(ResultBTP.LOCATOR_SENT_EMAIL)
                button_sent_email = self.find_element(ResultBTP.LOCATOR_SENT_EMAIL)
                self.driver.execute_script("arguments[0].click()", button_sent_email)

    def sent_result_btp(self, value_email, value_address):
        """Выслать итог на почту"""
        with allure.step('Выслать итог на почту'):
            with allure.step('Очистка поля ввода мэйла и ввод данных'):
                input_value_email = self.find_element(ResultBTP.LOCATOR_INPUT_EMAIL)
                input_value_email.clear()
                input_value_email.send_keys(value_email)
            with allure.step('Ввод данных в поле адреса'):
                input_value_address = self.find_element(ResultBTP.LOCATOR_INPUT_ADDRESS)
                input_value_address.send_keys(value_address)
            with allure.step('Клик по кнопке Отправить на email архив zip'):
                self.expecting_clickability(ResultBTP.LOCATOR_BUTTON_SEND_ON_EMAIL)
                button_send_on_email = self.find_element(ResultBTP.LOCATOR_BUTTON_SEND_ON_EMAIL)
                self.driver.execute_script("arguments[0].click()", button_send_on_email)

                self.waiting_element_invisibility(ResultBTP.LOCATOR_WAIT_SENT_ON_EMAIL, sec=100)
