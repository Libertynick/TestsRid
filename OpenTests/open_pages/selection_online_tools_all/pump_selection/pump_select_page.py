import allure

from open_pages.selection_online_tools_all.pump_selection.pump_select_locators import PumpLocators
from base_page.base_page import BasePage


@allure.feature('Страница подбора насосов')
class PumpPage(BasePage):
    def type_consumpyion(self, value_cons):
        """Ввод расхода"""
        with allure.step(f'Ввод расхода {value_cons}'):
            input_consumpyion = self.find_element(PumpLocators.LOCATOR_CONSUMPTION)
            input_consumpyion.send_keys(value_cons)

    def type_power(self, value_power):
        """Ввод мощности"""
        with allure.step(f'Ввод мощности {value_power}'):
            input_power = self.find_element(PumpLocators.LOCATOR_POWER)
            input_power.send_keys(value_power)

    def button_pick_up(self):
        """Кнопка Подобрать стала кликабельна"""
        with allure.step('Кнопка Подобрать стала кликабельна'):
            self.expecting_clickability(PumpLocators.LOCATOR_BUTTON_PICK_UP)
            button_pump_pick_up = self.find_element(PumpLocators.LOCATOR_BUTTON_PICK_UP)
            self.driver.execute_script("arguments[0].click()", button_pump_pick_up)

    def switch_to_frame_pump(self):
        """Фрейм таблицы насосов"""
        with allure.step('Фрейм таблицы насосов'):
            iframe = self.find_element(PumpLocators.LOCATOR_FRAME_PUMP)
            self.driver.switch_to.frame(iframe)

    def results_table(self):
        """Таблица с результатами"""
        with allure.step('Таблица с результатами'):
            self.find_element(PumpLocators.LOCATOR_TABLE)

    def button_save(self):
        """Клик по копке Сохранить"""
        with allure.step('Клик по копке Сохранить'):
            self.expecting_clickability(PumpLocators.LOCATOR_BUTTON_SAVE)
            button_save = self.find_element(PumpLocators.LOCATOR_BUTTON_SAVE)
            self.driver.execute_script("arguments[0].click()", button_save)
