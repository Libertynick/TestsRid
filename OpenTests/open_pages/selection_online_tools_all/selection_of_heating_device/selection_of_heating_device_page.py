import allure

from base_page.base_page import BasePage
from base_page.base_page_locators import BaseOpenLocators

from open_pages.selection_online_tools_all.selection_of_heating_device.selection_of_heating_device_locators import \
    HeatingDeviceLocators
from time import sleep
from selenium.webdriver.support.ui import Select


class HeatingDevice(BasePage):
    def type_temp_the_supply_coolant(self, value_temp_supply):
        """Ввод температуры подающего теплоносителя"""
        with allure.step(f'Ввод температуры подающего теплоносителя {value_temp_supply}'):
            input_temp_the_supply_coolant = self.find_element(
                HeatingDeviceLocators.LOCATOR_TEMPERATURE_OF_THE_SUPPLY_COOLANT)
            input_temp_the_supply_coolant.send_keys(value_temp_supply)

    def type_temp_return_coolant(self, value_temp_return):
        """Ввод температуры обратного теплоносителя"""
        with allure.step(f'Ввод температуры обратного теплоносителя {value_temp_return}'):
            input_temp_return_coolant = self.find_element(
                HeatingDeviceLocators.LOCATOR_TEMPERATURE_OF_THE_RETURN_COOLANT)
            input_temp_return_coolant.send_keys(value_temp_return)

    def type_inside_temp(self, value_inside_temp):
        """Ввод температуры воздуха в помещении"""
        with allure.step(f'Ввод температуры воздуха в помещении {value_inside_temp}'):
            input_inside_temp = self.find_element(
                HeatingDeviceLocators.LOCATOR_INSIDE_TEMPERATURE)
            input_inside_temp.send_keys(value_inside_temp)

    def choice_manufacturer(self):
        """Выбор производителя"""
        with allure.step('Выбор производителя'):
            list_manufacturer = self.find_element(HeatingDeviceLocators.LOCATOR_MANUFACTURER)
            dropdown = Select(list_manufacturer)
            dropdown.select_by_value('84d49c33-015f-4838-bf5a-4f857e84935c')
            sleep(2)

    def choice_model(self):
        """Выбор модели"""
        with allure.step('Выбор модели'):
            list_model = self.find_element(HeatingDeviceLocators.LOCATOR_MODEL)
            dropdown = Select(list_model)
            dropdown.select_by_value('5a1709d9-7e54-4d4c-96bc-ef84ae8c32c0')
            sleep(2)

    def choice_type(self):
        """Выбор типа"""
        with allure.step('Выбор типа'):
            list_type = self.find_element(HeatingDeviceLocators.LOCATOR_TYPE)
            dropdown = Select(list_type)
            dropdown.select_by_value('8a35e361-dd42-4320-892e-15b483e6a36e')
            sleep(2)

    def choice_height(self):
        """Выбор высоты"""
        with allure.step('Выбор высоты'):
            list_height = self.find_element(HeatingDeviceLocators.LOCATOR_HEIGHT)
            dropdown = Select(list_height)
            dropdown.select_by_index(1)
            self.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)

    def choice_size(self):
        """Выбор типоразмера"""
        with allure.step('Выбор типоразмера'):
            list_size = self.find_element(HeatingDeviceLocators.LOCATOR_STANDART_SIZE)
            dropdown = Select(list_size)
            dropdown.select_by_value('230764c6-5a25-440b-bdb9-aeb176d8015d')
            sleep(2)

    def button_calculation(self):
        """Кнопка Расчет"""
        with allure.step('Кнопка Расчет'):
            self.expecting_clickability(HeatingDeviceLocators.LOCATOR_BUTTON_CALCULATION)
            button_calculation = self.find_element(HeatingDeviceLocators.LOCATOR_BUTTON_CALCULATION)
            self.driver.execute_script("arguments[0].click()", button_calculation)

    def results_table(self):
        """Итоговая таблица"""
        with allure.step('Итоговая таблица'):
            self.find_element(HeatingDeviceLocators.LOCATOR_RESULTS_TABLE)
