import time

import allure

from base_page.base_page import BasePageCrm
from crm_pages.fastening_request.fastening_request_locators import PageFasteningRequestCrmLocators, \
    PageRequestFoundLocators
from crm_pages.header_page.header_page_locators import HeaderPageLocator


@allure.feature('Страница Заявки на крепление')
class FasteningRequestCRM(BasePageCrm):
    """Страница Заявки на крепление"""

    def find_page_request(self):
        """Открыть страницу с заявками на крепление"""
        with allure.step('Открыть страницу с заявками на крепление'):
            page_document = self.find_element(HeaderPageLocator.LOCATOR_BUTTON_DOCUMENTS)
            self.driver.execute_script("arguments[0].click()", page_document)
            time.sleep(1)
            page_request = self.find_element(HeaderPageLocator.LOCATOR_BUTTON_FASTENING_REQUEST)
            self.driver.execute_script("arguments[0].click()", page_request)
            # time.sleep(1)
            self.waiting_for_loader_processing_on_page(PageRequestFoundLocators.LOCATOR_LOADER_REQUEST_FOUND, sec=120)
            self.waiting_element_is_visibility_on_the_page(PageRequestFoundLocators.LOCATOR_NUMBER_REQUEST)

    def search_for_an_application_for_fastening(self, num_application_for_fastening: str):
        """Поиск заявки на крепление
        num_application_for_fastening - заявка на крепление
        """
        with allure.step(f'Поиск заявки на крепление {num_application_for_fastening}'):
            field_num_request = self.find_element(PageRequestFoundLocators.LOCATOR_NUMBER_REQUEST)
            field_num_request.send_keys(num_application_for_fastening)
            entered_application_number = field_num_request.get_attribute('value')
            assert entered_application_number == num_application_for_fastening, \
                f'Введенный номер заявки - ({entered_application_number}) не соответствует ожидаемому - ' \
                f'({num_application_for_fastening})'

    def click_button_search(self, num_application_for_fastening: str):
        """Клик по кнопке Найти
        num_application_for_fastening - заявка на крепление
        """
        with allure.step('Клик по кнопке Найти'):
            button_find = self.find_element(PageRequestFoundLocators.LOCATOR_BUTTON_FIND)
            button_find.click()
            time.sleep(1)
            self.waiting_for_loader_processing_on_page(PageRequestFoundLocators.LOCATOR_LOADER_REQUEST_FOUND, sec=360)
            self.waiting_element_is_visibility_on_the_page(PageRequestFoundLocators.LOCATOR_FOUND_APPLICATIONS, sec=360)
            time.sleep(1)
            found_application_list = self.find_elements(PageRequestFoundLocators.LOCATOR_FOUND_APPLICATIONS)
            assert len(
                found_application_list) == 1, f'Количество найденных заявок - ({len(found_application_list)}) больше 1'
            found_application = found_application_list[0].text
            assert found_application == num_application_for_fastening, \
                f'Номер найденной заявки - ({found_application}) не соответствует искомому - ' \
                f'({num_application_for_fastening})'

    def page_request(self):
        """Открыть заявку на крепление"""
        with allure.step('Открыть заявку на крепление'):
            open_request = self.find_element(PageRequestFoundLocators.LOCATOR_OPEN_REQUEST)
            self.driver.execute_script("arguments[0].click()", open_request)
            self.waiting_element_is_visibility_on_the_page(PageFasteningRequestCrmLocators.LOCATOR_AUTHOR_REQUEST)

    def downland_document(self):
        """Скачать спецификацию из заявки"""
        with allure.step('Скачать спецификацию из заявки'):
            name_document = 'for_CleverDesk.pdf'
            self.delete_file_by_name_in_download_folder(name_document)
            document_download = self.find_element(PageFasteningRequestCrmLocators.LOCATOR_DOWNLOAD_FILE)
            self.driver.execute_script("arguments[0].click()", document_download)
            self.checking_the_download_document_in_the_download_folder(name_document)
