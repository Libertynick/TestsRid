import allure

from base_page.base_page import BasePage
from base_page.base_page_locators import BaseCrmLocators
from crm_pages.modal_logistics_ridan.modal_logistics_ridan_locators import ModalLogisticsRidanLocators


class ModalLogisticsRidan(BasePage):
    """Модалка Логистика Ридан"""

    def entered_specified_delivery_date(self, value_specified_delivery_date: str):
        """
        Ввод уточненного срока доставки во все поля
        :param value_specified_delivery_date: Значение уточненного срока доставки
        """
        with allure.step(f'Ввод уточненного срока доставки {value_specified_delivery_date} во все поля'):
            self.waiting_element_is_visibility_on_the_page(
                ModalLogisticsRidanLocators.LOCATOR_INPUT_SPECIFIED_DELIVERY_DATE,
                sec=5)
            input_specified_delivery_date = self.find_elements(
                ModalLogisticsRidanLocators.LOCATOR_INPUT_SPECIFIED_DELIVERY_DATE)
            for el in input_specified_delivery_date:
                el.clear()
                el.send_keys(value_specified_delivery_date)

                entered_value = el.get_attribute('value')
                assert entered_value == value_specified_delivery_date, \
                    (f'Значение - ({entered_value}) в поле Уточненный срок доставки не соответствует вводимому - '
                     f'({value_specified_delivery_date})')

    def entered_transportation_and_packaging_costs(self, value_transportation_and_packaging_costs: str):
        """
        Ввод значения в поле Транспортные расходы и расходы на упаковку
        :param value_transportation_and_packaging_costs: Значение транспортных расходы и расходов на упаковку
        """
        with allure.step(
                f'Ввод значения {value_transportation_and_packaging_costs} в поле Транспортные расходы и расходы на упаковку'):
            self.waiting_element_is_visibility_on_the_page(
                ModalLogisticsRidanLocators.LOCATOR_INPUT_TRANSPORTATION_AND_PACKAGING_COSTS, sec=5)
            input_transportation_and_packaging_costs = self.find_element(
                ModalLogisticsRidanLocators.LOCATOR_INPUT_TRANSPORTATION_AND_PACKAGING_COSTS)
            input_transportation_and_packaging_costs.clear()
            input_transportation_and_packaging_costs.send_keys(value_transportation_and_packaging_costs)
            entered_value = input_transportation_and_packaging_costs.get_attribute('value')

            assert entered_value == value_transportation_and_packaging_costs, \
                (f'Значение - ({entered_value}) в поле Транспортные расходы и расходы на упаковку '
                 f'не соответствует вводимому - ({value_transportation_and_packaging_costs})')

    def click_btn_save(self):
        """Клик по кнопке Сохранить"""
        with allure.step('Клик по кнопке Сохранить'):
            self.waiting_element_is_visibility_on_the_page(ModalLogisticsRidanLocators.LOCATOR_BTN_SAVE, sec=5)
            btn_save = self.find_element(ModalLogisticsRidanLocators.LOCATOR_BTN_SAVE)
            btn_save.click()
            self.waiting_for_loader_processing_on_page(BaseCrmLocators.LOCATOR_LOADER, sec=30)
