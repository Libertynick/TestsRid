import time

import allure
from selenium.common import TimeoutException

from base_page.base_page import BasePageCrm
from base_page.base_page_locators import BaseCrmLocators
from base_page.raise_exceptions import MyTimeoutException
from crm_pages.athorization_page.authorization_page_locators import AuthorizationPageLocators
from crm_pages.edit_object_header.edit_object_header_locators import EditPageObject
from crm_pages.header_page.header_page_locators import HeaderPageLocator, ToolsLocators
from crm_pages.journal_ik_page.journal_ik_locators import JournalIkLocators
from crm_pages.search_objects_page.search_objects_page_locators import SearchObjectsPageLocators
from crm_pages.search_organization_page.search_organization_page_locators import SearchOrganizationPageLocators


@allure.feature('Шапка сайта CRM')
class HeaderPage(BasePageCrm):
    """Шапка сайта"""

    def go_to_object_page(self):
        """Переход на страницу Объекты"""
        with allure.step(f'Переход на страницу "Объекты" в CRM для поиска объекта'):
            self.waiting_element_is_visibility_on_the_page(HeaderPageLocator.LOCATOR_BUTTON_OBJECT)
            button_object = self.find_element(HeaderPageLocator.LOCATOR_BUTTON_OBJECT)
            self.driver.execute_script("arguments[0].click()", button_object)
            time.sleep(1)
            self.waiting_element_is_visibility_located_dom(SearchObjectsPageLocators.LOCATOR_BUTTON_ADD_OBJECT)

    def go_to_organization_search_page(self):
        """Переход на страницу поиска организации"""
        with allure.step(f'Переход на страницу "Организации" в CRM'):
            self.expecting_clickability(HeaderPageLocator.LOCATOR_BUTTON_ORGANIZATION)
            button_organization = (self.find_element(HeaderPageLocator.LOCATOR_BUTTON_ORGANIZATION))
            button_organization.click()
            time.sleep(1)
            self.waiting_element_is_visibility_on_the_page(
                SearchOrganizationPageLocators.LOCATOR_INPUT_SEARCH_ORGANIZATION)

    def create_new_object(self):
        """Клик по кнопке Создать (новый объект)"""
        with allure.step(f'Нажать на кнопку "+Объект" для создания нового объекта '):
            button_new_object = self.find_element(HeaderPageLocator.LOCATOR_BUTTON_CREATE_NEW_OBJECT)
            self.driver.execute_script("arguments[0].click()", button_new_object)
            self.waiting_element_is_visibility_on_the_page(EditPageObject.LOCATOR_TITLE_OBJECT)

    def click_btn_to_ridan(self):
        """Клик по кнопке ТО Ридан"""
        with allure.step('Клик по кнопке ТО Ридан'):
            self.expecting_clickability(HeaderPageLocator.LOCATOR_BTN_TO_RIDAN, sec=5)
            btn_to_ridan = self.find_element(HeaderPageLocator.LOCATOR_BTN_TO_RIDAN)
            btn_to_ridan.click()
            try:
                self.waiting_element_is_visibility_on_the_page(HeaderPageLocator.LOCATOR_BTN_JOURNAL_IK, sec=5)
            except TimeoutException:
                raise MyTimeoutException('Список ТО Ридан не открылся. Не отображается кнопка Журнал ИК')

    def click_btn_journal_ik(self):
        """Клик по кнопке Журнал ИК в выпадающем списке ТО Ридан"""
        with allure.step(''):
            self.expecting_clickability(HeaderPageLocator.LOCATOR_BTN_JOURNAL_IK, sec=5)
            btn_magazine_ik = self.find_element(HeaderPageLocator.LOCATOR_BTN_JOURNAL_IK)
            btn_magazine_ik.click()
            self.waiting_for_loader_processing_on_page(BaseCrmLocators.LOCATOR_LOADER)
            self.waiting_element_is_visibility_on_the_page(
                JournalIkLocators.LOCATOR_BTN_ACTIVATE_DROP_INPUT_SEARCH_NUM_PQ, sec=5)

    def activate_profile_menu(self):
        """Активация меню профиля"""
        with allure.step('Активация меню профиля'):
            self.scroll_to_height()
            self.waiting_element_is_visibility_on_the_page(HeaderPageLocator.LOCATOR_BTN_USER, sec=5)
            btn_user = self.find_element(HeaderPageLocator.LOCATOR_BTN_USER)
            btn_user.click()
            try:
                self.waiting_element_is_visibility_on_the_page(HeaderPageLocator.LOCATOR_BTN_LOGOUT, sec=3)
            except TimeoutException:
                raise MyTimeoutException('Меню юзера не отображается на странице')

    def logout_user(self):
        """Разлогиниться"""
        with allure.step('Выходим из учетки СРМ'):
            self.expecting_clickability(HeaderPageLocator.LOCATOR_BTN_LOGOUT, sec=2)
            btn_logot = self.find_element(HeaderPageLocator.LOCATOR_BTN_LOGOUT)
            btn_logot.click()
            self.waiting_element_is_visibility_on_the_page(AuthorizationPageLocators.LOCATOR_BTN_LOGIN, sec=3)


@allure.feature('Инструменты тестирования')
class Tools(BasePageCrm):
    """Инструменты тестирования"""

    def go_to_test_tools(self):
        """Переход в инструменты тестирования """
        with allure.step(f'Нажать на кнопку "Инструменты тестирования"'):
            self.waiting_element_is_visibility_located_dom(HeaderPageLocator.LOCATOR_BUTTON_TEST_TOOLS)
            button_test_tools = self.find_element(HeaderPageLocator.LOCATOR_BUTTON_TEST_TOOLS)
            self.driver.execute_script("arguments[0].click()", button_test_tools)
            self.waiting_element_is_visibility_on_the_page(ToolsLocators.LOCATOR_H4_TEST_TOOLS, sec=30)

    def change_to_user_if_busy_to_another(self, user_1='Оганесян Левон', user_2='Анисимов Александр'):
        """Смена на пользователя если занят на другого"""
        with allure.step(f'Смена пользователя на другого если первый занят'):
            self.change_for_yourself()
            self.click_button_testing_tools()
            self.expecting_clickability(ToolsLocators.LOCATOR_USER_INPUT_DROPDOWN_FIELD)
            drop_user_input = self.find_element(ToolsLocators.LOCATOR_USER_INPUT_DROPDOWN_FIELD)
            drop_user_input.click()

            self.waiting_element_is_visibility_on_the_page(ToolsLocators.LOCATOR_INPUT_USER, sec=5)
            input_user = self.find_element(ToolsLocators.LOCATOR_INPUT_USER)
            input_user.send_keys(user_1)
            self.waiting_element_is_visibility_on_the_page(BaseCrmLocators.LOCATOR_LI_SEARCH_USER)
            user_is_busy = self.driver.find_elements(*ToolsLocators.LOCATOR_USER_IS_BUSY)  # пользователь занят
            if len(user_is_busy) > 0:
                input_user_is_busy = self.find_element(ToolsLocators.LOCATOR_INPUT_USER_IS_BUSY)
                input_user_is_busy.clear()
                input_user_is_busy.send_keys(user_2)

            self.waiting_element_is_visibility_on_the_page(ToolsLocators.LOCATOR_RESULT_SEARCH)
            user = self.find_element(ToolsLocators.LOCATOR_RESULT_SEARCH)
            user.click()
            button_change = self.find_element(ToolsLocators.LOCATOR_BUTTON_CHANGE)
            button_change.click()
            time.sleep(2)
            self.waiting_element_invisibility(ToolsLocators.LOCATOR_BUTTON_CHANGE)
            self.waiting_for_loader_processing_in_dom(BaseCrmLocators.LOCATOR_LOADER, sec=90)
            self.waiting_element_is_visibility_located_dom(BaseCrmLocators.LOCATOR_BODY)
            self.waiting_for_loader_processing_in_dom(BaseCrmLocators.LOCATOR_LOADER)
