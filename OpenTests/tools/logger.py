import logging
import os
from datetime import datetime

# Создаем директорию для логов, если она не существует
logs_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'logs')
os.makedirs(logs_dir, exist_ok=True)

# Создаем форматтер для логов
log_formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')

# Создаем имя файла с текущей датой
log_file = os.path.join(logs_dir, f'test_run_{datetime.now().strftime("%Y%m%d_%H%M%S")}.log')


# Настраиваем корневой логгер
def setup_logger(name, level=logging.INFO):
    """Настройка логгера с возможностью задать уровень логирования"""
    logger = logging.getLogger(name)
    logger.setLevel(level)

    # Обработчик для вывода в файл
    file_handler = logging.FileHandler(log_file, encoding='utf-8')
    file_handler.setFormatter(log_formatter)

    # Обработчик для вывода в консоль
    console_handler = logging.StreamHandler()
    console_handler.setFormatter(log_formatter)

    # Добавляем обработчики к логгеру (только если их еще нет)
    if not logger.handlers:
        logger.addHandler(file_handler)
        logger.addHandler(console_handler)

    return logger


# Создаем логгеры для различных модулей
base_logger = setup_logger('base_page')
btp_logger = setup_logger('btp_service_page')
json_logger = setup_logger('json_handler')
test_logger = setup_logger('tests')