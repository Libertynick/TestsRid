import time

from selenium.webdriver.support.select import Select

from base_page.base_page import BasePage
from tms_pages.customer_service_pages.tickets_page.ticket_page_locators import TicketsPageLocators


class TicketsPage(BasePage):
    """Страница Тикеты"""

    def search_order(self, num_order: str):
        """Поиск заказа. num_order- номер заказа"""
        self.waiting_element_is_visibility_on_the_page(TicketsPageLocators.LOCATOR_INPUT_NUM_ORDER)
        input_order = self.find_element(TicketsPageLocators.LOCATOR_INPUT_NUM_ORDER)
        input_order.send_keys(num_order)
        button_search = self.find_element(TicketsPageLocators.LOCATOR_BUTTON_SEARCH)
        button_search.click()
        result_search = self.driver.find_elements(*TicketsPageLocators.LOCATOR_RESULT_SEARCH_ORDER)
        assert len(result_search) == 1, \
            f'Найдено больше одного заказа - {len(result_search)}'

    def search_for_a_packaging_request_by_order_number(self, num_order: str):
        """поиск заявки на упаковку по номеру заказа"""
        value = '9'  # Значение option в select видов запроса

        self.waiting_element_is_visibility_on_the_page(TicketsPageLocators.LOCATOR_INPUT_NUM_ORDER)
        input_order = self.find_element(TicketsPageLocators.LOCATOR_INPUT_NUM_ORDER)
        input_order.send_keys(num_order)
        select_types_of_requests = self.find_element(TicketsPageLocators.LOCATOR_SELECT_TYPES_OF_REQUESTS)
        select = Select(select_types_of_requests)
        select.select_by_value(value)
        button_search = self.find_element(TicketsPageLocators.LOCATOR_BUTTON_SEARCH)
        button_search.click()
        result_search = self.driver.find_elements(*TicketsPageLocators.LOCATOR_RESULT_SEARCH_ORDER)
        assert len(result_search) == 1, \
            f'Найдено больше одного заказа - {len(result_search)}'

    def search_shipment_request_by_num_order(self, num_order: str, num_ticket: str):
        """Поиск запроса отгрузки по номеру заказа"""
        value = '6'  # Значение option в select видов запроса

        self.waiting_element_is_visibility_on_the_page(TicketsPageLocators.LOCATOR_INPUT_NUM_ORDER)
        input_order = self.find_element(TicketsPageLocators.LOCATOR_INPUT_NUM_ORDER)
        input_order.send_keys(num_order)
        select_types_of_requests = self.find_element(TicketsPageLocators.LOCATOR_SELECT_TYPES_OF_REQUESTS)
        select = Select(select_types_of_requests)
        select.select_by_value(value)
        button_search = self.find_element(TicketsPageLocators.LOCATOR_BUTTON_SEARCH)
        button_search.click()
        result_search = self.driver.find_elements(*TicketsPageLocators.LOCATOR_RESULT_SEARCH_ORDER)
        assert len(result_search) == 1, \
            f'Найдено больше одного заказа - {len(result_search)}'
        found_ticket = self.find_element(TicketsPageLocators.LOCATOR_COLUMN_WITH_TICKET_NUMBER).text
        assert str(found_ticket) == num_ticket, \
            f'Найденный номер тикета - ({found_ticket}) не соответствует ожидаемому - ({num_ticket})'

    def open_request(self):
        """Открытие запроса"""
        button_open_request = self.find_element(TicketsPageLocators.LOCATOR_BUTTON_OPEN_REQUEST)
        button_open_request.click()
        time.sleep(1)
        self.switching_window(-1)
        self.driver.maximize_window()
