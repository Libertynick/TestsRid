import time

import allure
import pytest
from datetime import datetime

from config import TestEnvironment
from crm_pages.contract_page.contract_page import ContractPage
from crm_pages.organization_page.editing_organization_page import EditingOrganization, TitleDiscounts
from crm_pages.header_page.header_page import HeaderPage
from crm_pages.modal_new_kp.modal_new_kp import ModalNewKp
from crm_pages.object_page.object_page import ObjectPage, KpTab
from crm_pages.pq_page.pq_page import PqPage
from crm_pages.search_objects_page.search_object_page import SearchObjectPage
from crm_pages.search_organization_page.search_organization_page import SearchOrganizationPage
from crm_pages.search_pq_page.search_pq_page import SearchPq
from open_pages.confirmation_page.confirmation_page import ConfirmationPage
from open_pages.design_condition_page.design_condition_page import DesignConditionPage
from open_pages.header.profile_menu_user import ProfileMenuUser
from open_pages.main_page.main_page import MainPage
from open_pages.my_design_conditions_page.my_design_conditions_page import MyDesignConditionsPage
from open_pages.order_details_page.order_details_page import OrderDetails


@allure.feature('Создание заказа из PQ')
@allure.story('Предоплата. Код со спец ценой. Бесплатная доставка на адрес')
@pytest.mark.parametrize('article', ['065B8307RG'])
@pytest.mark.stage
def test_26643_order_from_pq_special_price(browser, article, auth_crm_extru_start, auth_extru_crm_from_authorized_page,
                                           agreement_on_all_conditions_extru):
    """Специальная цена. Создание заказа из PQ на код со специальной ценой"""
    inn_unived_organization = '7810955675'  # Инн организации Юнивэд
    sales_office = "Москва"
    cd_contract = 'CD10678'  # номер cd договора
    num_contract = '0014422435'  # Номер договора
    special_price_for_code = 50.0  # Специальная цена для кода при добавлении
    delivery_conditions = 'Доставка на указанный адрес'
    delivery_address = 'Россия, г Москва, ул Римского-Корсакова, д 1'
    date_curse_cb = '28.11.2024'

    login_user_for_test = TestEnvironment.LOGIN_CRM
    password_user_for_test = '1234'

    auth_crm_extru_start(ruco=login_user_for_test, password=password_user_for_test)

    page = HeaderPage(browser, TestEnvironment.LINK_CRM_TST)
    page.go_to_organization_search_page()

    # Страница поиска организации
    page = SearchOrganizationPage(browser, TestEnvironment.LINK_CRM_TST)
    page.choosing_a_sales_office(sales_office)
    page.search_organization_by_inn(inn_unived_organization)
    page.opening_an_head_organization_card_in_a_new_tab()

    # Страница редактирования организации
    page = EditingOrganization(browser, TestEnvironment.LINK_CRM_TST)
    page.go_to_title_discounts()

    # Вкладка Скидки
    page = TitleDiscounts(browser, TestEnvironment.LINK_CRM_TST)
    page.opening_a_contract_by_number_in_a_new_tab(cd_contract)

    # Страница карточки договора
    page = ContractPage(browser, TestEnvironment.LINK_CRM_TST)
    page.checking_display_of_contract_number(num_contract)
    page.adding_a_special_price_to_code_in_ye_if_not_added(article, special_price_for_code)
    price_article_in_special_price = page.saving_code_price_in_special_price_section(article)
    # print(price_article_in_special_price, f'Цена артикула {article} в разделе Специальная цена')
    price_list_by_article = page.saving_price_list_by_article_in_special_price_section(article)
    # print(f'{price_list_by_article} Прайс-лист артикула {article}')
    page.must_be_currency_cu_cbr(article)

    # Переход на страницу поиска объекта

    browser.execute_script("window.open(arguments[0])", TestEnvironment.LINK_CRM_TST)
    page.switching_window(-1)

    # page.change_to_user_if_busy_to_another()
    auth_extru_crm_from_authorized_page(url_page=TestEnvironment.LINK_CRM_TST)

    page = HeaderPage(browser, TestEnvironment.LINK_CRM_TST)
    page.go_to_object_page()

    page = SearchObjectPage(browser, TestEnvironment.LINK_CRM_TST)
    # Выбор офиса продаж
    page.selecting_a_sales_office()
    # поиск объекта
    page.search_object(TestEnvironment.OBJECT_TST)
    # Переход в объект
    page.go_to_object(TestEnvironment.OBJECT_TST)

    # Страница Объекта
    page = ObjectPage(browser, TestEnvironment.LINK_CRM_TST)
    page.click_add_kp()

    # Модалка создания КП
    page = ModalNewKp(browser, TestEnvironment.LINK_CRM_TST)
    page.choice_distributor(TestEnvironment.DISTRIBUTOR_UNIVED_TST)
    page.choice_sap_code_main_contract(num_contract)
    page.choice_final_buyer()
    page.there_must_be_an_advance_payment()
    page.selection_of_delivery_conditions(delivery_conditions)
    page.entering_a_shipping_address(delivery_address)
    page.choice_of_free_payment_mode()

    # Ввод кодов
    page.adding_codes(article)

    article_autocorrect = page.saving_added_code_when_autocorrecting(article)

    article = article_autocorrect if article_autocorrect != '' else article

    price_one_joke_without_nds_on_page = page.save_price_one_joke_without_nds(article)
    current_course_in_kp = page.saving_current_course_in_kp_by_article(article)
    true_price_one_joke_without_nds = price_article_in_special_price * current_course_in_kp
    assert abs(true_price_one_joke_without_nds - price_one_joke_without_nds_on_page) < 0.5, \
        f'Спеццена. Цена за штуку {article} без НДС на странице {price_one_joke_without_nds_on_page} не соответствует ожидаемой - ' \
        f'{true_price_one_joke_without_nds}'
    page.there_should_be_a_special_price_icon_at_article(article)

    # Переключение на розницу
    page.click_btn_switch_special_price_retail_at_article(article)
    price_one_joke_without_nds_on_page = page.save_price_one_joke_without_nds(article)
    current_course_in_kp = page.saving_current_course_in_kp_by_article(article)
    true_price_one_joke_without_nds = price_list_by_article * current_course_in_kp
    assert abs(true_price_one_joke_without_nds - price_one_joke_without_nds_on_page) < 0.5, \
        f'Розница. Цена за штуку {article} без НДС на странице {price_one_joke_without_nds_on_page} не соответствует ' \
        f'ожидаемой - {true_price_one_joke_without_nds}'

    # Переключение на спец. цену
    page.click_btn_switch_special_price_retail_at_article(article)
    price_one_joke_without_nds_on_page = page.save_price_one_joke_without_nds(article)
    current_course_in_kp = page.saving_current_course_in_kp_by_article(article)
    true_price_one_joke_without_nds = price_article_in_special_price * current_course_in_kp
    assert abs(true_price_one_joke_without_nds - price_one_joke_without_nds_on_page) < 0.5, \
        f'Спеццена. Цена за штуку {article} без НДС на странице {price_one_joke_without_nds_on_page} не соответствует ' \
        f'ожидаемой - {true_price_one_joke_without_nds}'

    # Переключение валюты на рубли

    page.switching_currency_to_a_fixed_rate()
    page.click_button_recalculate()
    price_one_joke_without_nds_rub_curse = page.save_price_one_joke_without_nds(article)

    assert abs(price_one_joke_without_nds_rub_curse - price_one_joke_without_nds_on_page) < 0.5, \
        f'Цена за штуку {article} без НДС - ({price_one_joke_without_nds_rub_curse}) после пересчета на рубли не соответствует' \
        f' цене за штуку без НДС до пересчета на рубли - ({price_one_joke_without_nds_on_page})'

    # Переключение даты курса
    page.select_course_date(date_curse_cb)
    page.click_button_recalculate()
    price_one_joke_without_nds_date_curse = page.save_price_one_joke_without_nds(article)
    print(price_one_joke_without_nds_date_curse, f'Цена за штуку без НДС на курс по дате {date_curse_cb}')
    assert abs(price_one_joke_without_nds_date_curse - price_one_joke_without_nds_on_page) < 0.5, \
        f'Цена за штуку без НДС - ({price_one_joke_without_nds_date_curse}) после пересчета на на дату курса ' \
        f'{date_curse_cb} не соответствует цене за штуку без НДС до пересчета на рубли ' \
        f'- ({price_one_joke_without_nds_on_page})'

    # Сохранение стоимости в кп crm
    amount_total_in_kp_crm_after_adding_codes = page.store_amount_nds_total_in_kp_crm_rub()
    # print(amount_total_in_kp_crm_after_adding_codes, '- Итоговая стоимость после добавления кодов')

    # Сохранение скидок
    all_discount_in_crm = page.store_all_discount()
    # print(all_discount_in_crm, '- Скидки')
    # Сохранение PQ и отправка на согласование
    page.click_btn_save_pq()
    num_pq = page.store_num_pq_in_title()
    print(num_pq)
    page.send_for_approval_from_modal_new_kp()
    page.modal_kp_has_not_been_pre_screened()

    # Переход на вкладку КП -> Переход на страницу PQ по номеру PQ
    page = ObjectPage(browser, TestEnvironment.LINK_CRM_TST)
    page.go_to_chapter_kp()
    page = KpTab(browser, TestEnvironment.LINK_CRM_TST)
    page.opening_pq_in_a_new_tab_by_number(num_pq)

    # Страница PQ
    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    page.payment_condition_must_be_advance_payment()

    url_pq = browser.current_url

    agreement_on_all_conditions_extru()

    # Смена на себя

    auth_extru_crm_from_authorized_page(url_page=url_pq, name_user=login_user_for_test)

    # Сохранение итоговой суммы после согласования и сравнение с суммой до согласования
    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    final_amount_after_agreement = page.saving_the_final_amount_rub_after_agreement()
    assert final_amount_after_agreement == amount_total_in_kp_crm_after_adding_codes, \
        f'Сумма в PQ после согласования ({final_amount_after_agreement}) не равна сумме до согласования ' \
        f'({amount_total_in_kp_crm_after_adding_codes})'
    # print(final_amount_after_agreement, 'Итоговая сумма КП в crm после согласования')

    page.should_be_free_payment_mode()
    page.payment_condition_must_be_advance_payment()

    # Переход в Опен
    browser.execute_script("window.open(arguments[0])", TestEnvironment.LINK_OPEN_TST)
    page = MainPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.switching_window(-1)
    page.authorization_from_main_page(TestEnvironment.LOGIN_TST_ELITA, TestEnvironment.PASSWORD_TST_ELITA)

    # Переход в Мои проектные условия
    page = ProfileMenuUser(browser, TestEnvironment.LINK_OPEN_TST)
    page.click_profile()
    page.go_to_design_conditions()

    page = MyDesignConditionsPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.select_inn_in_search(inn_unived_organization)

    page.search_for_pq_and_switch_to_it(num_pq)

    # Страница Проектное условие
    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.payment_condition_must_be_advance_payment()
    page.should_be_free_shipping_to_the_specified_address()

    total_cost_on_the_design_condition_page = page.saving_the_final_cost_rub_on_the_design_condition_page()
    # print(total_cost_on_the_design_condition_page)
    assert total_cost_on_the_design_condition_page == final_amount_after_agreement, \
        f'Итоговая сумма на странице Проектное условие ({total_cost_on_the_design_condition_page})' \
        f'не равна итоговой сумме после согласования в crm ({final_amount_after_agreement})'
    all_discounts_on_the_design_condition_page = page.store_all_discounts_on_the_design_condition_page()
    # print(all_discounts_on_the_design_condition_page, 'скидки на странице Проектное условие')

    # Проверка равенства скидок в crm и на странице Проектное условие
    set_all_discounts_on_the_design_condition_page = set(all_discounts_on_the_design_condition_page)
    set_all_discount_in_crm = set(all_discount_in_crm)
    assert set_all_discounts_on_the_design_condition_page == set_all_discount_in_crm, \
        f'Скидки в crm ({set_all_discount_in_crm}) не равны скидкам на странице ' \
        f'Проектное условие ({set_all_discounts_on_the_design_condition_page})'

    page.availability_display_check()
    page.click_button_order()

    # Страница Подтверждение
    page = ConfirmationPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.must_be_prepaid()
    page.check_box_shipment_only_when_fully_assembled_must_not_be_selected()
    page.clickability_check_shipment_only_when_fully_assembled()
    page.delivery_method_must_be_free()
    page.check_delivery_address_materials(delivery_address)

    all_discounts_confirmation_page = page.store_all_discounts_on_the_confirmation_page()
    # print(all_discounts_confirmation_page, 'Скидки на странице Подтверждение')
    set_all_discounts_confirmation_page = set(all_discounts_confirmation_page)
    assert set_all_discounts_confirmation_page == set_all_discounts_on_the_design_condition_page, \
        f'Скидки на странице Подтверждение ({set_all_discounts_confirmation_page}) не равны' \
        f'скидкам на странице Проектное условие ({set_all_discounts_on_the_design_condition_page})'

    total_cost_on_the_confirmation_page = page.store_total_cost_on_the_confirmation_page()
    total_cost_on_the_confirmation_page = int(total_cost_on_the_confirmation_page)
    total_cost_on_the_design_condition_page = int(total_cost_on_the_design_condition_page)
    # print(total_cost_on_the_confirmation_page, 'Итоговая стоимость на странице Подтверждение')

    assert total_cost_on_the_confirmation_page == total_cost_on_the_design_condition_page, \
        f'Стоимость на странице Подтверждение ({total_cost_on_the_confirmation_page}) не равна' \
        f'стоимости на странице Проектное условие ({total_cost_on_the_design_condition_page})'

    page.input_comment()
    page.click_button_confirm()
    page.dkp_link_open_check()
    page.click_on_the_button_to_return_to_pq()

    # Страница Проектное условие
    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.waiting_to_create_invoices()

    amount_in_created_orders = page.saving_the_amount_in_created_orders()
    # print(amount_in_created_orders, 'Общая сумма заказа после создания счетов')

    assert int(final_amount_after_agreement) == int(amount_in_created_orders), \
        f'Сумма в crm после согласования - ({final_amount_after_agreement}) не равна сумме ' \
        f'созданных счетов - ({amount_in_created_orders})'

    page.go_to_order(1)

    # Страница Детали заказа
    page = OrderDetails(browser, TestEnvironment.LINK_OPEN_TST)
    page.payment_condition_must_be_advance_payment()
    page.data_display_check()
    page.shipping_cost_should_be_free()
    page.should_be_free_shipping_to_the_specified_address()
    price_order_open = page.store_price_order()
    num_order = page.store_num_order()
    print(f'{num_order} - номер заказа')
    # print(price_order_open, f'Стоимость заказа {num_order} в деталях заказа в Опене')
    shipping_cost_order_page_open = page.store_delivery_cost()
    print(shipping_cost_order_page_open, f'Стоимость доставки на странице детали заказа {num_order} в Опене')
    page.checking_printing_forms_download(num_order)
    page.verify_check_host(num_order)

    # Переход в crm для сверки стоимости заказа
    browser.execute_script("window.open(arguments[0])", TestEnvironment.LINK_SEARCH_PQ_TST)
    page.switching_window(-1)
    page = SearchPq(browser, TestEnvironment.LINK_SEARCH_PQ_TST)
    time.sleep(2)
    page.search_order(num_order)
    page.go_to_order(num_order)

    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    page.payment_condition_must_be_advance_payment()
    page.should_be_free_payment_mode()
    page.there_should_be_a_special_price_icon_at_article(article)

    # Получаем текущую дату
    current_date = datetime.today().strftime('%d.%m.%Y')
    page.checking_entered_date_of_central_bank_exchange_rate(current_date)
    price_order_crm = page.store_price_crm_order()
    # print(price_order_crm, f'Стоимость заказа в ДКП crm {num_order}')
    page.verify_price_crm_with_price_open(price_order_crm, float(price_order_open))
