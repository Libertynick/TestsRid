import time

import allure
import pytest

from base_page.base_page import BasePageCrm
from config import TestEnvironment
from crm_pages.header_page.header_page import Tools
from crm_pages.modal_new_kp.modal_new_kp import ModalNewKp
from crm_pages.object_page.object_page import ObjectPage, KpTab
from crm_pages.pq_page.pq_page import PqPage

from crm_pages.search_pq_page.search_pq_page import SearchPq
from open_pages.confirmation_page.confirmation_page import ConfirmationPage
from open_pages.design_condition_page.design_condition_page import DesignConditionPage

from open_pages.header.profile_menu_user import ProfileMenuUser

from open_pages.main_page.main_page import MainPage
from open_pages.my_design_conditions_page.my_design_conditions_page import MyDesignConditionsPage
from open_pages.order_details_page.order_details_page import OrderDetails


@allure.feature('Создание заказа из PQ')
@allure.story('Предоплата. Материалы + ПТО В PQ - стандартные условия доставки. При заказе в Опене у ПТО - '
              'доставка до склада по договору, материалы - самовывоз')
@pytest.mark.parametrize('article', [
    'w488900 1 003L0145 100'])  # ПТО Материалы
@pytest.mark.stage
def test_26384_order_from_pq_materials_pto(browser, article, auth_crm_extru_start):
    """
    26384 Заказ из PQ материалы + ПТО. В PQ доставка - самовывоз,
    при заказе у ПТО меняется доставка на доставку до склада по договору
    """
    delivery_method_material = 'Самовывоз'
    delivery_method_pto = 'Доставка до склада'
    object_tst = TestEnvironment.LINK_OBJECT_IN_TST

    auth_crm_extru_start()

    # Страница Объекта
    page = ObjectPage(browser, object_tst)
    page.open()
    page.click_add_kp()

    # Модалка создания КП
    page = ModalNewKp(browser, TestEnvironment.LINK_CRM_TST)
    page.choice_distributor(TestEnvironment.DISTRIBUTOR_VODOKOMFORT_TST)
    page.choice_sap_code_main_contract()
    page.choice_final_buyer()
    page.there_must_be_an_advance_payment()
    # Ввод кодов
    page.adding_codes(article)
    # Сохранение стоимости в кп crm
    amount_total_in_kp_crm = page.store_amount_nds_total_in_kp_crm_rub()
    # print(amount_total_in_kp_crm, '- Итоговая стоимость')
    # Сохранение скидок
    all_discount_in_crm = page.store_all_discount()
    print(all_discount_in_crm, '- Скидки')
    page.switching_on_tumbler_show_discount_column_if_off()
    # Сохранение PQ и отправка на согласование
    page.click_btn_save_pq()
    num_pq = page.store_num_pq_in_title()
    print(num_pq)
    page.send_for_approval_from_modal_new_kp()
    page.modal_kp_has_not_been_pre_screened()

    # Переход на вкладку КП -> Переход на страницу PQ по номеру PQ
    page = ObjectPage(browser, TestEnvironment.LINK_CRM_TST)
    page.go_to_chapter_kp()
    page = KpTab(browser, TestEnvironment.LINK_CRM_TST)
    page.opening_pq_in_a_new_tab_by_number(num_pq)

    # Сохранение итоговой суммы после согласования и сравнение с суммой до согласования
    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    final_amount_after_agreement = page.saving_the_final_amount_rub_after_agreement()
    assert abs(final_amount_after_agreement - amount_total_in_kp_crm) < 0.5, \
        f'Сумма в PQ после согласования ({final_amount_after_agreement}) не равна сумме до согласования ' \
        f'({amount_total_in_kp_crm})'
    print(final_amount_after_agreement, 'Итоговая сумма КП в crm после согласования')
    window_crm = browser.current_window_handle

    # Переход в Опен
    browser.execute_script("window.open(arguments[0])", TestEnvironment.LINK_OPEN_TST)
    page = MainPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.switching_window(-1)
    page.authorization_from_main_page(TestEnvironment.LOGIN_TST_VODOKOMFORT, TestEnvironment.PASSWORD_TST_VODOKOMFORT)

    # Переход в Мои проектные условия
    page = ProfileMenuUser(browser, TestEnvironment.LINK_OPEN_TST)
    page.click_profile()
    page.go_to_design_conditions()

    # Поиск КП и переход в него
    page = MyDesignConditionsPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.search_for_pq_and_switch_to_it(num_pq)

    # Страница Проектное условие
    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.payment_condition_must_be_advance_payment()
    total_cost_on_the_design_condition_page = page.saving_the_final_cost_rub_on_the_design_condition_page()
    # print(total_cost_on_the_design_condition_page, 'Итоговая стоимость на странице Проектное условие')
    assert total_cost_on_the_design_condition_page == final_amount_after_agreement, \
        f'Итоговая сумма на странице Проектное условие ({total_cost_on_the_design_condition_page})' \
        f'не равна итоговой сумме после согласования в crm ({final_amount_after_agreement})'
    all_discounts_on_the_design_condition_page = page.store_all_discounts_on_the_design_condition_page()
    # print(all_discounts_on_the_design_condition_page, 'скидки на странице Проектное условие')

    # Проверка равенства скидок в crm и на странице Проектное условие
    set_all_discounts_on_the_design_condition_page = set(all_discounts_on_the_design_condition_page)
    set_all_discount_in_crm = set(all_discount_in_crm)
    assert set_all_discounts_on_the_design_condition_page == set_all_discount_in_crm, \
        f'Скидки в crm ({set_all_discount_in_crm}) не равны скидкам на странице ' \
        f'Проектное условие ({set_all_discounts_on_the_design_condition_page})'

    page.availability_display_check()
    page.click_button_order()

    # Страница Подтверждение
    page = ConfirmationPage(browser, TestEnvironment.LINK_OPEN_TST)
    all_discounts_confirmation_page = page.store_all_discounts_on_the_confirmation_page()
    # print(all_discounts_confirmation_page, 'Скидки на странице Подтверждение')
    set_all_discounts_confirmation_page = set(all_discounts_confirmation_page)
    assert set_all_discounts_confirmation_page == set_all_discounts_on_the_design_condition_page, \
        f'Скидки на странице Подтверждение ({set_all_discounts_confirmation_page}) не равны' \
        f'скидкам на странице Проектное условие ({set_all_discounts_on_the_design_condition_page})'

    total_cost_on_the_confirmation_page = page.store_total_cost_on_the_confirmation_page()
    total_cost_on_the_confirmation_page = int(total_cost_on_the_confirmation_page)
    total_cost_on_the_design_condition_page = int(total_cost_on_the_design_condition_page)
    # print(total_cost_on_the_confirmation_page, 'Итоговая стоимость на странице Подтверждение')

    assert abs(total_cost_on_the_confirmation_page - total_cost_on_the_design_condition_page) < 2, \
        f'Стоимость на странице Подтверждение ({total_cost_on_the_confirmation_page}) не равна' \
        f'стоимости на странице Проектное условие ({total_cost_on_the_design_condition_page})'
    page.must_be_prepaid()
    page.input_comment()
    page.choice_of_delivery_method_material(delivery_method_material)
    page.choice_of_delivery_method_pto(delivery_method_pto)

    page.checking_the_address_of_the_warehouse_during_self_delivery_materials()
    page.warehouse_address_verification_upon_delivery_to_the_warehouse_pto()
    page.click_button_confirm()
    page.dkp_link_open_check()
    page.click_on_the_button_to_return_to_pq()

    # Страница Проектное условие
    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.waiting_to_create_invoices()
    amount_in_created_orders = page.saving_the_amount_in_created_orders()
    assert int(final_amount_after_agreement) == int(amount_in_created_orders), \
        f'Сумма в crm после согласования - ({final_amount_after_agreement}) не равна сумме ' \
        f'созданных счетов в Опене на странице PQ- ({amount_in_created_orders})'

    page.go_to_order(1)
    # Страница Детали заказа
    page = OrderDetails(browser, TestEnvironment.LINK_OPEN_TST)
    page.payment_condition_must_be_advance_payment()
    page.data_display_check()
    price_order_open_1 = page.store_price_order()
    num_order_1 = page.store_num_order()
    # print(price_order_open_1, f'Стоимость заказа {num_order_1} в деталях заказа в Опене')
    page.checking_printing_forms_download(num_order_1)

    # Переход в crm для сверки стоимости заказа
    page = SearchPq(browser, TestEnvironment.LINK_SEARCH_PQ_TST)
    browser.switch_to.window(window_crm)
    page.open()

    page.search_order(num_order_1)
    page.go_to_order(num_order_1)

    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    page.payment_condition_must_be_advance_payment()
    price_order_crm_1 = page.store_price_crm_order()
    # print(price_order_crm_1, f'Стоимость заказа в ДКП crm {num_order_1}')
    page.verify_price_crm_with_price_open(price_order_crm_1, float(price_order_open_1))

    # Возврат на вкладку Проектное условие для перехода во 2-ой заказ
    page.switching_window(2)

    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.go_to_order(2)

    page = OrderDetails(browser, TestEnvironment.LINK_OPEN_TST)
    page.payment_condition_must_be_advance_payment()
    page.data_display_check()
    price_order_open_2 = page.store_price_order()
    num_order_2 = page.store_num_order()
    # print(price_order_open_2, f'Стоимость заказа {num_order_2} в деталях заказа в Опене')
    page.checking_printing_forms_download(num_order_2)

    # Открытие страницы поиска заказа в crm
    page = SearchPq(browser, TestEnvironment.LINK_SEARCH_PQ_TST)
    browser.switch_to.window(window_crm)
    page.open()

    page.search_order(num_order_2)
    page.go_to_order(num_order_2)

    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    page.payment_condition_must_be_advance_payment()
    price_order_crm_2 = page.store_price_crm_order()
    # print(price_order_crm_2, f'Стоимость заказа в ДКП crm {num_order_2}')
    page.verify_price_crm_with_price_open(price_order_crm_2, float(price_order_open_2))
