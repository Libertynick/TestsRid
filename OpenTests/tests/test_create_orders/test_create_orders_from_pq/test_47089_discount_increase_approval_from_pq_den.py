import allure
import time

import pytest

from config import TestEnvironment
from crm_pages.modal_new_kp.modal_new_kp import ModalNewKp
from crm_pages.object_page.object_page import ObjectPage, KpTab
from crm_pages.pq_page.pq_page import PqPage
from crm_pages.search_pq_page.search_pq_page import SearchPq
from open_pages.confirmation_page.confirmation_page import ConfirmationPage
from open_pages.design_condition_page.design_condition_page import DesignConditionPage
from open_pages.header.profile_menu_user import ProfileMenuUser
from open_pages.main_page.main_page import MainPage
from open_pages.my_design_conditions_page.my_design_conditions_page import MyDesignConditionsPage
from open_pages.order_details_page.order_details_page import OrderDetails


@allure.feature('Создание заказа из PQ')
@allure.story('Самовывоз. Материалы. Стандартный заказ - Предоплата. Проверка согласования DEN')
@pytest.mark.parametrize('article', ['082X4070R 5 082X4068R 5'])
@pytest.mark.stage
@pytest.mark.autostart
def test_47089_discount_increase_approval_from_pq_den(browser, article, auth_crm_extru_start,
                                                      auth_extru_crm_from_authorized_page,
                                                      agreement_on_all_conditions_extru):
    """47089 Проверка согласования DEN"""
    delivery_conditions = 'Доставка на указанный адрес'
    delivery_address = 'Россия, г Москва, ул Римского-Корсакова, д 1'
    discount_distr = 53.0
    new_discount_distr = 55.0
    url_object_tst = TestEnvironment.LINK_OBJECT_IN_TST
    object_tst = TestEnvironment.LINK_OBJECT_IN_TST

    auth_crm_extru_start()

    # Страница Объекта
    page = ObjectPage(browser, object_tst)
    page.open()
    page.click_add_kp()

    # Модалка создания КП
    page = ModalNewKp(browser, TestEnvironment.LINK_CRM_TST)
    page.choice_distributor(TestEnvironment.DISTRIBUTOR_VODOKOMFORT_TST)
    page.choice_sap_code_main_contract()
    page.choice_final_buyer()
    page.there_must_be_an_advance_payment()
    page.selection_of_delivery_conditions(delivery_conditions)
    page.entering_a_shipping_address(delivery_address)
    page.choice_of_free_payment_mode()

    # Ввод кодов
    page.adding_codes(article)
    # Проставление скидок по всем позициям
    page.placing_discounts_on_all_items_to_distributor(discount_distr)
    # Сохранение стоимости в кп crm
    amount_total_in_kp_crm_after_adding_codes = page.store_amount_nds_total_in_kp_crm_rub()
    print(amount_total_in_kp_crm_after_adding_codes, '- Итоговая стоимость после добавления кодов')

    # Сохранение скидок
    all_discount_in_crm = page.store_all_discount()
    print(all_discount_in_crm, '- Скидки')
    # Добавление комментария
    page.entering_a_comment_in_kp()
    # Сохранение PQ и отправка на согласование
    page.switching_on_tumbler_show_discount_column_if_off()
    page.click_btn_save_pq()
    num_pq = page.store_num_pq_in_title()
    print(num_pq)
    page.send_for_approval_from_modal_new_kp()
    page.modal_kp_has_not_been_pre_screened()

    # Переход на вкладку КП -> Переход на страницу PQ по номеру PQ
    page = ObjectPage(browser, TestEnvironment.LINK_CRM_TST)
    page.go_to_chapter_kp()
    page = KpTab(browser, TestEnvironment.LINK_CRM_TST)
    page.opening_pq_in_a_new_tab_by_number(num_pq)

    # Страница PQ
    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    page.payment_condition_must_be_advance_payment()
    # Проверка, что появилось согласование DEN
    page.verification_of_agreement_den()
    agreements_den = page.save_contractors_den()
    url_pq = browser.current_url

    # Переключение на одного из согласователей DEN
    auth_extru_crm_from_authorized_page(url_page=url_pq, name_user=agreements_den[0])

    # Согласовать КП сотрудником DEN
    page = PqPage(browser, url_object_tst)
    page.agreement_employee_den()
    page.click_on_the_agree_button()

    # Отклонение КП согласователем Незакрепленное КП
    page = PqPage(browser, url_object_tst)
    page.click_btn_consent_failure()
    page.entering_a_comment_for_approval()
    page.click_btn_reject_in_the_approval_modal()
    # Переключиться на селза
    auth_extru_crm_from_authorized_page(url_page=url_pq)

    # Увеличение скидки
    page = ModalNewKp(browser, TestEnvironment.LINK_CRM_TST)
    page.placing_discounts_on_all_items_to_distributor(new_discount_distr)
    # Сохранение стоимости в кп crm
    amount_total_in_kp_crm_after_adding_codes = page.store_amount_nds_total_in_kp_crm_rub()

    # Сохранение скидок
    all_discount_in_crm = page.store_all_discount()
    # Добавление комментария
    page.entering_a_comment_in_kp()
    # Отправка на согласование

    page = PqPage(browser, url_object_tst)
    page.send_for_approval_pq_page()
    page.modal_kp_has_not_been_pre_screened()

    # Проверка, что появилось согласование DEN
    page.verification_of_agreement_den()

    page.payment_condition_must_be_advance_payment()
    agreement_on_all_conditions_extru()

    # Смена на селза
    auth_extru_crm_from_authorized_page(url_page=url_pq)

    # Сохранение итоговой суммы после согласования и сравнение с суммой до согласования
    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    final_amount_after_agreement = page.saving_the_final_amount_rub_after_agreement()
    assert abs(final_amount_after_agreement - amount_total_in_kp_crm_after_adding_codes) < 1, \
        f'Сумма в PQ после согласования ({final_amount_after_agreement}) не равна сумме до согласования ' \
        f'({amount_total_in_kp_crm_after_adding_codes})'
    # print(final_amount_after_agreement, 'Итоговая сумма КП в crm после согласования')

    page.should_be_free_payment_mode()
    page.payment_condition_must_be_advance_payment()

    # Переход в Опен
    browser.execute_script("window.open(arguments[0])", TestEnvironment.LINK_OPEN_TST)
    page = MainPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.switching_window(-1)
    page.authorization_from_main_page(TestEnvironment.LOGIN_TST_VODOKOMFORT, TestEnvironment.PASSWORD_TST_VODOKOMFORT)

    # Переход в Мои проектные условия
    page = ProfileMenuUser(browser, TestEnvironment.LINK_OPEN_TST)
    page.click_profile()
    page.go_to_design_conditions()

    # Поиск КП и переход в него
    page = MyDesignConditionsPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.search_for_pq_and_switch_to_it(num_pq)

    # Страница Проектное условие
    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.payment_condition_must_be_advance_payment()
    page.should_be_free_shipping_to_the_specified_address()

    total_cost_on_the_design_condition_page = page.saving_the_final_cost_rub_on_the_design_condition_page()
    # print(total_cost_on_the_design_condition_page)
    assert total_cost_on_the_design_condition_page == final_amount_after_agreement, \
        f'Итоговая сумма на странице Проектное условие ({total_cost_on_the_design_condition_page})' \
        f'не равна итоговой сумме после согласования в crm ({final_amount_after_agreement})'
    all_discounts_on_the_design_condition_page = page.store_all_discounts_on_the_design_condition_page()
    # print(all_discounts_on_the_design_condition_page, 'скидки на странице Проектное условие')

    # Проверка равенства скидок в crm и на странице Проектное условие
    set_all_discounts_on_the_design_condition_page = set(all_discounts_on_the_design_condition_page)
    set_all_discount_in_crm = set(all_discount_in_crm)
    assert set_all_discounts_on_the_design_condition_page == set_all_discount_in_crm, \
        f'Скидки в crm ({set_all_discount_in_crm}) не равны скидкам на странице ' \
        f'Проектное условие ({set_all_discounts_on_the_design_condition_page})'

    page.availability_display_check()
    page.click_button_order()

    # Страница Подтверждение
    page = ConfirmationPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.must_be_prepaid()
    page.check_box_shipment_only_when_fully_assembled_must_not_be_selected()
    page.clickability_check_shipment_only_when_fully_assembled()
    page.delivery_method_must_be_free()
    page.check_delivery_address_materials(delivery_address)

    all_discounts_confirmation_page = page.store_all_discounts_on_the_confirmation_page()
    # print(all_discounts_confirmation_page, 'Скидки на странице Подтверждение')
    set_all_discounts_confirmation_page = set(all_discounts_confirmation_page)
    assert set_all_discounts_confirmation_page == set_all_discounts_on_the_design_condition_page, \
        f'Скидки на странице Подтверждение ({set_all_discounts_confirmation_page}) не равны' \
        f'скидкам на странице Проектное условие ({set_all_discounts_on_the_design_condition_page})'

    total_cost_on_the_confirmation_page = page.store_total_cost_on_the_confirmation_page()
    total_cost_on_the_confirmation_page = int(total_cost_on_the_confirmation_page)
    total_cost_on_the_design_condition_page = int(total_cost_on_the_design_condition_page)
    # print(total_cost_on_the_confirmation_page, 'Итоговая стоимость на странице Подтверждение')

    assert abs(total_cost_on_the_confirmation_page - total_cost_on_the_design_condition_page) < 1.1, \
        f'Стоимость на странице Подтверждение ({total_cost_on_the_confirmation_page}) не равна' \
        f'стоимости на странице Проектное условие ({total_cost_on_the_design_condition_page})'

    page.input_comment()
    page.click_button_confirm()
    page.dkp_link_open_check()
    page.click_on_the_button_to_return_to_pq()

    # Страница Проектное условие
    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.waiting_to_create_invoices()

    amount_in_created_orders = page.saving_the_amount_in_created_orders()
    # print(amount_in_created_orders, 'Общая сумма заказа после создания счетов')

    assert int(final_amount_after_agreement) == int(amount_in_created_orders), \
        f'Сумма в crm после согласования - ({final_amount_after_agreement}) не равна сумме ' \
        f'созданных счетов - ({amount_in_created_orders})'

    page.go_to_order(1)

    # Страница Детали заказа
    page = OrderDetails(browser, TestEnvironment.LINK_OPEN_TST)
    page.payment_condition_must_be_advance_payment()
    page.data_display_check()
    page.shipping_cost_should_be_free()
    page.should_be_free_shipping_to_the_specified_address()
    price_order_open = page.store_price_order()
    num_order = page.store_num_order()
    # print(price_order_open, f'Стоимость заказа {num_order} в деталях заказа в Опене')
    shipping_cost_order_page_open = page.store_delivery_cost()
    print(shipping_cost_order_page_open, f'Стоимость доставки на странице детали заказа {num_order} в Опене')
    page.checking_printing_forms_download(num_order)

    # Переход в crm для сверки стоимости заказа
    browser.execute_script("window.open(arguments[0])", TestEnvironment.LINK_SEARCH_PQ_TST)
    page.switching_window(-1)
    page = SearchPq(browser, TestEnvironment.LINK_SEARCH_PQ_TST)
    time.sleep(2)
    page.search_order(num_order)
    page.go_to_order(num_order)

    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    page.payment_condition_must_be_advance_payment()
    page.should_be_free_payment_mode()
    price_order_crm = page.store_price_crm_order()
    # print(price_order_crm, f'Стоимость заказа в ДКП crm {num_order}')
    page.verify_price_crm_with_price_open(price_order_crm, float(price_order_open))
