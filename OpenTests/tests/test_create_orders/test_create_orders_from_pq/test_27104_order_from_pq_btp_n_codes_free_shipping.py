import time

import allure
import pytest

from config import TestEnvironment
from crm_pages.modal_new_kp.modal_new_kp import ModalNewKp
from crm_pages.object_page.object_page import ObjectPage, KpTab
from crm_pages.pq_page.pq_page import PqPage
from crm_pages.search_pq_page.search_pq_page import SearchPq
from open_pages.confirmation_page.confirmation_page import ConfirmationPage
from open_pages.design_condition_page.design_condition_page import DesignConditionPage
from open_pages.header.profile_menu_user import ProfileMenuUser
from open_pages.main_page.main_page import MainPage
from open_pages.my_design_conditions_page.my_design_conditions_page import MyDesignConditionsPage
from open_pages.order_details_page.order_details_page import OrderDetails


@allure.feature('Создание заказа из PQ')
@allure.story('Предоплата. БТП. Бесплатная доставка на адрес')
@pytest.mark.parametrize('article', [

    'N0204249262-1 5', 'S0805240011-1 3', 'N0204249262-1 S0805240011-1 BAST0404241646'

])  # заказ на бтп, заказ на бтп + баст
@pytest.mark.stage
def test_27104_order_from_pq_btp_n_codes_free_shipping(browser, article, auth_crm_extru_start,
                                                       auth_extru_crm_from_authorized_page,
                                                       agreement_on_all_conditions_extru):
    """Заказ из pq BTP коды бесплатная доставка"""
    delivery_type = 'Бесплатная доставка на указанный адрес'
    correct_mode_of_payment_for_delivery = 'Бесплатно'  # Корректный режим оплаты доставки
    object_tst = TestEnvironment.LINK_OBJECT_IN_TST

    auth_crm_extru_start()

    # Страница Объекта
    page = ObjectPage(browser, object_tst)
    page.open()
    page.click_add_kp_tp_btp()

    # Модалка создания КП
    page = ModalNewKp(browser, TestEnvironment.LINK_CRM_TST)
    page.choice_distributor(TestEnvironment.DISTRIBUTOR_VODOKOMFORT_TST)
    page.choice_sap_code_main_contract()
    page.choice_final_buyer()
    page.there_must_be_an_advance_payment()
    page.choice_of_free_payment_mode()

    # Ввод кодов
    page.adding_codes(article)
    # Сохранение стоимости в кп crm
    amount_total_in_kp_crm = page.store_amount_nds_total_in_kp_crm_rub()
    # print(amount_total_in_kp_crm, '- Итоговая стоимость')
    # Сохранение скидок
    all_discount_in_crm = page.store_all_discount()
    # print(all_discount_in_crm, '- Скидки')
    # Сохранение PQ и отправка на согласование
    page.switching_on_tumbler_show_discount_column_if_off()
    page.click_btn_save_pq()
    num_pq = page.store_num_pq_in_title()
    print(num_pq, 'Номер PQ')
    page.send_for_approval_from_modal_new_kp()
    page.modal_kp_has_not_been_pre_screened()

    # Переход на вкладку КП -> Переход на страницу PQ по номеру PQ
    page = ObjectPage(browser, TestEnvironment.LINK_CRM_TST)
    page.go_to_chapter_kp()
    page = KpTab(browser, TestEnvironment.LINK_CRM_TST)
    page.opening_pq_in_a_new_tab_by_number(num_pq)

    # Страница PQ
    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    page.payment_condition_must_be_advance_payment()

    agreement_on_all_conditions_extru()

    url_pq = browser.current_url
    # Смена на себя
    auth_extru_crm_from_authorized_page(url_page=url_pq)

    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)

    # Сравнение режима оплаты (должны быть доставка за счет клиента)
    page.checking_the_selected_mode_of_payment_for_delivery(correct_mode_of_payment_for_delivery)

    # Сохранение итоговой суммы после согласования и сравнение с суммой до согласования
    final_amount_after_agreement = page.saving_the_final_amount_rub_after_agreement()
    assert abs(final_amount_after_agreement - amount_total_in_kp_crm) < 1, \
        f'Сумма в PQ после согласования ({final_amount_after_agreement}) не равна сумме до согласования ' \
        f'({amount_total_in_kp_crm})'
    # print(final_amount_after_agreement, 'Итоговая сумма КП в crm после согласования')

    # Переход в Опен
    browser.execute_script("window.open(arguments[0])", TestEnvironment.LINK_OPEN_TST)
    page = MainPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.switching_window(-1)
    page.authorization_from_main_page(TestEnvironment.LOGIN_TST_VODOKOMFORT, TestEnvironment.PASSWORD_TST_VODOKOMFORT)

    # Переход в Мои проектные условия
    page = ProfileMenuUser(browser, TestEnvironment.LINK_OPEN_TST)
    page.click_profile()
    page.go_to_design_conditions()

    page = MyDesignConditionsPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.search_for_pq_and_switch_to_it(num_pq)

    # Проектное условие
    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.there_must_be_a_complete_terms_of_purchase()
    page.should_be_free_shipping_to_the_specified_address()
    # page.tooltip_check_btp_total_weight()
    page.availability_display_check()
    all_discounts_design_condition_page = page.store_all_discounts_on_the_design_condition_page()
    # print(all_discounts_design_condition_page, 'Скидки на странице Проектное условие')
    assert all_discounts_design_condition_page == all_discount_in_crm, \
        f'Скидки на странице Проектное условие - ({all_discounts_design_condition_page})' \
        f'не равны скидкам в CRM - ({all_discount_in_crm})'

    # Сумма на странице Проектное условие до заказа
    amount_per_page_design_condition_before_order = page.saving_the_final_cost_rub_on_the_design_condition_page()
    # print(amount_per_page_design_condition_before_order, 'Сумма на странице Проектное условие до заказа')
    assert abs(amount_per_page_design_condition_before_order - amount_total_in_kp_crm) < 1, \
        f'Сумма на странице Проектное условие до заказа - ({amount_per_page_design_condition_before_order})' \
        f'не равна сумме в CRM - ({amount_total_in_kp_crm})'
    page.click_button_order()

    # Страница Подтверждение
    page = ConfirmationPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.must_be_prepaid()
    all_discounts_confirmation_page = page.store_all_discounts_on_the_confirmation_page()
    # print(all_discounts_confirmation_page, 'Скидки на странице Подтверждение')
    # set_all_discounts_confirmation_page = set(all_discounts_confirmation_page)
    all_discounts_confirmation_page.sort()
    all_discounts_design_condition_page.sort()
    assert all_discounts_confirmation_page == all_discounts_design_condition_page, \
        f'Скидки на странице Подтверждение - ({all_discounts_confirmation_page}) не равны ' \
        f'скидкам на странице Проектное условие - ({all_discounts_design_condition_page})'

    all_amount_on_the_confirmation_page = page.store_total_cost_on_the_confirmation_page()
    # print(all_amount_on_the_confirmation_page, 'Стоимость на странице Подтверждение')
    assert abs(int(all_amount_on_the_confirmation_page) - int(amount_per_page_design_condition_before_order)) < 1.1, \
        f'Цена на странице Подтверждение - ({int(all_amount_on_the_confirmation_page)}) не равна ' \
        f'цене на странице Проектное условие - ({int(amount_per_page_design_condition_before_order)})'

    page.input_comment()
    page.checking_the_selected_delivery(delivery_type)
    page.click_button_confirm()
    page.dkp_link_open_check()
    page.click_on_the_button_to_return_to_pq()

    # Страница Проектное условие
    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.waiting_to_create_invoices()
    amount_in_created_orders = page.saving_the_amount_in_created_orders()
    # print(amount_in_created_orders, 'Общая сумма заказа после создания счетов')

    assert abs(amount_in_created_orders - all_amount_on_the_confirmation_page) < 2, \
        f'общая сумма после создания счетов - ({amount_in_created_orders}) не равна стоимости на странице ' \
        f'Подтверждение - ({all_amount_on_the_confirmation_page})'

    page.go_to_order(1)

    page = OrderDetails(browser, TestEnvironment.LINK_OPEN_TST)
    page.should_be_free_shipping_to_the_specified_address()
    page.shipping_cost_should_be_free()
    page.payment_condition_must_be_advance_payment()
    page.data_display_check()
    price_order_open = float(page.store_price_order())

    assert abs(price_order_open - all_amount_on_the_confirmation_page) < 2, \
        f'Стоимость на странице Заказа - ({price_order_open}) не равна стоимости на странице Подтверждение - ' \
        f'({all_amount_on_the_confirmation_page})'
    num_order = page.store_num_order()
    print(f'{num_order} - номер заказа')
    # print(price_order_open, f'Стоимость заказа {num_order} в деталях заказа в Опене')
    page.checking_printing_forms_download(num_order)

    # Переход в crm для сверки стоимости заказа
    browser.execute_script("window.open(arguments[0])", TestEnvironment.LINK_SEARCH_PQ_TST)
    page.switching_window(-1)
    page = SearchPq(browser, TestEnvironment.LINK_SEARCH_PQ_TST)
    time.sleep(2)
    page.search_order(num_order)
    page.go_to_order(num_order)

    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    page.payment_condition_must_be_advance_payment()
    price_order_crm = page.store_price_crm_order()
    # print(price_order_crm, f'Стоимость заказа в ДКП crm {num_order}')
    page.verify_price_crm_with_price_open(price_order_crm, price_order_open)
    page.should_be_free_payment_mode()
