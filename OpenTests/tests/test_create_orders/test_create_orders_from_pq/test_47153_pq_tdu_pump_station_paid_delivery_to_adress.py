import pytest
import allure
from config import TestEnvironment
from crm_pages.modal_new_kp.modal_new_kp import ModalNewKp
from crm_pages.object_page.object_page import ObjectPage, KpTab
from crm_pages.pq_page.pq_page import PqPage


@allure.feature('Создание заказа из PQ')
@allure.story('Доставка на адрес за счет клиента. ТДУ + Насосная станция. Предоплата')
@pytest.mark.parametrize('article', ['TDU1009575 Q0404240004-1'])
@pytest.mark.stage
def test_47153_pq_tdu_pump_station_paid_delivery_to_address(browser, article, auth_extru_crm_from_authorized_page,
                                                            auth_crm_extru_start, agreement_on_all_conditions_extru):
    """Тест создание заказа из PQ на ТДУ+Насосная станция с доставкой на адрес за счет клиента"""
    delivery_conditions = 'Доставка на указанный адрес'
    delivery_address = 'Россия, г Иваново, ул Кузнецова, д 12'
    # name_cookie = 'ASP.NET_SessionId'
    category_tdu = '2A'
    category_pump = 'WJ'
    object_tst = TestEnvironment.LINK_OBJECT_IN_TST

    auth_crm_extru_start()

    # Страница Объекта
    page = ObjectPage(browser, object_tst)
    page.open()
    page.click_add_kp()

    # Модалка создания КП
    page = ModalNewKp(browser, TestEnvironment.LINK_CRM_TST)
    page.choice_distributor(TestEnvironment.DISTRIBUTOR_VODOKOMFORT_TST)
    page.choice_sap_code_main_contract()
    page.choice_final_buyer()
    page.there_must_be_an_advance_payment()
    page.selection_of_delivery_conditions(delivery_conditions)
    page.entering_a_shipping_address(delivery_address)
    page.check_the_delivery_paid()

    # Ввод кодов
    page.adding_codes(article)
    # Сохранение стоимости в кп crm
    amount_total_in_kp_crm = page.store_amount_nds_total_in_kp_crm_rub()
    # print(amount_total_in_kp_crm_after_adding_codes, '- Итоговая стоимость после добавления кодов')
    # Сохранение скидок
    all_discount_in_crm = page.store_all_discount()
    print(all_discount_in_crm, '- Скидки')
    # Сохранение цен с НДС дистра по категориям товара
    price_with_nds_tdu = page.save_price_one_joke_with_nds_to_category(category_tdu)
    print(price_with_nds_tdu)
    price_with_nds_pump_st = page.save_price_one_joke_with_nds_to_category(category_pump)
    print(price_with_nds_pump_st)

    # Сохранение PQ и отправка на согласование
    page.click_btn_save_pq()
    num_pq = page.store_num_pq_in_title()
    print(num_pq)
    # Сохранение стоимости Доставки Мск и Дзержинск
    delivery_costs_msk = page.saving_delivery_costs_msk()
    assert delivery_costs_msk > 0, f'Сумма доставки со склада Москвы не посчиталась (равна 0)'
    delivery_costs_dzr = page.saving_delivery_costs_dzr()
    assert delivery_costs_dzr > 0, f'Сумма доставки со склада Дзержинск не посчиталась (равна 0)'
    page.send_for_approval_from_modal_new_kp()
    page.modal_kp_has_not_been_pre_screened()

    # Переход на вкладку КП -> Переход на страницу PQ по номеру PQ
    page = ObjectPage(browser, TestEnvironment.LINK_CRM_TST)
    page.go_to_chapter_kp()
    page = KpTab(browser, TestEnvironment.LINK_CRM_TST)
    page.opening_pq_in_a_new_tab_by_number(num_pq)

    # Сохранение итоговой суммы после согласования и сравнение с суммой до согласования
    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    final_amount_after_agreement = page.saving_the_final_amount_rub_after_agreement()
    assert abs(final_amount_after_agreement - amount_total_in_kp_crm) < 0.5, \
        f'Сумма в PQ после согласования ({final_amount_after_agreement}) не равна сумме до согласования ' \
        f'({amount_total_in_kp_crm})'
    print(final_amount_after_agreement, 'Итоговая сумма КП в crm после согласования')

    url_pq = browser.current_url
    # Смена на себя
    auth_extru_crm_from_authorized_page(url_page=url_pq, name_user=TestEnvironment.LOGIN_CRM)

    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    page.create_account()
    page.waiting_for_account_creation()
    page.number_unequal_check_dkp()

    window_pq_page = browser.current_window_handle
    list_num_dkp = page.save_all_num_dkp()
    print(list_num_dkp)
    # Первый заказ

    page.go_to_order_by_reference_number(1)

    if page.check_category_in_invoice(category_tdu):
        delivery_costs_msk_in_kp = page.saving_delivery_costs_msk()
        price_with_nds_tdu_in_check = page.save_price_one_joke_with_nds_to_category(category_tdu)
        assert delivery_costs_msk == delivery_costs_msk_in_kp, \
            (f'Стоимость доставки в КП {delivery_costs_msk} '
             f'не соответствует стоимости доставки в Счете {delivery_costs_msk_in_kp}')
        assert (price_with_nds_tdu_in_check + delivery_costs_msk_in_kp) - (price_with_nds_tdu + delivery_costs_msk), \
            (f'Сумма в Счете {(price_with_nds_tdu_in_check + delivery_costs_msk_in_kp)} '
             f'не равна сумме в PQ {(price_with_nds_tdu + delivery_costs_msk)}')

        browser.switch_to.window(window_pq_page)
        page.go_to_order_by_reference_number(2)

        page.check_category_in_invoice(category_pump)
        delivery_costs_dzr_in_kp = page.saving_delivery_costs_dzr()
        price_with_nds_pump_in_check = page.save_price_one_joke_with_nds_to_category(category_pump)
        assert delivery_costs_dzr == delivery_costs_dzr_in_kp, \
            (f'Стоимость доставки в КП {delivery_costs_dzr} '
             f'не соответствует стоимости доставки в Счете {delivery_costs_dzr_in_kp}')
        assert ((price_with_nds_pump_in_check + delivery_costs_dzr_in_kp) -
                (price_with_nds_pump_st + delivery_costs_dzr)), \
            (f'Сумма в Счете {(price_with_nds_pump_in_check + delivery_costs_dzr_in_kp)}'
             f' не равна сумме в PQ {(price_with_nds_pump_st + delivery_costs_dzr)}')

    elif page.check_category_in_invoice(category_pump):
        delivery_costs_dzr_in_kp = page.saving_delivery_costs_dzr()
        price_with_nds_pump_in_check = page.save_price_one_joke_with_nds_to_category(category_pump)
        assert delivery_costs_dzr == delivery_costs_dzr_in_kp, \
            (f'Стоимость доставки в КП {delivery_costs_dzr} '
             f'не соответствует стоимости доставки в Счете {delivery_costs_dzr_in_kp}')
        assert ((price_with_nds_pump_in_check + delivery_costs_dzr_in_kp) -
                (price_with_nds_pump_st + delivery_costs_dzr)), \
            (f'Сумма в Счете {(price_with_nds_pump_in_check + delivery_costs_dzr_in_kp)}'
             f' не равна сумме в PQ {(price_with_nds_pump_st + delivery_costs_dzr)}')

        browser.switch_to.window(window_pq_page)
        page.go_to_order_by_reference_number(1)

        page.check_category_in_invoice(category_tdu)
        delivery_costs_msk_in_kp = page.saving_delivery_costs_msk()
        price_with_nds_tdu_in_check = page.save_price_one_joke_with_nds_to_category(category_tdu)
        assert delivery_costs_msk == delivery_costs_msk_in_kp, \
            (f'Стоимость доставки в КП {delivery_costs_msk} '
             f'не соответствует стоимости доставки в Счете {delivery_costs_msk_in_kp}')
        assert abs((price_with_nds_tdu_in_check + delivery_costs_msk_in_kp)
                   - (price_with_nds_tdu + delivery_costs_msk)) < 0.1, \
            (f'Сумма в Счете {(price_with_nds_tdu_in_check + delivery_costs_msk_in_kp)} '
             f'не равна сумме в PQ {(price_with_nds_tdu + delivery_costs_msk)}')
