import allure
import pytest

from config import TestEnvironment
from crm_pages.modal_new_kp.modal_new_kp import ModalNewKp
from crm_pages.object_page.object_page import ObjectPage, KpTab
from crm_pages.pq_page.pq_page import PqPage


@allure.feature('Создание заказа из PQ')
@allure.story('Предоплата. Паяный ПТО (ППТО). Стандартные условия поставки. Создание заказа в СРМ.')
@pytest.mark.stage
@pytest.mark.parametrize('article', ['w203057400'])
def test_45170_kp_for_soldered_pto_ppto(browser, article, auth_crm_extru_start, auth_extru_crm_from_authorized_page,
                                        agreement_on_all_conditions_extru):
    """45170 КП на Паяный ПТО (ППТО). Стандартные условия. Предоплата"""
    url_object_tst = TestEnvironment.LINK_OBJECT_IN_TST
    login_crm = TestEnvironment.LOGIN_CRM

    potential_mode = 'Частичная закупка'
    distributor = TestEnvironment.DISTRIBUTOR_VODOKOMFORT_TST
    discount_for_entering = 62.367
    discount_for_entering_on_pq_page = 32.4561

    auth_crm_extru_start(ruco=login_crm)

    page = ObjectPage(browser, url_object_tst)
    page.open()
    page.click_add_kp()

    page = ModalNewKp(browser, url_object_tst)
    page.potential_mode_selection(potential_mode)
    page.internal_course_toggle_switch_must_be_turned_on()
    page.there_must_be_an_advance_payment()
    page.choice_distributor(distributor)
    page.choice_sap_code_main_contract()
    page.choice_final_buyer()
    page.there_should_be_standard_contractual_terms()
    page.adding_codes(article)

    list_added_codes = page.saving_added_codes()
    auto_correct_code = page.saving_added_code_when_autocorrecting(article)
    if len(auto_correct_code) > 0:
        assert len(list_added_codes) == 1, f'Количество добавленных кодов в модалке создания КП - ' \
                                           f'({len(list_added_codes)}) больше 1'
        assert article in list_added_codes, \
            f'Добавленный код в модалке создания КП {list_added_codes[0]} не соответствует ожидаемому {article}'

    page.placing_a_discount_distributor_by_article(discount_for_entering, article)
    price_one_joke_without_nds = page.save_price_one_joke_without_nds(article)
    count_code = page.saving_number_of_pieces_of_code(article)
    expected_amount_with_nds_distributor = page.calculation_amount_with_nds_distributor(
        article, price_one_joke_without_nds, discount_for_entering, count_code
    )
    amount_with_nds_distributor_on_page = page.save_amount_with_nds_distributor_by_article(article)
    assert abs(amount_with_nds_distributor_on_page - expected_amount_with_nds_distributor) < 0.5, \
        f'Стоимость с НДС дистра на странице у кода {article} - {amount_with_nds_distributor_on_page} ' \
        f'не соответствует ожидаемой - {expected_amount_with_nds_distributor}'

    total_price_before_calculation = page.store_amount_nds_total_in_kp_crm_rub()
    page.click_button_recalculate()
    total_price_after_recalculate = page.store_amount_nds_total_in_kp_crm_rub()
    assert total_price_before_calculation == total_price_after_recalculate, \
        f'Итоговая стоимость до пересчета - {total_price_before_calculation} не соответствует итоговой стоимости ' \
        f'после пересчета - {total_price_after_recalculate}'

    discount_after_recalculate = float(page.save_discount_distributor_by_article(article))
    assert discount_after_recalculate == discount_for_entering, \
        f'Скидки после пересчета - ({discount_after_recalculate}) не соответствуют ожидаемым скидкам - ' \
        f'({discount_for_entering})'

    page.click_btn_save_pq()
    num_pq = page.store_num_pq_in_title()

    total_price_after_save = page.store_amount_nds_total_in_kp_crm_rub()
    assert abs(total_price_after_save - total_price_before_calculation) < 0.5, \
        f'Итоговая сумма после сохранения - ({total_price_after_save}) не соответствует итоговой сумме при создании ' \
        f'КП - ({total_price_before_calculation})'

    auto_correct_code = page.saving_added_code_when_autocorrecting(article)
    if auto_correct_code:
        discount_after_save = float(page.save_discount_distributor_by_article(auto_correct_code))
        assert discount_after_save == discount_for_entering, \
            f'Скидка после сохранения КП - {discount_after_save} не соответствует вводимой при создании КП - ' \
            f'{discount_for_entering}'
    else:
        discount_after_save = float(page.save_discount_distributor_by_article(article))
        assert discount_after_save == discount_for_entering, \
            f'Скидка после сохранения КП - {discount_after_save} не соответствует вводимой при создании КП - ' \
            f'{discount_for_entering}'

    page.send_for_approval_from_modal_new_kp()
    page.modal_kp_has_not_been_pre_screened()

    page = ObjectPage(browser, url_object_tst)
    page.go_to_chapter_kp()
    page = KpTab(browser, url_object_tst)
    page.opening_pq_in_a_new_tab_by_number(num_pq)

    page = PqPage(browser, url_object_tst)
    total_price_after_sending_for_approval = page.store_amount_nds_total_in_kp_crm_rub()
    assert abs(total_price_after_sending_for_approval - total_price_before_calculation) < 0.5, \
        f'Итоговая сумма после отправки на согласование на странице PQ - {total_price_after_sending_for_approval} ' \
        f'не соответствует итоговой сумме при создании КП - {total_price_before_calculation}'

    autocorrect_article = page.saving_added_code_when_autocorrecting(article)
    print(autocorrect_article, 'autocorrect_article')
    if autocorrect_article == '':
        discounts_after_sending_for_approval = float(page.save_discount_distributor_by_article(article))
    else:
        discounts_after_sending_for_approval = float(page.save_discount_distributor_by_article(autocorrect_article))
    assert discounts_after_sending_for_approval == discount_for_entering, \
        f'Скидки после отправки на согласование на странице PQ - {discounts_after_sending_for_approval} не ' \
        f'соответствуют ожидаемым скидкам (вводимым при создании КП) - {discount_for_entering}'

    agreements_hex = page.save_contractors_hex()
    url_pq = browser.current_url

    auth_extru_crm_from_authorized_page(url_page=url_pq, name_user=agreements_hex[0])

    page = PqPage(browser, url_object_tst)
    page.click_btn_consent_failure_hex()
    page.entering_a_comment_for_approval()
    page.click_btn_reject_in_the_approval_modal()

    auth_extru_crm_from_authorized_page(url_page=url_pq, name_user=login_crm)

    page = PqPage(browser, url_object_tst)
    if autocorrect_article == '':
        page.placing_a_discount_distributor_by_article(discount_for_entering_on_pq_page, article)
        price_one_joke_without_nds = page.save_price_one_joke_without_nds(article)
        count_code = page.saving_number_of_pieces_of_code(article)
        expected_amount_with_nds_distributor = page.calculation_amount_with_nds_distributor(
            article, price_one_joke_without_nds, discount_for_entering_on_pq_page, count_code
        )
        amount_with_nds_distributor_on_pq_page = page.save_amount_with_nds_distributor_by_article(article)
    else:
        page.placing_a_discount_distributor_by_article(discount_for_entering_on_pq_page, autocorrect_article)
        price_one_joke_without_nds = page.save_price_one_joke_without_nds(autocorrect_article)
        count_code = page.saving_number_of_pieces_of_code(autocorrect_article)
        expected_amount_with_nds_distributor = page.calculation_amount_with_nds_distributor(
            autocorrect_article, price_one_joke_without_nds, discount_for_entering_on_pq_page, count_code
        )
        amount_with_nds_distributor_on_pq_page = page.save_amount_with_nds_distributor_by_article(autocorrect_article)
    assert abs(amount_with_nds_distributor_on_pq_page - expected_amount_with_nds_distributor) < 0.5, \
        f'Стоимость с НДС дистра на странице у кода {autocorrect_article} - {amount_with_nds_distributor_on_pq_page} ' \
        f'не соответствует ожидаемой - {expected_amount_with_nds_distributor}'

    page.send_for_approval_pq_page()
    page.modal_kp_has_not_been_pre_screened()
    autocorrect_article_on_pq_page = page.saving_added_code_when_autocorrecting(article)
    assert autocorrect_article_on_pq_page == autocorrect_article, \
        f'Замененный номер расчета на странице PQ - ({autocorrect_article_on_pq_page}) не соответствует ожидаемому ' \
        f'- ({autocorrect_article})'

    if autocorrect_article == '':
        discount_on_pq_page = page.save_discount_distributor_by_article(article)
    else:
        discount_on_pq_page = page.save_discount_distributor_by_article(autocorrect_article)
    assert discount_on_pq_page == discount_for_entering_on_pq_page, \
        f'Скидки на странице PQ после повторной отправки на согласование - ({discount_on_pq_page}) не ' \
        f'соответствуют ожидаемым - ({discount_for_entering_on_pq_page})'

    if autocorrect_article == '':
        amount_with_nds_distributor_on_pq_page_after_send_for_approval = page.save_amount_with_nds_distributor_by_article(
            article)
    else:
        amount_with_nds_distributor_on_pq_page_after_send_for_approval = page.save_amount_with_nds_distributor_by_article(
            autocorrect_article)
    assert amount_with_nds_distributor_on_pq_page_after_send_for_approval == amount_with_nds_distributor_on_pq_page, \
        f'Итоговая сумма после повторной отправки на согласование - ' \
        f'({amount_with_nds_distributor_on_pq_page_after_send_for_approval}) не соответствует ожидаемой - ' \
        f'({amount_with_nds_distributor_on_pq_page})'

    if autocorrect_article == '':
        amount_with_nds_distributor_on_pq_page_after_agreement_on_all_conditions = page. \
            save_amount_with_nds_distributor_by_article(article)
    else:
        amount_with_nds_distributor_on_pq_page_after_agreement_on_all_conditions = page. \
            save_amount_with_nds_distributor_by_article(autocorrect_article)
    assert amount_with_nds_distributor_on_pq_page_after_agreement_on_all_conditions == \
           amount_with_nds_distributor_on_pq_page, \
        f'Итоговая сумма после согласования - ' \
        f'({amount_with_nds_distributor_on_pq_page_after_agreement_on_all_conditions}) не соответствует ожидаемой - ' \
        f'({amount_with_nds_distributor_on_pq_page})'

    page = PqPage(browser, url_object_tst)
    page.create_account()
    page.waiting_for_account_creation()

    grand_total_all_dkp = page.saving_grand_total_all_dkp()
    assert grand_total_all_dkp == amount_with_nds_distributor_on_pq_page, \
        f'Суммарная сумма всех ДКП - ({grand_total_all_dkp}) не соответствует итоговой сумме на странице ' \
        f'PQ - ({amount_with_nds_distributor_on_pq_page})'

    page.go_to_order_by_reference_number(1)
    page.payment_condition_must_be_advance_payment()
    page.terms_of_delivery_must_be_standard_contractual_terms()
    page.checking_selected_potential_mode(potential_mode)

    total_price_dkp = page.saving_the_final_amount_rub_after_agreement()

    assert abs(total_price_dkp - amount_with_nds_distributor_on_pq_page) < 0.5, \
        f'Итоговая стоимость на странице ДКП - ({total_price_dkp}) не соответствует итоговой сумме на странице ' \
        f'PQ - ({amount_with_nds_distributor_on_pq_page})'

    description_article = page.save_description_article().replace(',', '').split(' ')

    assert article in description_article, \
        f'Номер расчета - ({article}) не отображается в описании к коду ({autocorrect_article})'

    discounts_on_dkp_page = page.save_discount_distributor_by_article(autocorrect_article)
    assert discounts_on_dkp_page == discount_for_entering_on_pq_page, \
        f'Скидки на странице ДКП - ({discounts_on_dkp_page}) не соответствуют вводимым скидкам - ' \
        f'({discount_for_entering_on_pq_page})'
