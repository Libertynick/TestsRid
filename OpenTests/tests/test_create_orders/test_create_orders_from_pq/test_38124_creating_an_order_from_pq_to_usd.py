import time

import allure
import pytest

from config import TestEnvironment
from crm_pages.modal_new_kp.modal_new_kp import ModalNewKp
from crm_pages.object_page.object_page import ObjectPage, KpTab
from crm_pages.pq_page.pq_page import PqPage
from crm_pages.search_pq_page.search_pq_page import SearchPq
from open_pages.confirmation_page.confirmation_page import ConfirmationPage
from open_pages.design_condition_page.design_condition_page import DesignConditionPage
from open_pages.header.profile_menu_user import ProfileMenuUser
from open_pages.main_page.main_page import MainPage
from open_pages.my_design_conditions_page.my_design_conditions_page import MyDesignConditionsPage
from open_pages.order_details_page.order_details_page import OrderDetails


@allure.feature('Создание заказа из PQ')
@allure.story('Предоплата. Заказа в УЕ. Материалы. Самовывоз')
@pytest.mark.stage
@pytest.mark.parametrize('article', ['ZZZTEST1YE'])
def test_38124_creating_an_order_from_pq_to_usd(
        browser,
        article,
        auth_crm_extru_start,
        auth_extru_crm_from_authorized_page,
        agreement_on_all_conditions_extru
):
    """38124 создание заказа из pq в УЕ"""
    object_tst = TestEnvironment.LINK_OBJECT_IN_TST

    auth_crm_extru_start()

    # Страница Объекта
    page = ObjectPage(browser, object_tst)
    page.open()
    page.click_add_kp()

    # Модалка создания КП
    page = ModalNewKp(browser, TestEnvironment.LINK_CRM_TST)
    page.choice_distributor(TestEnvironment.DISTRIBUTOR_VODOKOMFORT_TST)
    page.choice_sap_code_main_contract()
    page.choice_final_buyer()
    page.there_must_be_an_advance_payment()
    page.switching_currency_to_a_fixed_rate()
    page.switching_currency_to_ue()

    # Ввод кодов
    page.adding_codes(article)
    # Сохранение стоимости в кп crm
    amount_total_in_kp_crm_after_adding_codes = page.store_amount_nds_total_in_kp_crm_cu()
    # print(amount_total_in_kp_crm_after_adding_codes, '- Итоговая стоимость после добавления кодов')

    curse_cu = page.save_curse_cu_by_article_taking_into_account_promo(article)
    # print(curse_cu, 'Курс уе')
    cost_in_rubles_at_the_internal_rate = page.calculation_of_cost_in_rubles_at_internal_rate_cu(
        curse_cu, amount_total_in_kp_crm_after_adding_codes)
    # print(cost_in_rubles_at_the_internal_rate, 'Стоимость в рублях по внутреннему курсу')

    # Сохранение скидок
    all_discount_in_crm = page.store_all_discount()
    # print(all_discount_in_crm, '- Скидки')
    # Сохранение PQ и отправка на согласование
    page.click_btn_save_pq()
    num_pq = page.store_num_pq_in_title()
    print(num_pq)
    page.send_for_approval_from_modal_new_kp()
    page.modal_kp_has_not_been_pre_screened()

    # Переход на вкладку КП -> Переход на страницу PQ по номеру PQ
    page = ObjectPage(browser, TestEnvironment.LINK_CRM_TST)
    page.go_to_chapter_kp()
    page = KpTab(browser, TestEnvironment.LINK_CRM_TST)
    page.opening_pq_in_a_new_tab_by_number(num_pq)

    # Страница PQ
    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    page.payment_condition_must_be_advance_payment()
    agreement_on_all_conditions_extru()

    url_pq = browser.current_url

    # Смена на Левона
    auth_extru_crm_from_authorized_page(url_page=url_pq)

    # Сохранение итоговой суммы после согласования и сравнение с суммой до согласования
    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    final_amount_after_agreement_cu = page.saving_the_final_amount_cu_after_agreement()
    assert final_amount_after_agreement_cu == amount_total_in_kp_crm_after_adding_codes, \
        f'Сумма в PQ после согласования ({final_amount_after_agreement_cu}) не равна сумме до согласования ' \
        f'({amount_total_in_kp_crm_after_adding_codes})'
    # print(final_amount_after_agreement_cu, 'Итоговая сумма КП в crm после согласования')

    page.payment_condition_must_be_advance_payment()
    page.terms_of_delivery_must_be_standard_contractual_terms()

    # Переход в Опен
    browser.execute_script("window.open(arguments[0])", TestEnvironment.LINK_OPEN_TST)
    page = MainPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.switching_window(-1)
    page.authorization_from_main_page(TestEnvironment.LOGIN_TST_VODOKOMFORT, TestEnvironment.PASSWORD_TST_VODOKOMFORT)

    # Переход в Мои проектные условия
    page = ProfileMenuUser(browser, TestEnvironment.LINK_OPEN_TST)
    page.click_profile()
    page.go_to_design_conditions()

    # Поиск КП и переход в него
    page = MyDesignConditionsPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.search_for_pq_and_switch_to_it(num_pq)

    # Страница Проектное условие
    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.payment_condition_must_be_advance_payment()
    page.delivery_method_must_be_pick_up()

    total_cost_on_the_design_condition_page = page.saving_the_final_cost_cu_on_the_design_condition_page()
    # print(total_cost_on_the_design_condition_page)
    assert total_cost_on_the_design_condition_page == final_amount_after_agreement_cu, \
        f'Итоговая сумма на странице Проектное условие ({total_cost_on_the_design_condition_page})' \
        f'не равна итоговой сумме после согласования в crm ({final_amount_after_agreement_cu})'
    all_discounts_on_the_design_condition_page = page.store_all_discounts_on_the_design_condition_page()
    # print(all_discounts_on_the_design_condition_page, 'скидки на странице Проектное условие')

    # Проверка равенства скидок в crm и на странице Проектное условие
    set_all_discounts_on_the_design_condition_page = set(all_discounts_on_the_design_condition_page)
    set_all_discount_in_crm = set(all_discount_in_crm)
    assert set_all_discounts_on_the_design_condition_page == set_all_discount_in_crm, \
        f'Скидки в crm ({set_all_discount_in_crm}) не равны скидкам на странице ' \
        f'Проектное условие ({set_all_discounts_on_the_design_condition_page})'

    page.availability_display_check()
    page.click_button_order()

    # Страница Подтверждение
    page = ConfirmationPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.must_be_prepaid()
    page.materials_must_be_self_pickup()
    page.check_box_shipment_only_when_fully_assembled_must_not_be_selected()
    page.clickability_check_shipment_only_when_fully_assembled()

    all_discounts_confirmation_page = page.store_all_discounts_on_the_confirmation_page()
    # print(all_discounts_confirmation_page, 'Скидки на странице Подтверждение')
    set_all_discounts_confirmation_page = set(all_discounts_confirmation_page)
    assert set_all_discounts_confirmation_page == set_all_discounts_on_the_design_condition_page, \
        f'Скидки на странице Подтверждение ({set_all_discounts_confirmation_page}) не равны' \
        f'скидкам на странице Проектное условие ({set_all_discounts_on_the_design_condition_page})'

    total_cost_on_the_confirmation_page = page.store_total_cost_on_the_confirmation_page()
    # print(total_cost_on_the_confirmation_page, 'Итоговая стоимость на странице Подтверждение')

    assert abs(total_cost_on_the_confirmation_page - cost_in_rubles_at_the_internal_rate) < 0.5, \
        f'Стоимость на странице Подтверждение - ({total_cost_on_the_confirmation_page}) не соответствует стоимости - ' \
        f'({cost_in_rubles_at_the_internal_rate})с учетом пересчета заказа в уе по внутреннему курсу - ({curse_cu})'

    page.input_comment()
    page.click_button_confirm()
    page.dkp_link_open_check()
    page.click_on_the_button_to_return_to_pq()

    # Страница Проектное условие
    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.waiting_to_create_invoices()

    amount_in_created_orders = page.saving_the_amount_in_created_orders()
    # print(amount_in_created_orders, 'Общая сумма заказа после создания счетов')

    assert abs(amount_in_created_orders - total_cost_on_the_confirmation_page) < 0.5, \
        f'Суммарная Стоимость заказов - ({amount_in_created_orders}) не соответствует стоимости на странице ' \
        f'Подтверждение - ({total_cost_on_the_confirmation_page})'

    page.go_to_order(1)

    # Страница Детали заказа
    page = OrderDetails(browser, TestEnvironment.LINK_OPEN_TST)
    page.payment_condition_must_be_advance_payment()
    page.data_display_check()
    page.delivery_method_must_be_pick_up()
    price_order_open = page.store_price_order()
    num_order = page.store_num_order()
    print(f'{num_order} - номер заказа')
    # print(price_order_open, f'Стоимость заказа {num_order} в деталях заказа в Опене')
    assert abs(float(price_order_open) - total_cost_on_the_confirmation_page) < 0.5, \
        f'Стоимость на странице заказа - ({price_order_open}) не соответствует стоимости на странице Подтверждение ' \
        f'- ({total_cost_on_the_confirmation_page})'

    page.checking_printing_forms_download(num_order)

    # Переход в crm для сверки стоимости заказа
    browser.execute_script("window.open(arguments[0])", TestEnvironment.LINK_SEARCH_PQ_TST)
    page.switching_window(-1)
    page = SearchPq(browser, TestEnvironment.LINK_SEARCH_PQ_TST)
    time.sleep(2)
    page.search_order(num_order)
    page.go_to_order(num_order)

    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    page.payment_condition_must_be_advance_payment()
    page.terms_of_delivery_must_be_standard_contractual_terms()
    price_order_crm = page.store_price_crm_order()
    # print(price_order_crm, f'Стоимость заказа в ДКП crm {num_order}')
    page.verify_price_crm_with_price_open(price_order_crm, float(price_order_open))
