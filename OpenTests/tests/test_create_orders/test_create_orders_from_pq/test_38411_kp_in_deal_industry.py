import allure
import pytest

from config import TestEnvironment
from crm_pages.organization_page.editing_organization_page import EditingOrganization, ModalCreateTransaction, \
    TitleTransaction
from crm_pages.header_page.header_page import HeaderPage
from crm_pages.modal_new_kp.modal_new_kp import ModalNewKp, ModalAddedZip
from crm_pages.pq_page.pq_page import PqPage
from crm_pages.search_organization_page.search_organization_page import SearchOrganizationPage
from crm_pages.search_pq_page.search_pq_page import SearchPq

url_crm = TestEnvironment.LINK_CRM_TST


def checking_cost_of_codes_with_nds_from_client(
        browser, article: str, price_one_joke_without_nds_article: float, discount_client=0.0):
    """Проверка стоимости кодов с НДС, колонка Клиент
    price_one_joke_without_nds_article - цена за штуку без НДС
    """
    page = ModalNewKp(browser, url_crm)
    amount_with_nds_at_the_client_article = page.save_amount_with_nds_at_the_client_by_article(article)
    # print(amount_with_nds_at_the_client_article, f'Сумма с НДС у клиента артикула {article}')

    count_code_article = page.saving_number_of_pieces_of_code(article)
    true_amount_with_nds = page.calculation_of_amount_with_nds_client(
        price_one_joke_without_nds_article, count_code_article, discount_client)
    # print(true_amount_with_nds, f'Стоимость с НДС, которая должна быть у кода {article}')
    # print()
    assert abs(amount_with_nds_at_the_client_article - true_amount_with_nds) < 0.5, \
        f'Сумма с НДС у Клиента - ({amount_with_nds_at_the_client_article}) на странице у кода {article} не ' \
        f'соответствует ожидаемой сумме - ({true_amount_with_nds})'


def checking_price_with_nds_of_distributor(browser, article: str):
    """Проверка стоимости c НДС Дистрибьютора"""
    page = ModalNewKp(browser, url_crm)

    amount_without_nds_by_article = page.save_price_one_joke_without_nds(article)
    # print(amount_without_nds_by_article, f'Сумма с НДС у клиента артикула {article} -=-=-=-=')
    amount_with_nds_distributor_article_on_page = page.save_amount_with_nds_distributor_by_article(article)
    # print(amount_with_nds_distributor_article_on_page, f'Сумма с НДС дистрибьютора на странице артикула {article}')
    count_code_article = page.saving_number_of_pieces_of_code(article)
    discount_article = page.save_discount_distributor_by_article(article)
    # print(discount_article_1, f'Скидка кода {article} -==-=--=-')
    true_amount_with_nds_distributor_article = page.calculation_amount_with_nds_distributor(
        article, amount_without_nds_by_article, discount_article, count_code_article)
    # print(true_amount_with_nds_distributor_article, f'Ожидаемая стоимость с НДС кода {article} \n')
    assert abs(amount_with_nds_distributor_article_on_page - true_amount_with_nds_distributor_article) < 0.5, \
        f'Стоимость с НДС дистрибьютора ({amount_with_nds_distributor_article_on_page}) на странице кода ' \
        f'{article} не соответствует ожидаемой стоимости с НДС дистра - ' \
        f'({true_amount_with_nds_distributor_article})'


def checking_final_cost_of_distributor(browser):
    """Проверка итоговой стоимости Дистрибьютора"""
    page = ModalNewKp(browser, url_crm)

    total_cost_distributor = page.store_amount_nds_total_in_kp_crm_rub()
    # print(total_cost_distributor, 'Итоговая стоимость  дистрибьютора')
    total_cost_distributor_all_lines = page.save_sum_amount_with_nds_distributor_all_lines()
    # print(total_cost_distributor_all_lines, 'Сумма стоимости с НДС дистрибьютора на всех линиях \n')
    assert total_cost_distributor_all_lines == total_cost_distributor_all_lines, \
        f'Итоговая Стоимость дистрибьютора - ({total_cost_distributor}) не соответствует сумме стоимости с НДС ' \
        f'дистра - ({total_cost_distributor_all_lines}) на всех линиях'


@allure.feature('КП в Сделке Индустрия')
@allure.story('Предоплата. Самовывоз. ПТО')
@pytest.mark.parametrize('article', ['w401011621 w401011622'])
@pytest.mark.stage
def test_38411_kp_in_deal_industry(
        browser,
        article,
        auth_crm_extru_start,
        auth_extru_crm_from_authorized_page,
        agreement_on_all_conditions_extru
):
    """КП в Сделке Индустрия"""
    # name_cookie = 'ASP.NET_SessionId'
    user_sedler = 'Седлер Татьяна'
    # user_utochkin = 'Уточкин Евгений'
    inn_organization = TestEnvironment.INN_ORGANIZATION_VODOKOMFORT
    # contract_number = '14409992'  # Номер договора
    value_discount_client = 40.0
    value_discount_distributor = 50.0
    percentage_for_conversion = "200"
    calculation_number_to_add_zip = 'w401011621'  # Номер расчета для добавления ЗИП

    auth_crm_extru_start(ruco=TestEnvironment.LOGIN_CRM)

    page = HeaderPage(browser, url_crm)
    page.go_to_organization_search_page()

    page = SearchOrganizationPage(browser, url_crm)
    list_inn_found_organization = page.search_organization_by_inn(inn_organization)
    print(list_inn_found_organization, 'list_inn_found_organization')
    page.opening_an_head_organization_card_in_a_new_tab()
    url_organization = browser.current_url

    auth_extru_crm_from_authorized_page(url_page=url_organization, name_user=user_sedler)

    # Страница редактирования организации
    page = EditingOrganization(browser, url_crm)
    page.go_to_title_transactions()

    page = TitleTransaction(browser, url_crm)
    page.click_button_create_transaction()

    # Модалка Сделка
    page = ModalCreateTransaction(browser, url_crm)
    page.click_create_kp()

    # Модалка создания КП
    page = ModalNewKp(browser, url_crm)
    page.choice_sap_code_main_contract()
    page.there_must_be_an_advance_payment()
    # Ввод кодов
    page.adding_codes(article)

    # Проставление скидок у клиента и проверка пересчета суммы клиента с НДС
    page.placing_discounts_on_all_items_to_client(value_discount_client)
    list_article_for_checking = article.split(' ')
    for item_article in list_article_for_checking:
        price_one_joke_without_nds_article = page.save_price_one_joke_without_nds(item_article)
        checking_cost_of_codes_with_nds_from_client(
            browser, item_article, price_one_joke_without_nds_article, value_discount_client
        )

    # Проставление скидок у дистра и проверка пересчета суммы дистра с НДС
    page.placing_discounts_on_all_items_to_distributor(value_discount_distributor)
    for item_article in list_article_for_checking:
        checking_price_with_nds_of_distributor(browser, item_article)

    page.entering_percentage_for_conversion(percentage_for_conversion)
    page.click_button_recalculate()
    for item_article in list_article_for_checking:
        checking_price_with_nds_of_distributor(browser, item_article)
    checking_final_cost_of_distributor(browser)

    page.click_button_add_positions_to_open_add_field()
    page.click_button_add_zip()

    # Ввод номера расчета в модалку добавления ЗИПа
    page = ModalAddedZip(browser, url_crm)
    page.entering_calculation_number(calculation_number_to_add_zip)
    page.click_button_added_zip()

    page = ModalNewKp(browser, url_crm)

    code_zip_in_field = page.saving_codes_in_add_positions_field()

    # print(code_zip_in_field, 'коды ЗИП в поле добавления кодов')

    # print(list_article_for_checking, 'артикулы в кп')
    page.click_on_button_to_add_items_to_kp()

    # Проверяем есть ли автозамена у кодов ЗИП, если есть то меняем старый код на новый код
    for idx, code in enumerate(code_zip_in_field):
        new_code = page.saving_added_code_when_autocorrecting(code)
        if new_code != '':
            code_zip_in_field[idx] = new_code
            code_zip_in_field[idx] = new_code

    list_article_for_checking = list_article_for_checking + code_zip_in_field

    # Проверка надбавки по коду
    for el in list_article_for_checking:
        allowance_el = page.save_allowance_by_article(el)
        assert float(percentage_for_conversion) == allowance_el, \
            f'Надбавка {allowance_el} на странице у кода {el} не соответствует ожидаемой надбавке - ' \
            f'({float(percentage_for_conversion)})'

    total_amount_distributor = page.save_sum_amount_with_nds_distributor_all_lines()
    # print(total_amount_distributor, 'Общая стоимость Дистрибьютора')
    total_amount_client = page.save_total_cost_client()
    # print(total_amount_client, 'Общая стоимость Клиента')
    page.entering_a_comment_in_kp()
    page.click_btn_save_pq()
    num_pq = page.store_num_pq_in_title()
    print(num_pq)
    page.send_for_approval_from_modal_new_kp()
    page.modal_kp_has_not_been_pre_screened()

    # Поиск КП
    page = SearchPq(browser, TestEnvironment.LINK_SEARCH_PQ_TST)
    browser.execute_script(f"window.open('{TestEnvironment.LINK_SEARCH_PQ_TST}')")
    page.switching_window(-1)
    page.search_pq(num_pq)
    page.go_to_pq_by_number_in_new_tab(num_pq)

    page = PqPage(browser, url_crm)
    agreement_on_all_conditions_extru()

    # Сохранение и проверка общей суммы дистра
    total_amount_distributor_in_pq_page = page.saving_the_final_amount_rub_after_agreement()
    # print(total_amount_distributor_in_pq_page, 'Стоимость дистра на странице PQ')
    assert abs(total_amount_distributor_in_pq_page - total_amount_distributor) < 1, \
        f'Общая сумма дистра на странице PQ - ({total_amount_distributor_in_pq_page}) не соответствует общей сумме ' \
        f'при создании КП - ({total_amount_distributor})'

    # Сохранение и проверка надбавок
    allowances_pq_page = page.saving_surcharges_on_all_article_lines()
    # print(allowances_pq_page, 'Надбавки на странице PQ')
    for allowance in allowances_pq_page:
        assert float(allowance) == float(percentage_for_conversion), \
            f'Надбавка {float(allowance)} на странице PQ не соответствует ожидаемой надбавке ' \
            f'{float(percentage_for_conversion)}'

    # Сохранение и проверка итоговой суммы клиента
    total_amount_client_in_pq_page = page.save_total_cost_client()
    # print(print(total_amount_client_in_pq_page, 'Стоимость дистра на странице PQ'))
    assert abs(total_amount_client_in_pq_page - total_amount_client) < 0.5, \
        f'Общая сумма клиента на странице PQ - ({total_amount_client_in_pq_page}) не соответствует общей сумме ' \
        f'при создании КП - ({total_amount_client})'

    url_pq = browser.current_url

    auth_extru_crm_from_authorized_page(url_page=url_pq)

    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    # page.delete_cookie_by_name(name_cookie)
    page.create_account()
    page.waiting_for_account_creation()

    page.number_unequal_check_dkp()

    grand_total_all_dkp = page.saving_grand_total_all_dkp()
    assert abs(grand_total_all_dkp - total_amount_distributor_in_pq_page) < 1, \
        f'Общая сумма всех ДКП - {grand_total_all_dkp} не соответствует общей сумме на странице PQ - ' \
        f'{total_amount_distributor_in_pq_page}'

    window_pq_page = browser.current_window_handle
    list_num_dkp = page.save_all_num_dkp()

    total_price_dkp_1 = page.save_total_price_by_dkp(list_num_dkp[0])
    page.go_to_order_by_reference_number(1)
    total_price_dkp_1_on_dkp_page = page.saving_the_final_amount_rub_after_agreement()
    assert abs(total_price_dkp_1 - total_price_dkp_1_on_dkp_page) < 0.5, \
        f'Итоговая стоимость - {total_price_dkp_1} ДКП на странице МКП в списке заказов не соответствует итоговой ' \
        f'стоимости на странице ДКП - {total_price_dkp_1_on_dkp_page}'

    # Сохранение и проверка надбавок
    allowances_dkp_page = page.saving_surcharges_on_all_article_lines()
    # print(allowances_pq_page, 'Надбавки на странице PQ')
    for allowance in allowances_dkp_page:
        assert float(allowance) == float(percentage_for_conversion), \
            f'Надбавка {float(allowance)} на странице ДКП - {list_num_dkp[0]} не соответствует ожидаемой надбавке ' \
            f'{float(percentage_for_conversion)}'

    # Второй заказ
    browser.switch_to.window(window_pq_page)
    total_price_dkp_2 = page.save_total_price_by_dkp(list_num_dkp[1])
    page.go_to_order_by_reference_number(2)
    total_price_dkp_2_on_dkp_page = page.saving_the_final_amount_rub_after_agreement()
    assert abs(total_price_dkp_2 - total_price_dkp_2_on_dkp_page) < 0.5, \
        f'Итоговая стоимость - {total_price_dkp_2} ДКП на странице МКП в списке заказов не соответствует итоговой ' \
        f'стоимости на странице ДКП - {total_price_dkp_2_on_dkp_page}'

    # Сохранение и проверка надбавок
    allowances_dkp_page = page.saving_surcharges_on_all_article_lines()
    # print(allowances_pq_page, 'Надбавки на странице PQ')
    for allowance in allowances_dkp_page:
        assert float(allowance) == float(percentage_for_conversion), \
            f'Надбавка {float(allowance)} на странице ДКП - {list_num_dkp[1]} не соответствует ожидаемой надбавке ' \
            f'{float(percentage_for_conversion)}'
