import time

import allure
import pytest

from config import TestEnvironment
from crm_pages.modal_new_kp.modal_new_kp import ModalNewKp
from crm_pages.object_page.object_page import ObjectPage, KpTab
from crm_pages.pq_page.pq_page import PqPage
from crm_pages.search_pq_page.search_pq_page import SearchPq
from open_pages.confirmation_page.confirmation_page import ConfirmationPage

from open_pages.design_condition_page.design_condition_page import DesignConditionPage
from open_pages.header.profile_menu_user import ProfileMenuUser
from open_pages.main_page.main_page import MainPage
from open_pages.my_design_conditions_page.my_design_conditions_page import MyDesignConditionsPage
from open_pages.order_details_page.order_details_page import OrderDetails


@allure.feature('Создание заказа из PQ')
@allure.story('Материалы + ПТО. Кредит 3 дня (1% за кредит, 1% за конвертацию). Согласование КП')
@pytest.mark.stage
@pytest.mark.parametrize('article', ['065B8307R 003L0145R 003L0145R w488900'])
def test_25686_coordination_of_cp(browser, article, auth_crm_extru_start, auth_extru_crm_from_authorized_page,
                                  agreement_on_all_conditions_extru):
    """25686 Согласование КП"""
    link_crm = TestEnvironment.LINK_CRM_TST
    object_tst = TestEnvironment.LINK_OBJECT_IN_TST

    link_open = TestEnvironment.LINK_OPEN_TST
    login_open = TestEnvironment.LOGIN_TST_VODOKOMFORT
    password_open = TestEnvironment.PASSWORD_TST_VODOKOMFORT

    distributor_vodokomfort = TestEnvironment.DISTRIBUTOR_VODOKOMFORT_TST
    value_discounts = 61.0
    terms_of_payment = 'Кредит 3 дня (1% за кредит, 1% за конвертацию)'

    auth_crm_extru_start()

    # Страница Объекта
    page = ObjectPage(browser, object_tst)
    page.open()
    page.click_add_kp()

    # Модалка создания КП
    page = ModalNewKp(browser, link_crm)
    page.choice_distributor(distributor_vodokomfort)
    page.choice_sap_code_main_contract()
    page.choice_final_buyer()
    page.there_must_be_an_advance_payment()
    # Ввод кодов
    page.adding_codes(article)
    page.placing_discounts_on_all_items_to_distributor(value_discounts)
    price_kp_before_save = page.store_amount_nds_total_in_kp_crm_rub()
    page.switching_on_tumbler_show_discount_column_if_off()
    page.click_btn_save_pq()
    num_pq = page.store_num_pq_in_title()

    price_kp_after_save = page.store_amount_nds_total_in_kp_crm_rub()
    assert abs(price_kp_after_save - price_kp_before_save) < 0.5, \
        f'Стоимость КП после сохранения - ({price_kp_after_save}) не равна стоимости до сохранения - ' \
        f'({price_kp_before_save})'

    page.send_for_approval_from_modal_new_kp()
    page.modal_kp_has_not_been_pre_screened()

    # Переход на вкладку КП -> Переход на страницу PQ по номеру PQ
    page = ObjectPage(browser, link_crm)
    page.go_to_chapter_kp()
    page = KpTab(browser, link_crm)
    page.opening_pq_in_a_new_tab_by_number(num_pq)

    # Страница PQ
    page = PqPage(browser, link_crm)
    agreements = page.agreement_with_orange_mark()
    print(agreements)

    url_pq = browser.current_url

    auth_extru_crm_from_authorized_page(url_page=url_pq, name_user=agreements[0])

    page = PqPage(browser, link_crm)
    page.click_btn_consent_failure()
    page.entering_a_comment_for_approval()
    page.click_btn_reject_in_the_approval_modal()

    auth_extru_crm_from_authorized_page(url_page=url_pq)

    page = PqPage(browser, link_crm)
    page.expanding_payment_terms_menu()
    page.selection_of_contractual_payment_terms(terms_of_payment)
    page.placing_discounts_on_all_items_to_distributor(value_discounts - 1)
    price_with_reduced_discount = page.saving_the_final_amount_rub_after_agreement()
    print(price_with_reduced_discount)
    assert price_with_reduced_discount > price_kp_after_save, \
        f'Сумма КП после уменьшения скидки не увеличилась - ({price_with_reduced_discount}). ' \
        f'Сумма до уменьшения скидки - ({price_kp_after_save})'

    page.click_btn_save_pq()
    page.send_for_approval_pq_page()
    page.modal_kp_has_not_been_pre_screened()

    agreement_on_all_conditions_extru()

    all_discounts_crm = page.store_all_discounts()
    price_kp_crm = page.store_amount_nds_total_in_kp_crm_rub()

    # Переход в Опен
    browser.execute_script("window.open(arguments[0])", link_open)
    page = MainPage(browser, link_open)
    page.switching_window(-1)
    page.authorization_from_main_page(login_open, password_open)

    # Переход в Мои проектные условия
    page = ProfileMenuUser(browser, link_open)
    page.click_profile()
    page.go_to_design_conditions()

    # Поиск КП и переход в него
    page = MyDesignConditionsPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.search_for_pq_and_switch_to_it(num_pq)

    # Страница Проектное условие
    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.delivery_method_must_be_pick_up()

    total_cost_on_the_design_condition_page = page.saving_the_final_cost_rub_on_the_design_condition_page()

    assert total_cost_on_the_design_condition_page == price_kp_crm, \
        f'Итоговая сумма на странице Проектное условие ({total_cost_on_the_design_condition_page})' \
        f'не равна итоговой сумме после согласования в crm ({price_kp_crm})'
    all_discounts_on_the_design_condition_page = page.store_all_discounts_on_the_design_condition_page()

    # Проверка равенства скидок в crm и на странице Проектное условие
    set_all_discounts_on_the_design_condition_page = set(all_discounts_on_the_design_condition_page)
    set_all_discount_in_crm = set(all_discounts_crm)
    assert set_all_discounts_on_the_design_condition_page == set_all_discount_in_crm, \
        f'Скидки в crm ({set_all_discount_in_crm}) не равны скидкам на странице ' \
        f'Проектное условие ({set_all_discounts_on_the_design_condition_page})'

    page.availability_display_check()
    page.click_button_order()

    # Страница Подтверждение
    page = ConfirmationPage(browser, link_open)

    all_discounts_confirmation_page = page.store_all_discounts_on_the_confirmation_page()
    set_all_discounts_confirmation_page = set(all_discounts_confirmation_page)
    assert set_all_discounts_confirmation_page == set_all_discounts_on_the_design_condition_page, \
        f'Скидки на странице Подтверждение ({set_all_discounts_confirmation_page}) не равны' \
        f'скидкам на странице Проектное условие ({set_all_discounts_on_the_design_condition_page})'

    total_cost_on_the_confirmation_page = page.store_total_cost_on_the_confirmation_page()
    total_cost_on_the_confirmation_page = int(total_cost_on_the_confirmation_page)
    total_cost_on_the_design_condition_page = int(total_cost_on_the_design_condition_page)

    assert abs(total_cost_on_the_confirmation_page - total_cost_on_the_design_condition_page) < 2, \
        f'Стоимость на странице Подтверждение ({total_cost_on_the_confirmation_page}) не равна' \
        f'стоимости на странице Проектное условие ({total_cost_on_the_design_condition_page})'

    page.input_comment()
    page.materials_must_be_self_pickup()
    page.pto_must_be_self_pickup()
    page.checking_the_address_of_the_warehouse_during_self_delivery_materials()
    page.checking_the_address_of_the_warehouse_during_self_delivery_pto()
    page.click_button_confirm()
    page.dkp_link_open_check()
    page.click_on_the_button_to_return_to_pq()

    # Страница Проектное условие
    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.waiting_to_create_invoices()
    amount_in_created_orders = page.saving_the_amount_in_created_orders()
    assert int(price_kp_crm) == int(amount_in_created_orders), \
        f'Сумма в crm после согласования - ({price_kp_crm}) не равна сумме ' \
        f'созданных счетов - ({amount_in_created_orders})'

    page.go_to_order(1)
    # Страница Детали заказа
    page = OrderDetails(browser, TestEnvironment.LINK_OPEN_TST)
    page.data_display_check()
    price_order_open_1 = page.store_price_order()
    num_order_1 = page.store_num_order()
    page.checking_printing_forms_download(num_order_1)
    page.verify_check_host(num_order_1)

    # Переход в crm для сверки стоимости заказа
    browser.execute_script("window.open(arguments[0])", TestEnvironment.LINK_SEARCH_PQ_TST)
    page.switching_window(-1)
    page = SearchPq(browser, TestEnvironment.LINK_SEARCH_PQ_TST)
    time.sleep(2)
    page.search_order(num_order_1)
    page.go_to_order(num_order_1)

    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    price_order_crm_1 = page.store_price_crm_order()
    page.verify_price_crm_with_price_open(price_order_crm_1, float(price_order_open_1))

    # Возврат на вкладку Проектное условие для перехода во 2-ой заказ
    page.switching_window(2)

    page = DesignConditionPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.go_to_order(2)

    page = OrderDetails(browser, TestEnvironment.LINK_OPEN_TST)
    page.data_display_check()
    price_order_open_2 = page.store_price_order()
    num_order_2 = page.store_num_order()
    page.checking_printing_forms_download(num_order_2)
    page.verify_check_host(num_order_2)

    # Открытие страницы поиска заказа в crm
    browser.execute_script("window.open(arguments[0])", TestEnvironment.LINK_SEARCH_PQ_TST)
    page.switching_window(-1)

    page = SearchPq(browser, TestEnvironment.LINK_SEARCH_PQ_TST)
    page.search_order(num_order_2)
    page.go_to_order(num_order_2)

    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    price_order_crm_2 = page.store_price_crm_order()
    page.verify_price_crm_with_price_open(price_order_crm_2, float(price_order_open_2))
