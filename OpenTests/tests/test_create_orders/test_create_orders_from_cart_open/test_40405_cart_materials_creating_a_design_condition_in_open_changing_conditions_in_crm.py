import allure
import pytest
from base_page.base_page import BasePageCrm
from base_page.base_page_locators import BaseOpenLocators
from config import TestEnvironment
from crm_pages.pq_page.pq_page import PqPage
from crm_pages.search_pq_page.search_pq_page import SearchPq
from open_pages.cart_page.cart_page import CartPage
from open_pages.confirmation_page.confirmation_page import ConfirmationPage
from open_pages.design_condition_page.design_condition_page import DesignConditionPage
from open_pages.header.header_page import Header
from open_pages.main_page.main_page import MainPage
from open_pages.new_design_condition.new_design_condition_page import NewDesignCondition
from open_pages.order_details_page.order_details_page import OrderDetails
from open_pages.standart_order_page.standart_order_page import StandardOrderPage


@allure.feature('Создание проектного условия в Open')
@allure.story('Доставка на указанный адрес. Материалы. Предоплата. Изменение условий в CRM')
@pytest.mark.xdist_group(name="design condition")  # группа для параллельного запуска
@pytest.mark.parametrize('article', ['003L0145R 10 003L0143 25'])
@pytest.mark.stage
def test_40405_cart_materials_creating_a_design_condition_in_open_changing_conditions_in_crm(browser, article,
                                                                                             auth_crm_extru_start,
                                                                                             auth_extru_crm_from_authorized_page,
                                                                                             agreement_on_all_conditions_extru):
    """40405 Корзина Материалы Создание проектного условия в Open, изменение условий в CRM"""
    link_open = TestEnvironment.LINK_OPEN_TST
    login_open = TestEnvironment.LOGIN_TST_BURNYASHEVA
    password_open = TestEnvironment.PASSWORD_TST_BURNYASHEVA
    delivery_address = 'г Москва, ул Римского-Корсакова, д 100'  # Адрес доставки
    comment = 'test_selenium_web тестирование 123 !"№№*@'
    percentage_for_conversion = '2'
    num_object = '1139467'

    login_crm = TestEnvironment.LOGIN_CRM
    link_search_pq = TestEnvironment.LINK_SEARCH_PQ_TST

    page = MainPage(browser, link_open)
    page.open()
    page.authorization_from_main_page(login_open, password_open)

    page = Header(browser, link_open)
    page.click_basket()

    page = CartPage(browser, link_open)
    page.choice_of_client_number()
    page.click_empty_trash()
    page.type_product_in_input(article)
    page.click_add_button()
    price_cart = page.store_price()
    page.click_continue_button()

    page = StandardOrderPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.should_h1_standard_order()
    page.click_new_project()

    page = NewDesignCondition(browser, link_open)
    page.there_must_be_an_advance_payment()
    page.click_shipping_list()
    page.selection_of_delivery_to_specified_address()
    page.entering_delivery_address(delivery_address)

    cost_delivery = page.delivery_cost_calculation()
    assert cost_delivery != 0, f'Стоимость доставки равна 0 - ({cost_delivery})'

    price_new_design_condition = page.store_price_confirmation()
    assert price_new_design_condition >= price_cart, \
        f'Стоимость на странице Новое проектное условие - ({price_new_design_condition}) не равна стоимости в ' \
        f'корзине - ({price_cart})'

    page.type_comment(comment)
    page.choose_name_object(num_object)
    page.choose_eng_section()
    page.choose_end_buyer()
    requested_discount_on_page_design_condition = page.saving_requested_discounts_on_page()
    page.click_button_confirm()
    page.transition_to_created_design_condition()

    page = DesignConditionPage(browser, link_open)

    design_condition_discounts = page.store_all_discounts_on_the_design_condition_page()
    assert sorted(design_condition_discounts) == sorted(requested_discount_on_page_design_condition), \
        f'Скидки на странице Проектное условие (PQ) - ({design_condition_discounts}) не соответствуют запрашиваемым ' \
        f'скидкам  на странице Новое проектное - ({requested_discount_on_page_design_condition})'

    total_price_on_design_condition = page.saving_the_final_cost_rub_on_the_design_condition_page()
    assert abs(total_price_on_design_condition - price_new_design_condition) < 1, \
        f'Стоимость на странице Проектное условие - (PQ) - ({total_price_on_design_condition}) не соответствует \
        стоимости на странице Новое проектное - ({price_new_design_condition})'

    page.availability_display_check()
    created_num_pq = page.store_created_num_pq()
    print(created_num_pq, 'Номер созданного PQ')
    page.click_printing_forms()
    page.checking_export_to_excel_download(created_num_pq)

    window_open = browser.current_window_handle

    #  Переход в crm для согласования
    page = BasePageCrm(browser, link_search_pq)
    browser.execute_script("window.open(arguments[0])", link_search_pq)
    page.switching_window(-1)

    auth_crm_extru_start(ruco=login_crm)

    page = SearchPq(browser, link_search_pq)
    page.open()
    window_search_pq_crm = browser.current_window_handle  # Вкладка поиска PQ
    page.search_pq(created_num_pq)
    page.go_to_pq_by_number_in_new_tab(created_num_pq)

    page = PqPage(browser, link_search_pq)
    agreements_with_blue_mark = page.agreement_with_orange_mark()

    url_pq = browser.current_url
    auth_extru_crm_from_authorized_page(url_pq, agreements_with_blue_mark[0])

    page = PqPage(browser, link_search_pq)
    page.click_btn_consent_failure()
    page.entering_a_comment_for_approval()
    page.click_btn_reject_in_the_approval_modal()

    auth_extru_crm_from_authorized_page(url_pq, login_crm)

    page.entering_percentage_for_conversion(percentage_for_conversion)
    page.entering_a_shipping_address(delivery_address)
    page.click_button_recalculate_pq_page()
    page.save_pq_on_pq_page()
    page.send_for_approval_pq_page()

    price_crm_with_allowances = page.store_price_crm_order()
    assert price_crm_with_allowances > price_new_design_condition, \
        f'Стоимость КП в crm после добавления надбавок не увеличилась - ({price_crm_with_allowances}). ' \
        f'Стоимость до добавления надбавок - ({price_new_design_condition})'

    allowances_on_all_article_lines_crm = page.saving_surcharges_on_all_article_lines()
    percentage_for_conversion = float(percentage_for_conversion)
    for allowance in allowances_on_all_article_lines_crm:
        assert allowance == percentage_for_conversion, \
            f'Введенные надбавки - ({percentage_for_conversion}) не отображаются на линиях артикулов - ({allowance})'

    discounts_crm = page.store_all_discounts()

    agreement_on_all_conditions_extru()
    auth_extru_crm_from_authorized_page(url_pq, login_crm)
    browser.switch_to.window(window_open)
    browser.refresh()
    page.waiting_for_loader_processing_on_page(BaseOpenLocators.LOCATOR_SPINNER_NO_TEXT)

    page = DesignConditionPage(browser, link_open)

    total_price_on_design_condition = page.saving_the_final_cost_rub_on_the_design_condition_page()
    assert abs(total_price_on_design_condition - price_crm_with_allowances) < 0.5, \
        f'Итоговая стоимость - ({total_price_on_design_condition}) после добавления надбавок на странице ' \
        f'Проектное условие в Опене не равна стоимости с надбавками в crm  - ({price_crm_with_allowances})'

    allowances_on_design_condition = page.saving_of_allowances_on_all_lines_of_articles()
    assert allowances_on_design_condition == allowances_on_all_article_lines_crm, \
        f'Надбавки на странице Проектное условие в Опене - ({allowances_on_design_condition}) не соответствуют ' \
        f'надбавкам в crm - ({allowances_on_all_article_lines_crm})'

    page.payment_condition_must_be_advance_payment()
    page.availability_display_check()
    page.click_printing_forms()
    page.checking_export_to_excel_download(created_num_pq)
    page.click_printing_forms()
    page.checking_commercial_offer_ridan_download()
    page.click_button_order()

    page = ConfirmationPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.check_box_shipment_only_when_fully_assembled_must_not_be_selected()
    page.clickability_check_shipment_only_when_fully_assembled()
    page.must_be_prepaid()

    discounts_confirmation_page = page.store_all_discounts_on_the_confirmation_page()
    discounts_confirmation_page.sort()
    discounts_crm.sort()
    assert discounts_confirmation_page == discounts_crm, \
        f'Скидки на странице Подтверждение - ({discounts_confirmation_page}) не равны скидкам на странице PQ в CRM - ' \
        f'({discounts_crm})'

    total_price_confirmation_page = page.store_total_cost_on_the_confirmation_page()
    assert abs(total_price_confirmation_page - total_price_on_design_condition) < 2, \
        f'Итоговая стоимость на странице Подтверждение - ({total_price_confirmation_page}) не равна стоимости на ' \
        f'странице PQ в crm - ({total_price_on_design_condition})'

    allowances_confirmation_page = page.store_all_allowance()
    assert allowances_confirmation_page == allowances_on_design_condition, \
        f'Надбавки на странице Подтверждение - ({allowances_confirmation_page}) не соответствуют надбавкам на ' \
        f'странице Проектное условие в Опене - ({allowances_on_design_condition})'

    page.input_comment()
    page.save_to_excel(created_num_pq)
    page.click_button_confirm()
    page.dkp_link_open_check()
    page.click_on_the_button_to_return_to_pq()

    page = DesignConditionPage(browser, link_open)
    page.waiting_to_create_invoices()
    page.click_printing_forms()
    page.checking_export_to_excel_download(created_num_pq)
    page.click_printing_forms()
    page.checking_commercial_offer_ridan_download()

    amount_of_orders_created = page.saving_the_amount_in_created_orders()
    assert abs(amount_of_orders_created - total_price_confirmation_page) < 2, \
        f'Сумма созданных заказов - ({amount_of_orders_created}) не равна стоимости на странице Подтверждение - ' \
        f'({total_price_confirmation_page})'

    page.go_to_order(1)

    page = OrderDetails(browser, link_open)
    page.data_display_check()
    page.payment_condition_must_be_advance_payment()
    num_order = page.store_num_order()
    print(num_order, 'Номер заказа')

    price_order = float(page.store_price_order())
    assert abs(price_order - total_price_confirmation_page) < 1, \
        f'Стоимость заказа - ({price_order}) не соответствует стоимости на странице Подтверждение ' \
        f'- ({total_price_confirmation_page})'

    discounts_order = page.sve_all_discounts()
    discounts_order.sort()
    assert discounts_order == discounts_confirmation_page, \
        f'Скидки на странице заказа - ({discounts_order}) не соответствуют скидкам на странице Подтверждение - ' \
        f'({discounts_confirmation_page})'

    allowances_on_order_page_open = page.saving_surcharges_in_the_order()
    assert allowances_on_order_page_open == allowances_confirmation_page, \
        f'Надбавки на странице заказа - ({allowances_on_order_page_open}) не соответствуют надбавкам на странице ' \
        f'Подтверждение - ({allowances_confirmation_page})'

    page.checking_printing_forms_download(num_order)
    browser.switch_to.window(window_search_pq_crm)

    page = SearchPq(browser, link_search_pq)
    page.search_order(num_order)
    page.go_to_order(num_order)

    page = PqPage(browser, link_search_pq)
    page.payment_condition_must_be_advance_payment()

    price_order_crm = page.store_price_crm_order()
    assert price_order_crm == float(price_order), \
        f'Стоимость - ({price_order_crm}) заказа {num_order} на странице Заказа в crm не равна стоимости - ' \
        f'({price_order}) заказа - ({num_order}) на странице Детали заказа в Опене'

    allowances_on_order_crm = page.saving_surcharges_on_all_article_lines()
    assert allowances_on_order_crm == allowances_on_order_page_open, \
        f'Надбавки на странице заказа {num_order} в crm - ({allowances_on_order_crm}) не соответствуют надбавкам ' \
        f'на странице заказа в Опене - ({allowances_on_order_page_open})'

    all_discounts_crm_order = page.store_all_discounts()
    assert all_discounts_crm_order == discounts_order, \
        f'Скидки - {all_discounts_crm_order}) на странице заказа {num_order} в crm не соответствуют скидкам - ' \
        f'{discounts_order} заказа {num_order} на странице Детали заказа в Опене'
