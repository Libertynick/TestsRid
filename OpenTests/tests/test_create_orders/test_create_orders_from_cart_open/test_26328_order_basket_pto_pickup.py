import allure
import pytest

from config import TestEnvironment
from crm_pages.pq_page.pq_page import PqPage
from crm_pages.search_pq_page.search_pq_page import SearchPq
from open_pages.cart_page.cart_page import CartPage
from open_pages.header.header_page import Header
from open_pages.main_page.main_page import MainPage
from open_pages.order_details_page.order_details_page import OrderDetails
from open_pages.standart_order_page.standart_order_page import StandardOrderPage

ARTICLE = ['w488900 2']
ADDRESS_PICKUP_PTO = 'Нижегородская обл., Дзержинск, ул. Учебная, д 1А'  # Адрес самовывоза


@allure.feature('Создание заказа из корзины')
@allure.story('Самовывоз. ПТО. Стандартный заказ Предоплата')
@pytest.mark.xdist_group(name="open")
@pytest.mark.parametrize('article', ['w488900 2'])
@pytest.mark.stage
def test_26328_creation_kp_pto_pickup(browser, article, auth_crm_extru_start):
    """Создание КП ПТО самовывоз"""
    # Действия на Главной странице
    page = MainPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.open()
    page.authorization_from_main_page(TestEnvironment.LOGIN_TST_VODOKOMFORT, TestEnvironment.PASSWORD_TST_VODOKOMFORT)

    # Переход в Корзину
    page = Header(browser, TestEnvironment.LINK_OPEN_TST)
    page.click_basket()

    # Действия в корзине
    page = CartPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.choice_of_client_number()
    page.click_empty_trash()
    page.type_product_in_input(article)
    page.click_add_button()
    price_cart = page.store_price()
    # print(price_cart, 'price_cart---')
    # time.sleep(5)
    page.click_continue_button()

    # Действия на странице Подтверждение
    page = StandardOrderPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.should_h1_standard_order()
    page.choice_of_payment_terms_prepayment()
    page.choice_of_delivery_method_pickup_pto()

    price_confirmation = page.store_price_confirmation()
    # print(price_confirmation, 'price_confirmation---')
    page.should_be_equal_prices(price_cart, price_confirmation)
    comment = 'Автотесты!!!\ntest_selenium_web_ui'
    page.type_comment(comment)

    page.click_confirmation_button()

    # Страница с созданными заказами
    page.click_num_pq_on_order_placed_page()

    # Страница детали заказа
    page = OrderDetails(browser, TestEnvironment.LINK_OPEN_TST)
    page.waiting_for_account_creation()
    page.payment_condition_must_be_advance_payment()
    page.data_display_check()
    price_order = float(page.store_price_order())
    num_order = page.store_num_order()
    print(f'{num_order} - Номер заказа')
    # print(price_order, f'Стоимость заказа {num_order} в деталях заказа в Опене')
    page.checking_printing_forms_download(num_order)

    # Переход в crm для сверки информации в заказа
    auth_crm_extru_start(ruco=TestEnvironment.LOGIN_CRM)
    page = SearchPq(browser, TestEnvironment.LINK_SEARCH_PQ_TST)
    page.open()
    page.search_order(num_order)
    page.go_to_order(num_order)

    page = PqPage(browser, TestEnvironment.LINK_CRM_TST)
    page.payment_condition_must_be_advance_payment()
    price_order_crm_1 = float(page.store_price_crm_order())
    # print(price_order_crm_1, f'Стоимость заказа в ДКП crm {num_order}')
    page.verify_price_crm_with_price_open(price_order_crm_1, price_order)
    page = PqPage(browser, TestEnvironment.LINK_SEARCH_PQ_TST)
    # Проверка наличия Надбавки
    allowance_order = page.allowance()

    with allure.step(f'Проверка, что надбавка в заказе {num_order} CRM - 0'):
        assert allowance_order == 0.0, f'Надбавка ({allowance_order}) на странице заказа {num_order} в CRM не равна 0'

    # Проверка кол-ва позиций в счете
    page.check_order_lines_count_pto()
