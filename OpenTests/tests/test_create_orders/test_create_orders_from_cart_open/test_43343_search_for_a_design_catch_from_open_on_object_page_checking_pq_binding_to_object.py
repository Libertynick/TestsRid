import allure
import pytest

from base_page.base_page import BasePageCrm
from config import TestEnvironment
from crm_pages.header_page.header_page import HeaderPage
from crm_pages.object_page.object_page import ObjectPage, KpTab
from crm_pages.search_objects_page.search_object_page import SearchObjectPage
from open_pages.cart_page.cart_page import CartPage
from open_pages.design_condition_page.design_condition_page import DesignConditionPage
from open_pages.header.header_page import Header
from open_pages.main_page.main_page import MainPage
from open_pages.new_design_condition.new_design_condition_page import NewDesignCondition
from open_pages.standart_order_page.standart_order_page import StandardOrderPage


@allure.feature('Создание проектного условия в Open')
@allure.story('Поиск Проектного условия из Опена на странице Объекта (проверка привязки PQ к объекту')
@pytest.mark.xdist_group(name="design condition")  # группа для параллельного запуска
@pytest.mark.parametrize('article', ['065B8207R 10 003L0143 25'])
@pytest.mark.stage
def test_43343_search_for_a_design_catch_from_open_on_object_page_checking_pq_binding_to_object(browser, article,
                                                                                                auth_crm_extru_start):
    """43343 Поиск Проектного условия из Опена на странице Объекта (проверка привязки PQ к объекту)"""
    link_open_tst = TestEnvironment.LINK_OPEN_TST
    login_open_tst = TestEnvironment.LOGIN_TST_BURNYASHEVA
    password_open_tst = TestEnvironment.PASSWORD_TST_BURNYASHEVA

    comment = 'ТЕСТИРОВАНИЕ!!!\ntest_selenium_web_ui'
    num_object = '1139467'

    link_crm_tst = TestEnvironment.LINK_CRM_TST
    login_crm_tst = TestEnvironment.LOGIN_CRM

    page = MainPage(browser, link_open_tst)
    page.open()
    page.authorization_from_main_page(login_open_tst, password_open_tst)

    # Переход в Корзину
    page = Header(browser, link_open_tst)
    page.click_basket()

    # Действия в корзине
    page = CartPage(browser, link_open_tst)
    page.choice_of_client_number()
    page.click_empty_trash()
    page.type_product_in_input(article)
    page.click_add_button()
    page.click_continue_button()

    page = StandardOrderPage(browser, link_open_tst)
    page.click_new_project()

    page = NewDesignCondition(browser, link_open_tst)
    page.type_comment(comment)
    page.choose_name_object(num_object)
    page.choose_eng_section()
    page.choose_end_buyer()
    page.click_button_confirm()
    page.transition_to_created_design_condition()

    page = DesignConditionPage(browser, link_open_tst)
    created_num_pq = page.store_created_num_pq()
    print(created_num_pq, 'Номер созданного PQ')
    num_object_when_created_pq = page.save_object_num()
    print(num_object_when_created_pq, '- Номер объекта при создании PQ')

    #  Переход в crm
    page = BasePageCrm(browser, link_crm_tst)
    browser.execute_script("window.open(arguments[0])", link_crm_tst)
    page.switching_window(-1)
    auth_crm_extru_start(ruco=login_crm_tst)

    page.open()

    page = HeaderPage(browser, link_crm_tst)
    page.go_to_object_page()

    page = SearchObjectPage(browser, link_crm_tst)
    page.delete_sales_office()
    page.entering_num_kp_or_check(created_num_pq)
    page.click_btn_search()
    num_found_object_number = page.saving_number_of_found_object()

    assert num_found_object_number == num_object_when_created_pq, \
        f'Номер объекта - ({num_found_object_number}) при поиске по PQ в CRM не соответствует номеру объекта при ' \
        f'создании PQ в Опене - ({num_object_when_created_pq})'

    page.go_to_object(num_object_when_created_pq)

    page = ObjectPage(browser, link_crm_tst)
    page.go_to_chapter_kp()
    page = KpTab(browser, link_crm_tst)
    page.opening_pq_in_a_new_tab_by_number(created_num_pq)
