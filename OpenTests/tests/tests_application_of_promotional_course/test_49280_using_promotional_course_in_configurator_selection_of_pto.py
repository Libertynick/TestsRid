import allure
import pytest

from config import TestEnvironment
from open_pages.main_page.main_page import MainPage
from open_pages.pto_configurator_page.standard_pto_calculation_page import StandardPtoPage


@allure.feature('Опеновские тесты')
@allure.story('Применение промокурса в конфигураторе (подбор ПТО)')
@pytest.mark.xdist_group(name="open")  # группа для параллельного запуска
@pytest.mark.stage
def test_49280_using_promotional_course_in_configurator_selection_of_pto(browser):
    """Применение промокурса в конфигураторе (подбор ПТО)"""
    login = TestEnvironment.LOGIN_TST_VODOKOMFORT
    password = TestEnvironment.PASSWORD_TST_VODOKOMFORT
    link_tst_standard_calculation_of_pto = TestEnvironment.LINK_TST_STANDARD_CALCULATION_OF_PTO

    value_power = '1'  # Мощность
    value_hot_water_in = '100'  # Температура горячей воды на входе в ПТО
    value_cold_water_in = '30'  # Температура холодной воды на входе в ПТО
    value_hot_water_from = '60'  # # Температура горячей воды на выходе из ПТО
    value_cold_water_from = '50'  # # Температура холодной воды на выходе из ПТО

    page_main = MainPage(browser, link_tst_standard_calculation_of_pto)
    page_standart_pto = StandardPtoPage(browser, link_tst_standard_calculation_of_pto)

    page_main.open()
    page_main.authorization_from_main_page(login, password)

    page_standart_pto.click_btn_standard_mode()
    page_standart_pto.type_power(value_power)
    page_standart_pto.type_hot_water_in(value_hot_water_in)
    page_standart_pto.type_cold_water_in(value_cold_water_in)
    page_standart_pto.type_hot_water_from(value_hot_water_from)
    page_standart_pto.type_cold_water_from(value_cold_water_from)
    page_standart_pto.click_pick_pto()
    all_solutions = page_standart_pto.save_all_solutions()
    print(all_solutions, 'Наименование всех найденных решений')

    with allure.step('Проверяем расчет стоимости в УЕ подобранных решений'):
        for el in all_solutions:
            price_solution_rub = page_standart_pto.save_rice_rub_in_tooltip_by_name_solution(el)
            promo_course = page_standart_pto.save_promo_course_in_tooltip_by_name_solution(el)
            price_solution_ue = page_standart_pto.save_price_ue_by_name_solution(el)

            expected_price_ue = price_solution_rub / promo_course
            assert expected_price_ue == price_solution_ue, \
                f'Ожидаемая стоимость - ({expected_price_ue}) в УЕ решения {el} не соответствует стоимости ' \
                f'на странице - ({price_solution_ue})'
