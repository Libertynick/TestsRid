import allure
import pytest
from selenium.common import TimeoutException

from config import TestEnvironment
from open_pages.cart_page.cart_page import CartPage, CartRol, ModalSellersChoice
from open_pages.header.header_page import Header
from open_pages.main_page.main_page import MainPage


@pytest.mark.xdist_group(name="open")  # группа для параллельного запуска
@allure.feature('ROL Open')
@allure.story(
    'Проверка выбора дистрибьютора на Карте; не привязанный залогиненный авторизованный пользователь, юр лицо')
@pytest.mark.stage
@pytest.mark.xfail(reason='нужно актуализировать автотест')
@pytest.mark.parametrize(
    'article', [
        '003Z1801R 003G1014R 082H0212R 087H374983R 065Z0405R 187F1946PR 087H358001R 087H358001R 187F0591R '
        '065N9506GR 082H0222R'
    ]
)
def test_43782_checking_distributor_selection_on_map_not_linked_logged_in_authorized_user_legal_entity(
        browser, article
):
    """Проверка выбора дистрибьютора на Карте; не привязанный залогиненный авторизованный пользователь, юр лицо"""
    link_open_tst = TestEnvironment.LINK_OPEN_TST
    login_open_tst = TestEnvironment.LOGIN_UNATTACHED_LEGAL_ENTITY
    password_open_tst = TestEnvironment.PASSWORD_UNATTACHED_LEGAL_ENTITY

    organization_exception = 'organization exception'  # Организация исключение - не берется в учет рекомендованных
    # организаций

    articles_for_added_basket = article.split(' ')
    print(articles_for_added_basket, 'articles_for_added_basket')

    page = MainPage(browser, link_open_tst)
    page.open()
    page.authorization_from_main_page(login_open_tst, password_open_tst)

    page = Header(browser, link_open_tst)
    page.click_basket()

    page = CartPage(browser, link_open_tst)
    try:
        page.click_empty_trash()
    except TimeoutException:
        pass
    page.type_product_in_input(article)
    page.click_add_button()

    page = CartRol(browser, link_open_tst)
    page.should_be_clickable_radio_btn_for_selecting_a_recommended_seller()

    #  Запоминаем рекомендованных продавцов для выбора
    recommended_sellers_list = page.save_recommended_sellers_list()

    page.click_btn_choose_a_distributor_yourself()

    page = ModalSellersChoice(browser, link_open_tst)
    list_name_organization_to_select_in_modal = page.save_name_organization_to_select()

    # Проходимся по списку рекомендованных организаций на странице и по списку организаций в модалке, выбираем ту
    # организацию, которой нет в рекомендованных на странице

    organization_to_select = ''  # Организация для выбора в модалке выбора продавца
    for organization in list_name_organization_to_select_in_modal:
        if organization in recommended_sellers_list:
            continue
        elif organization not in recommended_sellers_list and organization != organization_exception:
            organization_to_select = organization

    page.seller_selection(organization_to_select)
    page.checking_display_of_selected_organization_on_map(organization_to_select)
