import allure
import pytest

from config import TestEnvironment
from crm_pages.modal_new_kp.modal_new_kp import ModalNewKp
from crm_pages.object_page.object_page import ObjectPage, KpTab
from crm_pages.pq_page.pq_page import PqPage


@pytest.mark.stage
@allure.feature('CRM')
@allure.story('Проверка возникновения согласований разного типа в КП теплового отдела')
@pytest.mark.parametrize('article', [
    '003L0391R w488900 TDU1009575 065B2931R Q0404240004-1 015P2019  150U3632  BQ0404240005-2 140F1245R 19808236R '
    '088U0625R 89846026R 023U7251R 021B8730R 148B1100R  16065R 005U1314 042U001531R 060-121766R'
])
def test_49223_checking_of_different_types_of_approvals_in_cp_on_tp(browser, article, auth_crm_extru_start):
    """Проверка возникновения согласований разного типа в КП теплового отдела"""

    object_tst = TestEnvironment.LINK_OBJECT_IN_TST

    potential_mode = 'Частичная закупка'
    distr = TestEnvironment.DISTRIBUTOR_TSK_INZPROMSNAB
    num_contract = '0014421420'
    percentage_payment = '30'  # Суммарная оплата перед отгрузкой
    duration_of_credit_days = '95'  # Продолжительность кредитования, дней
    delivery_conditions = 'Доставка на указанный адрес'
    discounts_by_gcm_first = {'13': '0'}  # Скидки по ГЦМ (key - ГЦМ, value - значение скидки). Для первой смены
    discounts_by_gcm_second = {'20': '80', '1D': '80', 'YA': '80', '2A': '80', 'SJ': '80', 'WJ': '80'}

    discount_for_others_gcm = '66'  # Скидка для остальных ГЦМ
    delivery_time = {'w488900': '3'}  # Срок поставки
    type_of_agreement_no_visible_first = ['Логистика Ридан',
                                          'Закупки Ридан']  # Типы согласований, которых не должно быть в КП
    type_of_agreement_no_visible_second = ['Фиксированный курс', 'Доставка',
                                           'Кредитный контроль']  # Типы согласований, которых не должно быть в КП
    type_of_agreement_visible_first = ['Фиксированный курс', 'Кредитный контроль', 'Доставка', 'Скидки',
                                       'Скидки RA', 'Маржа RA ГЦМ', 'Согласование HEX',
                                       'Согласование DEN', 'Согласование DEVI', 'Согласование Pump', 'Согласование HES',
                                       'Согласование RA ГЦМ', 'Согласование HE (RA)'
                                       ]  # Типы согласований, которые должны быть в КП
    type_of_agreement_visible_second = ['Скидки RA', 'Маржа RA', 'Согласование Pump', 'Согласование HEX',
                                        'Согласование DEVI', 'Согласование DEN', 'Согласование HES',
                                        'Согласование RA ГЦМ', 'Скидки', 'Согласование HE (RA)']

    page_object = ObjectPage(browser, object_tst)
    page_modal_new_kp = ModalNewKp(browser, object_tst)
    page_kp_tab = KpTab(browser, object_tst)
    page_pq = PqPage(browser, object_tst)

    auth_crm_extru_start()

    page_object.open()

    object_address = page_object.save_address_object()
    # object_address = 'Россия, ' + object_address
    page_object.click_add_kp()

    page_modal_new_kp.potential_mode_selection(potential_mode)
    page_modal_new_kp.choice_distributor(distr)
    page_modal_new_kp.choice_sap_code_main_contract(num_contract=num_contract)
    page_modal_new_kp.choice_final_buyer()
    page_modal_new_kp.switching_currency_to_a_fixed_rate()
    page_modal_new_kp.expanding_payment_terms_menu()
    page_modal_new_kp.click_on_button_agree_on_payment_terms()
    page_modal_new_kp.choice_of_total_payment_before_shipment(percentage_payment)
    page_modal_new_kp.choice_lending_duration(duration_of_credit_days)
    page_modal_new_kp.selection_of_delivery_conditions(delivery_conditions)
    page_modal_new_kp.check_entered_address(object_address)
    page_modal_new_kp.choice_of_free_payment_mode()
    page_modal_new_kp.adding_codes(article)
    page_modal_new_kp.go_to_chapter_discount()

    # Вводим скидки дистра по ГЦМ в разделе Скидки
    gcm_list_for_discounts = list(discounts_by_gcm_first.keys())
    for el in gcm_list_for_discounts:
        page_modal_new_kp.input_discount_distr_by_gcm_in_tab_discounts(el, discounts_by_gcm_first[el])

    page_modal_new_kp.input_discount_distr_by_gcm_except_for_exceptions(gcm_list_for_discounts, discount_for_others_gcm)
    page_modal_new_kp.click_btn_save_pq()
    num_pq = page_modal_new_kp.store_num_pq_in_title()
    print(num_pq)
    page_modal_new_kp.checking_that_approvals_have_appeared(num_pq)
    page_modal_new_kp.checking_that_there_are_agreements_in_approval_steps(num_pq)

    # Проверяем сроки поставки
    article_for_check_delivery_time = list(delivery_time.keys())
    for article in article_for_check_delivery_time:
        page_modal_new_kp.checking_delivery_time(article, delivery_time[article])

    # Проверка отсутствия типов согласования в общем списке согласований КП
    for agreement in type_of_agreement_no_visible_first:
        page_modal_new_kp.check_no_visible_type_of_agreement(agreement, num_pq)

    # Проверка наличия типов согласования в общем списке согласований КП

    page_modal_new_kp.check_visible_type_of_agreement(type_of_agreement_visible_first, num_pq)

    page_modal_new_kp.expanding_payment_terms_menu()
    page_modal_new_kp.selection_of_contractual_payment_terms(contractual_terms='Предоплата')
    page_modal_new_kp.switching_currency_to_a_internal_rate()
    page_modal_new_kp.selection_of_delivery_conditions(delivery_conditions='Стандартные договорные условия')
    page_modal_new_kp.go_to_chapter_discount()

    # Ввод скидок по ГЦМ
    gcm_list_for_discounts = list(discounts_by_gcm_second.keys())
    for gcm in gcm_list_for_discounts:
        page_modal_new_kp.input_discount_distr_by_gcm_in_tab_discounts(gcm, discounts_by_gcm_second[gcm])

    page_modal_new_kp.click_btn_save_pq()

    # Проверка отсутствия типов согласования в общем списке согласований КП
    for agreement in type_of_agreement_no_visible_second:
        page_modal_new_kp.check_no_visible_type_of_agreement(agreement, num_pq)

    margin_value_in_kp = page_modal_new_kp.store_valuation_margin_values()
    page_modal_new_kp.check_margin_agreements(margin_value_in_kp, num_pq)
    page_modal_new_kp.check_visible_type_of_agreement(type_of_agreement_visible_second, num_pq)

    all_agreements_on_modal_new_kp = page_modal_new_kp.store_all_type_agreements_on_page()
    page_modal_new_kp.send_for_approval_from_modal_new_kp()

    page_object.go_to_chapter_kp()
    page_kp_tab.opening_pq_in_a_new_tab_by_number(num_pq)
    all_agreements_on_pq_page = page_pq.store_all_type_agreements_on_page()

    with allure.step(f'Проверяем соответствие видов согласования в модалке создания кп после сохранения с видами'
                     f' согласований на странице PQ {num_pq}'):
        for agreement in all_agreements_on_modal_new_kp:
            assert agreement in all_agreements_on_pq_page, \
                f'Вид согласования - ({agreement}) в модалке создания  {num_pq} после сохранения не найден в видах ' \
                f'согласования на странице PQ {num_pq} - ({all_agreements_on_pq_page})'
