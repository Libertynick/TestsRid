import allure
import pytest

from config import TestEnvironment
from crm_pages.modal_new_kp.modal_new_kp import ModalNewKp
from crm_pages.object_page.object_page import ObjectPage, KpTab


@allure.feature('Создание КП в СРМ')
@allure.story('Стандартные договорные условия. Предоплата')
@pytest.mark.stage
@pytest.mark.parametrize('article', ['w488900 w203065797'])
def test_48447_creating_cp_and_checking_deletion_of_positions(browser, article, auth_crm_extru_start):
    """Создание КП и проверка удаления позиций"""
    distr = TestEnvironment.DISTRIBUTOR_VODOKOMFORT_TST
    object_tst = TestEnvironment.LINK_OBJECT_IN_TST

    potential_mode = 'Частичная закупка'

    articles_list = article.split(' ')
    article_for_delete = articles_list[-1]  # артикул для удаления
    remaining_code_in_kp = articles_list[0]  # Код, который останется после удаления

    auth_crm_extru_start()

    # Страница Объекта
    page = ObjectPage(browser, object_tst)
    page.open()
    page.click_add_kp()

    page = ModalNewKp(browser, object_tst)
    page.potential_mode_selection(potential_mode)
    page.internal_course_toggle_switch_must_be_turned_on()
    page.choice_distributor(distr)
    page.choice_sap_code_main_contract()
    page.choice_final_buyer()
    page.there_must_be_an_advance_payment()
    page.there_should_be_standard_contractual_terms()
    page.adding_codes(article)
    total_price_before_delete_code = page.store_amount_nds_total_in_kp_crm_rub()  # итоговая сумма до удаления кода
    page.delete_position_by_article(article_for_delete)

    expected_codes_in_kp_after_delete_code = []  # Ожидаемые коды в кп после удаления кода
    for el in articles_list:
        if el != article_for_delete:
            expected_codes_in_kp_after_delete_code.append(el)
    codes_in_kp = page.saving_added_codes()
    with allure.step('Проверка, что после удаления кода в кп остались только коды, которые не удаляли'):
        assert expected_codes_in_kp_after_delete_code == codes_in_kp, \
            f'Коды в кп - ({codes_in_kp}) после удаления позиции ({article_for_delete}) не соответствуют ' \
            f'ожидаемым кодам в кп ({expected_codes_in_kp_after_delete_code})'

    total_price_after_delete_code = page.store_amount_nds_total_in_kp_crm_rub()  # итоговая сумма после удаления кода

    with allure.step('Суммы кп до удаления кода и после удаления кода не должны быть равны'):
        assert abs(total_price_after_delete_code - total_price_before_delete_code) > 0.9, \
            f'Сумма кп ({total_price_after_delete_code}) до удаления кода равна сумме кп после удаления ' \
            f'кода - ({total_price_before_delete_code})'

    # Сохраняем итоговую сумму у кода, который остался в кп и сравниваем его сумму с итоговой суммой в самом кп

    total_price_by_article = page.save_amount_with_nds_distributor_by_article(remaining_code_in_kp)
    with allure.step('Проверяем, что итоговая сумма в кп соответствует итоговой сумме позиции, которая осталась в кп '
                     'после удаления'):
        assert total_price_by_article == total_price_after_delete_code, \
            f'Итоговая сумма кп - ({total_price_after_delete_code}) после удаления позиции не соответствует итоговой ' \
            f'сумме кода - ({total_price_by_article}), который остался после удаления'

    page.click_btn_save_pq()
    num_pq = page.store_num_pq_in_title()
    total_price_after_save = page.store_amount_nds_total_in_kp_crm_rub()
    with allure.step('Сравниваем итоговые суммы до сохранения (после удаления кода) и после сохранения'):
        assert total_price_after_save == total_price_after_delete_code, \
            f'Сумма КП до сохранения и после удаления кода - ({total_price_after_delete_code}) не равна итоговой ' \
            f'сумме кп после сохранения - ({total_price_after_save})'

    page.close_modal_new_kp()

    page = ObjectPage(browser, object_tst)
    page.go_to_chapter_kp()
    page = KpTab(browser, object_tst)
    total_price_in_tab_kp = page.save_total_price_pq_by_num_pq(num_pq)

    with allure.step('Сравниваем итоговую стоимость кп в модалке создания кп после сохранения с итоговой '
                     'стоимостью во вкладке КП на странице объекта'):
        assert total_price_in_tab_kp == total_price_after_save, \
            f'Итоговая стоимость - ({total_price_in_tab_kp}) кп во вкладке КП на странице объекта не равна итоговой ' \
            f'стоимости кп в модалке создания кп после сохранения - ({total_price_after_save})'
