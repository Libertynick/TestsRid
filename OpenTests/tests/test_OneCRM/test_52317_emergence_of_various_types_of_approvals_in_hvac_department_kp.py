import allure

from api_testing_project.services.crm_commerce.create_offer.api.api_create_offer import ApiCreateOffer
from config import TestEnvironment
from crm_pages.pq_page.pq_page import PqPage


@allure.feature('CRM')
@allure.story('Возникновение согласований разного типа в КП отдела HVAC')
def test_52317_emergence_of_various_types_of_approvals_in_hvac_department_kp(
        browser,
        auth_crm_extru_start,
        emergence_of_different_types_of_agreements_in_kp):
    """
    Возникновение согласований разного типа в КП отдела HVAC
    https://rucotfs.ridancorp.net/DanfossDev/CRM/_workitems/edit/52317
    """
    user_ruco = 'RUCO1427'  # Корниенко Алексей Александрович

    null = None
    true = True
    false = False
    req_create_offer = {
        "docType": "Order",
        "showPriceWithDiscount": false,
        "showDiscount": true,
        "currencyDate": "2025-05-27T00:00:00",
        "currency": "RUB",
        "exchangeRateType": "YRU",
        "userName": "RUCO1427",
        "personId": "04823795-9571-4dfc-a307-f9dabf5c30dd",
        "usePromoCurrency": true,
        "passportId": "4DBB2A44-D895-468D-A51F-AE98B9B3D487",
        "specTypeId": "02061701-51E6-402E-B18F-7BAE7A27F6FB",
        "specificationId": "83BAAF6E-B790-4F35-8910-9AA020449733",
        "paymentTerms": "RU00",
        "surchargesPayment": "0",
        "surchargesConversion": 0,
        "payPercentBeforePlacingIntoProduction": 100,
        "isDraft": true,
        "isEndUserPQ": false,
        "purchaseType": "121B015A-E76D-4688-9BB6-2A56EC6DE2EF",
        "finalBuyerId": "bd6d62f7-bcab-4385-bc98-c853cb9cb5e5",
        "customerId": "aa890eff-7aa9-46c3-a887-29220f5a4274",
        "clientInn": "9705031050",
        "debtorAccount": "RT25-9705031050-HE",
        "currencySpecialFixation": true,
        "setContractDiscounts": true,
        "orderLines": [
            {
                "ODID": null,
                "materialCode": "003G1003R",
                "RequestedMaterialCode": "003G1003R",
                "quantity": 1,
                "lineNumber": 1,
                "usePromoCurrency": true,
                "discountPercent": 77,
                "endClientDiscountPercent": 0,
                "excludePosition": false,
                "useSpecialPrice": false,
                "lineType": "Material",
                "copiedFromId": null
            },
            {
                "ODID": null,
                "materialCode": "w488900",
                "RequestedMaterialCode": "w488900",
                "quantity": 1,
                "lineNumber": 2,
                "usePromoCurrency": true,
                "discountPercent": 77,
                "endClientDiscountPercent": 0,
                "excludePosition": false,
                "useSpecialPrice": false,
                "lineType": "HEX",
                "copiedFromId": null
            },
            {
                "ODID": null,
                "materialCode": "148B1100R",
                "RequestedMaterialCode": "148B1100R",
                "quantity": 1,
                "lineNumber": 3,
                "usePromoCurrency": true,
                "discountPercent": 77,
                "endClientDiscountPercent": 0,
                "excludePosition": false,
                "useSpecialPrice": false,
                "lineType": "Material",
                "copiedFromId": null
            },
            {
                "ODID": null,
                "materialCode": "095B1181R",
                "RequestedMaterialCode": "095B1181R",
                "quantity": 1,
                "lineNumber": 4,
                "usePromoCurrency": true,
                "discountPercent": 77,
                "endClientDiscountPercent": 0,
                "excludePosition": false,
                "useSpecialPrice": false,
                "lineType": "Material",
                "copiedFromId": null
            }
        ],
        "deliveryOptions": {
            "ConsigneeCode": null,
            "Condition": "RU",
            "DeliveryCost": 0,
            "ClientFinalDelivery": null,
            "ConsigneeContacts": null,
            "consigneeAgreementDelivery": {
                "SourceFiasId": "00000000-0000-0000-0000-000000000000",
                "Address": "",
                "PaidDelivery": false,
                "ConditionDescription": "Стандартные договорные условия",
                "INN": "5501197692"
            },
            "CostIncludedInOrder": false,
            "totalDeliveryWeight": 27.968,
            "endPoint": "ToTK",
            "deliveryType": "Pickup",
            "consigneeId": "00000000-0000-0000-0000-000000000000"
        },
        "deliveryOptionsHex": null,
        "deliveryOptionsProd": null,
        "deliveryOptionsDZRProd": {
            "ConsigneeCode": null,
            "Condition": "RU",
            "DeliveryCost": 0,
            "ClientFinalDelivery": null,
            "ConsigneeContacts": null,
            "consigneeAgreementDelivery": {
                "SourceFiasId": "00000000-0000-0000-0000-000000000000",
                "Address": "",
                "PaidDelivery": false,
                "ConditionDescription": "Стандартные договорные условия",
                "INN": "5501197692"
            },
            "CostIncludedInOrder": false,
            "totalDeliveryWeight": 193.12,
            "endPoint": "ToTK",
            "deliveryType": "PickupDZR",
            "consigneeId": "00000000-0000-0000-0000-000000000000"
        },
        "isExport": false,
        "validDays": 14,
        "source": null,
        "sellerId": "20C340FE-6AFF-486F-B248-FD8DBE2C93CD",
        "IsATOffer": false,
        "autoFromEngSpec": false,
        "isNew": true
    }
    headers = {'userId': '9470105c-d9a1-4451-a794-a3bf1be6f076'}  # userId Корниенко Алексей Александрович

    type_of_agreement_visible_after_save = [
        'Незакрепленное КП',
        'Маржа HVAC ГЦМ',
        'Маржа HVAC',
        'Согласование HVAC RA',
        'Согласование HEX',
        'Согласование DEN',
        'Согласование HVAC RA ГЦМ',
        'Согласование HVAC (HE)'
    ]  # Типы согласований после сохранения
    type_of_agreement_visible_after_save_after_change_condition = [
        'Незакрепленное КП',
        'Маржа HVAC ГЦМ',
        'Маржа HVAC',
        'Согласование HVAC RA',
        'Согласование HEX',
        'Согласование DEN',
        'Согласование HVAC RA ГЦМ',
        'Согласование HVAC (HE)',
        'Предоплата',
        'Кредитный контроль',
        'Фиксированный курс'
    ]  # Типы согласований после изменений условий в КП

    expected_status_agreement = {
        'Незакрепленное КП': 'в процессе',
        'Маржа HVAC ГЦМ': 'в процессе',
        'Маржа HVAC': 'в процессе',
        'Согласование HVAC RA': 'в процессе',
        'Согласование HEX': 'в процессе',
        'Согласование DEN': 'в процессе',
        'Согласование HVAC RA ГЦМ': 'в процессе',
        'Согласование HVAC (HE)': 'в процессе',
        'Предоплата': 'в процессе',
        'Кредитный контроль': 'в процессе',
        'Фиксированный курс': 'в процессе'
    }  # Ожидаемые статусы у согласований

    delivery_type = 'Доставка на указанный адрес'
    link_pq = TestEnvironment.LINK_PQ_IN_CRM

    # Создаем КП через Дапи
    api_create_offer = ApiCreateOffer()
    id_pq, num_pq = api_create_offer.create_offer(headers=headers, request=req_create_offer)
    print(id_pq, num_pq)

    auth_crm_extru_start(ruco=user_ruco)

    link_pq_total = link_pq + id_pq
    page_pq = PqPage(browser, link_pq_total)

    # Открываем КП в срм
    page_pq.open()
    page_pq.click_btn_save_pq()
    page_pq.check_visible_type_of_agreement(type_of_agreement_visible_after_save, num_pq)
    page_pq.switching_currency_to_a_fixed_rate()
    page_pq.selection_of_delivery_conditions(delivery_type)
    page_pq.check_the_delivery_paid()
    page_pq.expanding_payment_terms_menu()
    page_pq.click_on_button_agree_on_payment_terms()
    page_pq.click_btn_save_pq()
    page_pq.check_visible_type_of_agreement(type_of_agreement_visible_after_save_after_change_condition, num_pq)
    page_pq.send_for_approval_pq_page()
    page_pq.status_of_checkpoint_must_be_approval()
    for key, value in expected_status_agreement.items():
        page_pq.checking_approval_status(type_agreement=key, expected_status_agreement=value)
