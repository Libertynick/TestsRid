import allure
import pytest
from selenium.common import TimeoutException

from config import TestEnvironment
from open_pages.cart_page.cart_page import CartPage
from open_pages.header.header_page import Header
from open_pages.main_page.main_page import MainPage
from open_pages.selection_online_tools_all.tdu_select.selection_of_tdu_distribution_unit_page import \
    SelectionOfTduDistributionUnitPage, DistributionNodeTduPage


@allure.feature('Опеновские тесты')
@allure.story('27075 Подбор распределительного шкафа TDU')
@pytest.mark.stage
@pytest.mark.xdist_group(name="open")
def test_27075_tdu_distribution_cabinet_selection(browser):
    """27075 Подбор распределительного шкафа TDU"""
    link_open = TestEnvironment.LINK_OPEN_TST
    link_tdu_selection = 'https://ruecom-open-tst1.ridancorp.net/instruments/configurator-tdu'

    collector_type = 'С запорно-балансировочными вставками (серия TDU.7R)'  # Тип коллектора
    riser_location = 'Слева'  # Расположение стояка
    diameter_of_connection_to_riser = 'Ду 20'  # Диаметр присоединения к стояку
    manual_balancing_valve_at_manifold_inlet = 'С клапаном'  # Ручной балансировочный клапан на вводе коллектора
    number_of_branches_to_apartments = '2'  # Количество отводов к квартирам
    balancing_valve_on_outlet = 'С клапаном (MNT-R)' \
                                ''  # Балансировочный клапан на отводе

    page = MainPage(browser, link_open)
    page.open()
    page.authorization_from_main_page(TestEnvironment.LOGIN_TST_VODOKOMFORT, TestEnvironment.PASSWORD_TST_VODOKOMFORT)
    page = Header(browser, link_open)
    page.click_basket()
    page = CartPage(browser, link_open)
    page.click_empty_trash()

    page = SelectionOfTduDistributionUnitPage(browser, link_tdu_selection)
    page.open()
    page.checking_selected_collector_type(collector_type)
    page.checking_selected_riser_location(riser_location)
    page.checking_selected_diameter_of_connection_to_riser(diameter_of_connection_to_riser)
    page.checking_selected_manual_balancing_valve_at_manifold_inlet(manual_balancing_valve_at_manifold_inlet)
    page.checking_selected_number_of_branches_to_apartments(number_of_branches_to_apartments)
    # page.checking_selected_balancing_valve_on_outlet(balancing_valve_on_outlet)
    page.article_in_selection_results_should_not_be_empty()
    page.name_in_selection_results_should_not_be_empty()
    page.price_with_nds_in_selection_results_should_not_be_empty()

    number_of_branches_to_apartments = '4'
    page.selection_number_of_outlets_to_apartments(number_of_branches_to_apartments)
    page.article_in_selection_results_should_not_be_empty()
    page.name_in_selection_results_should_not_be_empty()
    page.price_with_nds_in_selection_results_should_not_be_empty()
    article = page.save_article_as_a_result_of_selection()
    print(f'{article} - Артикул в результате подбора')
    name_tdu = page.save_name_tdu_as_a_result_of_selection()
    print(f'{name_tdu} - Наименование ТДУ на странице подбора')
    price_with_nds = page.save_price_with_nds_as_a_result_of_selection()
    print(f'{price_with_nds} - Цена с ндс на странице подбора')
    page.click_btn_get_selection_results()

    page = DistributionNodeTduPage(browser, link_open)
    page.name_of_tdu_must_correspond_to_what_is_expected(name_tdu)
    page.price_with_nds_of_tdu_must_correspond_to_what_is_expected(price_with_nds)
    page.article_of_tdu_must_correspond_to_what_is_expected(article)
    page.click_btn_added_to_basket(price_with_nds)
    page.click_btn_add_to_basket_in_modal_added_to_basket()
    page.click_btn_go_to_basket_in_modal_items_added_to_cart()

    page = CartPage(browser, link_open)
    list_article_in_basket = page.save_list_articles_in_cart()
    print(f'{list_article_in_basket} - список артккулов на странице Корзина')

    page = DistributionNodeTduPage(browser, link_open)
    page.checking_whether_an_item_has_been_added_to_cart(article, list_article_in_basket)

    page = CartPage(browser, link_open)
    page.click_empty_trash()
