import allure
import pytest

from config import ProdEnvironment
from open_pages.calculation_btp_select_page.calculation_btp_select_page import CalculationBtpSelectPage
from open_pages.header.header_page import Header
from open_pages.main_page.main_page import MainPage
from open_pages.selection_online_tools_all.bhu_select.bhu_select_page import BhuSelectPage, RefrigeratorPipingBlockPage, \
    HydraulicModulePage, PtoBindingModulePage
from open_pages.selection_tools_modal.selection_tools_modal import SelectionToolsModalPage


def selection_bhu(browser):
    """Подбор БХУ
    Тест выполняется только на продакшене, так как на тст нет данного функционала устоявшегося
    """
    link_open = ProdEnvironment.OPEN_URL

    # Значения для модуля подключения к холодильной машине
    region = 'Москва'
    working_fluid_temperature_value = '130'  # Температура рабочей жидкости
    minimum_ambient_temperature_value = '5'  # Минимальная темепература окружающей среды
    nominal_flow_value = '40'  # Номинальный расход
    du_accession_value = '150'

    # Значения для модуля Насосный гидромодуль
    pump_manufacturer = 'Wilo'  # Производитель насосов
    expected_sha_installation = 'на раме'  # Ожидаемое значение в выпадающем списке Монтаж ША
    expected_presence_of_crp = 'Без частотного регулирования'  # Ожидаемое наличие ЧРП
    total_number_of_pumps = '2'  # Общее количество насосов
    number_of_reserve_pumps = '1'  # Количество резервных насосов
    pump_rated_flow = '10'  # Номинальный расход насосов
    nominal_pump_head = '5'  # Номинальный напор насоса

    # Значения для Модуль обвязки ПТО (БХУ-ПТО)
    temperature_from_hm = '5'  # Температура от ХМ
    temperature_to_hm = '10'  # Температура к ХМ
    load = '250'  # Нагрузка
    control_valve = 'VFM2'  # Регултрующий клапан
    electric_drive_power_supply = '230B'  # Питание электропривода
    temperature_to_consumer = '7'  # Температура к потребителю
    temperature_from_consumer = '12'  # Температура от потребителя

    page = MainPage(browser, link_open)
    page.open()
    page.authorization_from_main_page(ProdEnvironment.EMAIL_OPEN_PROD, ProdEnvironment.PASSWORD_OPEN_PROD)

    window_open = browser.current_window_handle  # Вкладка Опен

    page = Header(browser, link_open)
    page.go_to_option_tools()

    page = SelectionToolsModalPage(browser, link_open)
    page.click_tab_air_conditioning_and_refrigeration()
    page.go_to_bhu_select()
    page = BhuSelectPage(browser, link_open)
    page.authorization(ProdEnvironment.EMAIL_OPEN_PROD, ProdEnvironment.PASSWORD_HEAT_PLATFORM_ELKA)
    page.click_btn_drop_menu_tools()
    page.click_btn_calculation_bhu_in_drop_menu_tools()
    page.choice_region(region)

    # Заполнение модуля подключения к холодильной машине
    page.click_btn_module_for_connecting_to_a_refrigeration_machine()

    page = RefrigeratorPipingBlockPage(browser, link_open)
    page.water_toggle_switch_must_be_selected()
    page.entering_a_value_in_working_fluid_temperature_field(working_fluid_temperature_value)
    page.entering_a_value_in_minimum_ambient_temperature_field(minimum_ambient_temperature_value)
    page.entering_a_value_in_nominal_flow_field(nominal_flow_value)
    page.choice_du_accession(du_accession_value)
    page.selecting_check_box_electrically_butter_valve()
    page.select_checkbox_mesh_filter()
    page.click_btn_save_and_exit()

    # Заполнения модуля Насосный гидромодуль
    page = BhuSelectPage(browser, link_open)
    page.click_btn_pump_hydraulic_module()

    page = HydraulicModulePage(browser, link_open)
    page.water_toggle_switch_must_be_selected()

    page.choice_pump_manufacturer(pump_manufacturer)
    page.check_box_thermal_insulation_of_pipelines_must_not_be_selected()
    page.check_box_control_cabinet_must_not_be_selected()

    presence_of_crp = page.save_presence_of_crp()
    assert presence_of_crp == expected_presence_of_crp, \
        f'Выбранное Наличие ЧРП - ({presence_of_crp}) не соответствует ожидаемому - ({expected_presence_of_crp})'

    sha_installation_on_page = page.save_selected_sha_installation()
    assert expected_sha_installation == sha_installation_on_page, \
        f'Выбранное значение в выпадающем списке Монтаж ША - ({sha_installation_on_page}) не соответствует ' \
        f'ожидаемому - ({expected_sha_installation})'

    page.checking_selected_element_in_total_number_of_pumps(total_number_of_pumps)
    page.checking_selected_number_of_reserve_pumps(number_of_reserve_pumps)
    page.entering_nominal_flow_rate_of_pumps(pump_rated_flow)
    page.entering_nominal_pump_head(nominal_pump_head)
    page.click_btn_save_and_exit()

    # Заполнение модуля обвязки ПТО
    page = BhuSelectPage(browser, link_open)
    page.click_pto_binding_module()

    page = PtoBindingModulePage(browser, link_open)
    page.entering_temperature_from_hm(temperature_from_hm)
    page.entering_temperature_to_hm(temperature_to_hm)
    page.water_toggle_switch_must_be_selected()
    page.entering_load(load)
    page.checking_value_in_control_valve_field(control_valve)
    page.checking_value_in_electric_drive_power_supply_field(electric_drive_power_supply)
    page.entering_temperature_to_consumer(temperature_to_consumer)
    page.entering_temperature_from_consumer(temperature_from_consumer)
    page.click_btn_save_and_exit()

    page = BhuSelectPage(browser, link_open)
    page.click_btn_perform_block_calculation()
    page.checking_that_all_calculations_are_correct()
    page.click_btn_get_selection_results_in_one_file()
    page.click_btn_send_by_email()
    address_object = page.entering_address_object()
    page.click_btn_send_zip_archive_by_email()
    browser.switch_to.window(window_open)

    # page = ProfileMenuUser(browser, link_open)
    # page.go_to_page_calculations_and_ol_pto()
    # page = CalculationDropMenu(browser, link_open)
    # page.click_btn_drop_calculation()
    # page.click_btn_calculation_btp_select()

    page = CalculationBtpSelectPage(browser, link_open)
    # list_name_address_object = page.save_list_name_address_object()
    # print(address_object, 'address_object')
    # print(list_name_address_object, 'list_name_address_object')
    #
    # assert address_object in list_name_address_object, \
    #     f'Ожидаемого адреса/названия объекта - ({address_object}) нет на странице. Список адресов/названий объектов, ' \
    #     f'которые на странице - ({list_name_address_object})'


@pytest.mark.skip(reason='Пропускаем тест, так как он добавлен в смок test_prod_smoke.py')
@allure.feature('Опеновские тесты')
@allure.story('Подбор БХУ Тест выполняется только на продакшене, так как на тст нет данного функционала устоявшегося')
@pytest.mark.prod
def test_40198_selection_bhu(browser):
    selection_bhu(browser)
