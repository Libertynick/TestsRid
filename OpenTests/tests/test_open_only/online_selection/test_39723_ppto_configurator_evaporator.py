import allure
import pytest

from config import TestEnvironment
from open_pages.header.header_page import Header
from open_pages.main_page.main_page import MainPage
from open_pages.selection_online_tools_all.configurator_ppto.configurator_ppto_page import \
    ConfiguratorPptoEvaporatorPage
from open_pages.selection_tools_modal.selection_tools_modal import SelectionToolsModalPage


def ppto_configurator_evaporator(browser):
    load_value = '100'  # Значение нагрузки
    type_of_coolant_medium_hot = 'Вода'  # Тип среды на Теплоносителе
    type_of_coolant_medium_cold = 'R410A'  # Тип среды на Хладоноситель
    inlet_temperature_value = '12'  # Температура на входе
    outlet_temperature_value = '7'  # Температура на выходе
    inlet_steam_content_value = '0.3'  # Паросодержание на входе
    boiling_temperature_value = '2'  # Температура кипения
    overheat = '5'  # Перегрев
    maximum_heat_pressure_loss = '50'  # Максимальные потери давления Тепло
    maximum_cold_pressure_loss_value = '300'  # Максимальные потери давления Холод
    maximum_working_pressure_value = '30'  # Максимальное рабочее давление
    surface_reserve_value = '0'  # Запас поверхности
    flow_direction_value = 'Противоток'  # Направление потока

    page = Header(browser, TestEnvironment.LINK_OPEN_TST)
    page.go_to_option_tools()

    page = SelectionToolsModalPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.go_to_brazed_heat_exchangers_configurator()

    page = ConfiguratorPptoEvaporatorPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.load_must_be_in_kwt()
    page.load_value_check(load_value)
    page.checking_type_of_coolant_medium_hot(type_of_coolant_medium_hot)
    page.checking_type_of_coolant_medium_cold(type_of_coolant_medium_cold)
    page.checking_inlet_temperature_hot_value(inlet_temperature_value)
    page.checking_outlet_temperature_hot_value(outlet_temperature_value)
    page.checking_inlet_steam_content_value(inlet_steam_content_value)
    page.checking_boiling_temperature_value(boiling_temperature_value)
    page.checking_overheat_value(overheat)
    page.expense_hot_field_must_be_empty()
    page.expense_cold_field_must_be_empty()
    page.checking_maximum_heat_pressure_loss_value(maximum_heat_pressure_loss)
    page.checking_maximum_cold_pressure_loss_value(maximum_cold_pressure_loss_value)
    page.checking_maximum_working_pressure_value(maximum_working_pressure_value)
    page.checking_surface_reserve_value(surface_reserve_value)
    page.checking_flow_direction_value(flow_direction_value)
    page.click_btn_select_pto()

    page.revealing_details_of_first_solution_found()
    page.close_modal_details_solution()
    page.click_btn_add_to_basket_first_calc()
    page.click_btn_add_to_basket_in_modal_add_to_basket()
    page.click_btn_continue_shopping()
    name_of_first_solution_found = page.save_name_of_first_solution_found()
    print(name_of_first_solution_found, '- Первое найденное решение')
    page.click_btn_save_calculation_first_calc_on_page()
    page.entering_name_of_object_in_calculation_download_modal()
    page.entering_description_to_calc()
    page.click_btn_save_calc_in_modal_save_calc_for_evaporator(name_of_first_solution_found)


@pytest.mark.skip(
    reason='Сейчас подбираются только те ПТО у которых есть спецификация и срок поставки равен 0. На тесте таких нет.'
)
@allure.feature('Опеновские тесты')
@allure.story('39723 Конфигуратор ППТО - испаритель с авторизацией')
@pytest.mark.stage
def test_39723_ppto_configurator_evaporator_with_authorization(browser):
    """39723 Конфигуратор ППТО - испаритель с авторизацией"""
    page = MainPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.open()
    page.authorization_from_main_page(TestEnvironment.LOGIN_TST_VODOKOMFORT, TestEnvironment.PASSWORD_TST_VODOKOMFORT)

    ppto_configurator_evaporator(browser)


@pytest.mark.skip(
    reason='Сейчас подбираются только те ПТО у которых есть спецификация и срок поставки равен 0. На тесте таких нет.'
)
@allure.feature('Опеновские тесты')
@allure.story('39723 Конфигуратор ППТО - испаритель без авторизации')
@pytest.mark.stage
def test_39723_ppto_configurator_evaporator_without_authorization(browser):
    """39723 Конфигуратор ППТО - испаритель без авторизации"""
    page = MainPage(browser, TestEnvironment.LINK_OPEN_TST)
    page.open()
    ppto_configurator_evaporator(browser)
