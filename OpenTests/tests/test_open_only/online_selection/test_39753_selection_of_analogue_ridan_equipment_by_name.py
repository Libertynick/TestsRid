import allure
import pytest
from selenium.common import TimeoutException

from config import TestEnvironment
from open_pages.cart_page.cart_page import CartPage
from open_pages.header.header_page import Header
from open_pages.main_page.main_page import MainPage
from open_pages.selection_online_tools_all.selection_of_analogue_ridan_page.selection_of_analogue_ridan_page import \
    SelectionOfAnalogueRidanPage


def selection_of_analogue_ridan_equipment_by_name(browser, link_open: str, link_selection_of_an_analogue_of_ridan: str,
                                                  full_name_product: str, login: str,
                                                  password: str):
    """Подбор аналога оборудования Ридан - по наименованию"""
    direction_dict = {
        'direction': 'Система отопления',
        'value': 'SO'
        # опять поменял локаатор , тк сначала ввели новый на тесте локатор, на проде старый был, теперь они синхр-сь
    }

    page = MainPage(browser, link_open)
    page.open()
    page.authorization_from_main_page(login, password)
    page = Header(browser, link_open)
    page.click_basket()

    page = CartPage(browser, link_open)
    try:
        page.click_empty_trash()
    except TimeoutException:
        pass

    page = SelectionOfAnalogueRidanPage(browser, link_selection_of_an_analogue_of_ridan)
    page.open()
    page.click_btn_search_by_name()
    page.choice_direction(direction_dict)
    page.name_entry_in_field_search_by_name(full_name_product)
    page.click_btn_search_in_by_name_search()
    article_analog = page.saving_analogue_article_as_a_link()
    page.click_btn_add_to_cart_in_card_analog()
    article_in_modal_add_to_cart = page.save_article_in_modal_add_to_cart()
    assert article_in_modal_add_to_cart == article_analog, \
        f'Артикул в модалке добавления в корзину - ({article_in_modal_add_to_cart}) не соответствует ' \
        f'артикулу в карточке аналога, который добавляли - ({article_analog})'
    page.click_btn_add_to_cart_in_modal_select_quantity_of_products()
    page.click_btn_go_to_cart_in_modal_items_added_to_cart()

    page = CartPage(browser, link_open)
    autocorrect_list = page.check_if_there_is_code_autocorrect(article_analog)
    if len(autocorrect_list) != 0:
        assert article_in_modal_add_to_cart in autocorrect_list, \
            f'Добавляемый артикул со страницы подбора аналога - ({article_in_modal_add_to_cart}) не найден ' \
            f'в списке автоземененных кодов на странице Корзина - ({autocorrect_list})'

    else:
        article_cart_page = page.save_list_articles_in_cart()
        assert article_in_modal_add_to_cart in article_cart_page, \
            f'Добавляемый артикул со страницы подбора аналога - ({article_in_modal_add_to_cart}) не соответствует ' \
            f'артикулу на странице Корзина - ({article_cart_page})'
    page.click_empty_trash()


@pytest.mark.xdist_group(name="open")
@allure.feature('Опеновские тесты')
@allure.story('Подбор аналога оборудования Ридан - по наименованию')
@pytest.mark.stage
@pytest.mark.parametrize('link_open', [TestEnvironment.LINK_OPEN_TST])
@pytest.mark.parametrize('link_selection_of_an_analogue_of_ridan',
                         ['https://ruecom-open-tst1.ridancorp.net/search/analogs'])
@pytest.mark.parametrize('full_name_product', ['КЛАПАН БАЛАНСИРОВОЧНЫЙ ДУ15'])
@pytest.mark.parametrize('login', [TestEnvironment.LOGIN_TST_VODOKOMFORT])
@pytest.mark.parametrize('password', [TestEnvironment.PASSWORD_TST_VODOKOMFORT])
def test_39753_selection_of_analogue_ridan_equipment_by_name_tst(browser, link_open: str,
                                                                 link_selection_of_an_analogue_of_ridan: str,
                                                                 full_name_product: str,
                                                                 login, password):
    """Подбор аналога оборудования Ридан - по наименованию"""
    selection_of_analogue_ridan_equipment_by_name(browser, link_open, link_selection_of_an_analogue_of_ridan,
                                                  full_name_product, login, password)
